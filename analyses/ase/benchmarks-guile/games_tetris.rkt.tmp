(begin
  (use-modules (srfi srfi-28))
  (define (add1 x) (+ x 1))
  (define (sub1 x) (+ x 1))
  (set! *random-state* (random-state-from-platform))
  (define (input) (expt 2 64))
  (letrec*
   ((any? (lambda (v) (letrec* ((g7593 #t)) g7593)))
    (meta (lambda (v) (letrec* ((g7594 v)) g7594)))
    (member
     (lambda (v lst)
       (letrec*
        ((g7595
          (letrec*
           ((g7596
             (letrec*
              ((x-e7597 lst))
              (letrec*
               ((v1742 x-e7597))
               (cond
                ((null? v1742) (letrec* () #f))
                ((and #t #t)
                 (letrec*
                  ((v1 (car v1742)) (vs (cdr v1742)))
                  (letrec*
                   ((x-cnd7598 (eq? v v1)))
                   (if x-cnd7598 #t (member v vs)))))
                (else (error "no match found")))))))
           g7596)))
        g7595)))
    (unconstrained/c #f)
    (actor?
     (lambda (k j)
       (letrec* ((g7599 (lambda (v) (letrec* ((g7600 v)) g7600)))) g7599)))
    (nonzero?
     (lambda (v)
       (letrec* ((g7601 (letrec* ((x7602 (= v 0))) (not x7602)))) g7601))))
   (letrec*
    ((g7603
      (letrec*
       ((g7604
         (letrec*
          ((orig-+ +)
           (orig-- -)
           (orig-* *)
           (orig-/ /)
           (orig-car car)
           (orig-cdr cdr)
           (orig-cons cons)
           (orig-vector-ref vector-ref)
           (orig-vector-set vector-set!))
          (letrec*
           ((g7605 '())
            (g7606
             (letrec*
              ((empty '())
               (listof
                (lambda (contract)
                  (letrec*
                   ((g7607
                     (lambda (k j lst)
                       (letrec*
                        ((g7608
                          (map
                           (lambda (v)
                             (letrec* ((g7609 (contract k j v))) g7609))
                           lst)))
                        g7608))))
                   g7607)))
               (real?/c
                (lambda (g7259 g7260 g7261)
                  (letrec*
                   ((g7610
                     (letrec*
                      ((x-cnd7611 (real? g7261)))
                      (if x-cnd7611 g7261 (blame g7259 'real?)))))
                   g7610)))
               (boolean?/c
                (lambda (g7262 g7263 g7264)
                  (letrec*
                   ((g7612
                     (letrec*
                      ((x-cnd7613 (boolean? g7264)))
                      (if x-cnd7613 g7264 (blame g7262 'boolean?)))))
                   g7612)))
               (number?/c
                (lambda (g7265 g7266 g7267)
                  (letrec*
                   ((g7614
                     (letrec*
                      ((x-cnd7615 (number? g7267)))
                      (if x-cnd7615 g7267 (blame g7265 'number?)))))
                   g7614)))
               (any/c
                (lambda (g7268 g7269 g7270)
                  (letrec*
                   ((g7616
                     (letrec*
                      ((x-cnd7617
                        ((lambda (v) (letrec* ((g7618 #t)) g7618)) g7270)))
                      (if x-cnd7617 g7270 (blame g7268 '(lambda (v) #t))))))
                   g7616)))
               (any?/c
                (lambda (g7271 g7272 g7273)
                  (letrec*
                   ((g7619
                     (letrec*
                      ((x-cnd7620
                        ((lambda (v) (letrec* ((g7621 #t)) g7621)) g7273)))
                      (if x-cnd7620 g7273 (blame g7271 '(lambda (v) #t))))))
                   g7619)))
               (cons?/c
                (lambda (g7274 g7275 g7276)
                  (letrec*
                   ((g7622
                     (letrec*
                      ((x-cnd7623 (pair? g7276)))
                      (if x-cnd7623 g7276 (blame g7274 'pair?)))))
                   g7622)))
               (pair?/c
                (lambda (g7277 g7278 g7279)
                  (letrec*
                   ((g7624
                     (letrec*
                      ((x-cnd7625 (pair? g7279)))
                      (if x-cnd7625 g7279 (blame g7277 'pair?)))))
                   g7624)))
               (integer?/c
                (lambda (g7280 g7281 g7282)
                  (letrec*
                   ((g7626
                     (letrec*
                      ((x-cnd7627 (integer? g7282)))
                      (if x-cnd7627 g7282 (blame g7280 'integer?)))))
                   g7626)))
               (and/c
                (lambda (c1 c2)
                  (letrec*
                   ((g7628
                     (lambda (k j v)
                       (letrec*
                        ((g7629
                          (letrec*
                           ((x-cnd7630 (c1 k j v)))
                           (if x-cnd7630 (c2 k j v) #f))))
                        g7629))))
                   g7628)))
               (list-of
                (lambda (contract)
                  (letrec*
                   ((g7631
                     (lambda (k j v)
                       (letrec*
                        ((g7632
                          (letrec*
                           ((x-cnd7633 (null? v)))
                           (if x-cnd7633
                             '()
                             (letrec*
                              ((x7637
                                (letrec*
                                 ((x7638 (car v)))
                                 (contract k j x7638)))
                               (x7634
                                (letrec*
                                 ((x7636 (list-of contract)) (x7635 (cdr v)))
                                 (x7636 k j x7635))))
                              (orig-cons x7637 x7634))))))
                        g7632))))
                   g7631)))
               (any? (lambda (v) (letrec* ((g7639 #t)) g7639)))
               (nonzero?
                (lambda (v)
                  (letrec*
                   ((g7640 (letrec* ((x7641 (= v 0))) (not x7641))))
                   g7640)))
               (nonzero?/c
                (lambda (g7283 g7284 g7285)
                  (letrec*
                   ((g7642
                     (letrec*
                      ((x-cnd7643
                        ((lambda (v)
                           (letrec*
                            ((g7644 (letrec* ((x7645 (= v 0))) (not x7645))))
                            g7644))
                         g7285)))
                      (if x-cnd7643
                        g7285
                        (blame g7283 '(lambda (v) (not (= v 0))))))))
                   g7642)))
               (meta (lambda (v) (letrec* ((g7646 v)) g7646)))
               (+
                ((lambda (j7288 k7289 f7290)
                   (letrec*
                    ((g7648
                      (lambda (g7286 g7287)
                        (letrec*
                         ((g7649
                           (letrec*
                            ((x7650
                              (letrec*
                               ((x7652 (number?/c j7288 k7289 g7286))
                                (x7651 (number?/c j7288 k7289 g7287)))
                               (f7290 x7652 x7651))))
                            (number?/c j7288 k7289 x7650))))
                         g7649))))
                    g7648))
                 'server
                 'client
                 (lambda (a b) (letrec* ((g7647 (orig-+ a b))) g7647))))
               (-
                ((lambda (j7293 k7294 f7295)
                   (letrec*
                    ((g7654
                      (lambda (g7291 g7292)
                        (letrec*
                         ((g7655
                           (letrec*
                            ((x7656
                              (letrec*
                               ((x7658 (number?/c j7293 k7294 g7291))
                                (x7657 (number?/c j7293 k7294 g7292)))
                               (f7295 x7658 x7657))))
                            (number?/c j7293 k7294 x7656))))
                         g7655))))
                    g7654))
                 'server
                 'client
                 (lambda (a b) (letrec* ((g7653 (orig-- a b))) g7653))))
               (*
                ((lambda (j7298 k7299 f7300)
                   (letrec*
                    ((g7660
                      (lambda (g7296 g7297)
                        (letrec*
                         ((g7661
                           (letrec*
                            ((x7662
                              (letrec*
                               ((x7664 (number?/c j7298 k7299 g7296))
                                (x7663 (number?/c j7298 k7299 g7297)))
                               (f7300 x7664 x7663))))
                            (number?/c j7298 k7299 x7662))))
                         g7661))))
                    g7660))
                 'server
                 'client
                 (lambda (a b) (letrec* ((g7659 (orig-* a b))) g7659))))
               (/
                ((lambda (j7303 k7304 f7305)
                   (letrec*
                    ((g7666
                      (lambda (g7301 g7302)
                        (letrec*
                         ((g7667
                           (letrec*
                            ((x7668
                              (letrec*
                               ((x7670 (number?/c j7303 k7304 g7301))
                                (x7669 (number?/c j7303 k7304 g7302)))
                               (f7305 x7670 x7669))))
                            (number?/c j7303 k7304 x7668))))
                         g7667))))
                    g7666))
                 'server
                 'client
                 (lambda (a b) (letrec* ((g7665 (orig-/ a b))) g7665))))
               (car
                ((lambda (j7307 k7308 f7309)
                   (letrec*
                    ((g7672
                      (lambda (g7306)
                        (letrec*
                         ((g7673
                           (letrec*
                            ((x7674
                              (letrec*
                               ((x7675 (pair?/c j7307 k7308 g7306)))
                               (f7309 x7675))))
                            (any/c j7307 k7308 x7674))))
                         g7673))))
                    g7672))
                 'server
                 'client
                 (lambda (p) (letrec* ((g7671 (orig-car p))) g7671))))
               (cdr
                ((lambda (j7311 k7312 f7313)
                   (letrec*
                    ((g7677
                      (lambda (g7310)
                        (letrec*
                         ((g7678
                           (letrec*
                            ((x7679
                              (letrec*
                               ((x7680 (pair?/c j7311 k7312 g7310)))
                               (f7313 x7680))))
                            (any/c j7311 k7312 x7679))))
                         g7678))))
                    g7677))
                 'server
                 'client
                 (lambda (p) (letrec* ((g7676 (orig-cdr p))) g7676))))
               (cons
                ((lambda (j7316 k7317 f7318)
                   (letrec*
                    ((g7682
                      (lambda (g7314 g7315)
                        (letrec*
                         ((g7683
                           (letrec*
                            ((x7684
                              (letrec*
                               ((x7686 (any/c j7316 k7317 g7314))
                                (x7685 (any/c j7316 k7317 g7315)))
                               (f7318 x7686 x7685))))
                            (pair?/c j7316 k7317 x7684))))
                         g7683))))
                    g7682))
                 'server
                 'client
                 (lambda (a b) (letrec* ((g7681 (orig-cons a b))) g7681))))
               (vector-ref
                ((lambda (j7320 k7321 f7322)
                   (letrec*
                    ((g7688
                      (lambda (g7319)
                        (letrec*
                         ((g7689
                           (letrec*
                            ((x7690
                              (letrec*
                               ((x7691 (vector?/c j7320 k7321 g7319)))
                               (f7322 x7691))))
                            (integer?/c j7320 k7321 x7690))))
                         g7689))))
                    g7688))
                 'server
                 'client
                 (lambda (v i)
                   (letrec* ((g7687 (orig-vector-ref v i))) g7687))))
               (vector-set!
                ((lambda (j7325 k7326 f7327)
                   (letrec*
                    ((g7693
                      (lambda (g7323 g7324)
                        (letrec*
                         ((g7694
                           (letrec*
                            ((x7695
                              (letrec*
                               ((x7697 (vector?/c j7325 k7326 g7323))
                                (x7696 (integer?/c j7325 k7326 g7324)))
                               (f7327 x7697 x7696))))
                            (any/c j7325 k7326 x7695))))
                         g7694))))
                    g7693))
                 'server
                 'client
                 (lambda (vec i v)
                   (letrec* ((g7692 (orig-vector-set! vec i v))) g7692))))
               (assert
                (lambda (cnd)
                  (letrec*
                   ((g7698 (if cnd '() (error "assertion failed"))))
                   g7698)))
               (cdddr
                (lambda (x)
                  (letrec*
                   ((g7699
                     (letrec*
                      ((x7700 (letrec* ((x7701 (cdr x))) (cdr x7701))))
                      (cdr x7700))))
                   g7699)))
               (__toplevel_set-car! set-car!)
               (map
                (lambda (f l)
                  (letrec*
                   ((g7702 (letrec* ((x7705 (procedure? f))) (assert x7705)))
                    (g7703 (letrec* ((x7706 (list? l))) (assert x7706)))
                    (g7704
                     (letrec*
                      ((x-cnd7707 (null? l)))
                      (if x-cnd7707
                        '()
                        (letrec*
                         ((x7710 (letrec* ((x7711 (car l))) (f x7711)))
                          (x7708 (letrec* ((x7709 (cdr l))) (map f x7709))))
                         (cons x7710 x7708))))))
                   g7704)))
               (cdar
                (lambda (x)
                  (letrec*
                   ((g7712 (letrec* ((x7713 (car x))) (cdr x7713))))
                   g7712)))
               (cadadr
                (lambda (x)
                  (letrec*
                   ((g7714
                     (letrec*
                      ((x7715
                        (letrec*
                         ((x7716 (letrec* ((x7717 (cdr x))) (car x7717))))
                         (cdr x7716))))
                      (car x7715))))
                   g7714)))
               (cdadar
                (lambda (x)
                  (letrec*
                   ((g7718
                     (letrec*
                      ((x7719
                        (letrec*
                         ((x7720 (letrec* ((x7721 (car x))) (cdr x7721))))
                         (car x7720))))
                      (cdr x7719))))
                   g7718)))
               (call-with-output-file
                (lambda (filename proc)
                  (letrec*
                   ((g7722
                     (letrec* ((x7725 (string? filename))) (assert x7725)))
                    (g7723
                     (letrec* ((x7726 (procedure? proc))) (assert x7726)))
                    (g7724
                     (letrec*
                      ((output-port (open-output-file filename))
                       (res (proc output-port)))
                      (letrec*
                       ((g7727 (close-output-port output-port)) (g7728 res))
                       g7728))))
                   g7724)))
               (caddr
                (lambda (x)
                  (letrec*
                   ((g7729
                     (letrec*
                      ((x7730 (letrec* ((x7731 (cdr x))) (cdr x7731))))
                      (car x7730))))
                   g7729)))
               (cdaadr
                (lambda (x)
                  (letrec*
                   ((g7732
                     (letrec*
                      ((x7733
                        (letrec*
                         ((x7734 (letrec* ((x7735 (cdr x))) (car x7735))))
                         (car x7734))))
                      (cdr x7733))))
                   g7732)))
               (assq
                (lambda (k l)
                  (letrec*
                   ((g7736 (letrec* ((x7738 (list? l))) (assert x7738)))
                    (g7737
                     (letrec*
                      ((x-cnd7739 (null? l)))
                      (if x-cnd7739
                        #f
                        (letrec*
                         ((x-cnd7740
                           (letrec* ((x7741 (caar l))) (eq? x7741 k))))
                         (if x-cnd7740
                           (car l)
                           (letrec* ((x7742 (cdr l))) (assq k x7742))))))))
                   g7737)))
               (even?
                (lambda (x)
                  (letrec*
                   ((g7743 (letrec* ((x7744 (modulo x 2))) (= 0 x7744))))
                   g7743)))
               (list->string
                (lambda (l)
                  (letrec*
                   ((g7745 (letrec* ((x7747 (list? l))) (assert x7747)))
                    (g7746
                     (letrec*
                      ((x-cnd7748 (null? l)))
                      (if x-cnd7748
                        ""
                        (letrec*
                         ((x7751
                           (letrec* ((x7752 (car l))) (char->string x7752)))
                          (x7749
                           (letrec* ((x7750 (cdr l))) (list->string x7750))))
                         (string-append x7751 x7749))))))
                   g7746)))
               (char<=?
                (lambda (c1 c2)
                  (letrec*
                   ((g7753 (letrec* ((x7756 (char? c1))) (assert x7756)))
                    (g7754 (letrec* ((x7757 (char? c2))) (assert x7757)))
                    (g7755
                     (letrec*
                      ((val7241 (char<? c1 c2)))
                      (letrec*
                       ((g7758 (if val7241 val7241 (char=? c1 c2))))
                       g7758))))
                   g7755)))
               (cdddar
                (lambda (x)
                  (letrec*
                   ((g7759
                     (letrec*
                      ((x7760
                        (letrec*
                         ((x7761 (letrec* ((x7762 (car x))) (cdr x7762))))
                         (cdr x7761))))
                      (cdr x7760))))
                   g7759)))
               (list-tail
                (lambda (x k)
                  (letrec*
                   ((g7763 (letrec* ((x7766 (list? l))) (assert x7766)))
                    (g7764 (letrec* ((x7767 (number?))) (assert x7767)))
                    (g7765
                     (letrec*
                      ((x-cnd7768 (zero? k)))
                      (if x-cnd7768
                        x
                        (letrec*
                         ((x7770 (cdr x)) (x7769 (- k 1)))
                         (list-tail x7770 x7769))))))
                   g7765)))
               (halt (lambda () (letrec* ((g7771 '())) g7771)))
               (char-alphabetic?
                (lambda (c)
                  (letrec*
                   ((g7772
                     (letrec*
                      ((x-cnd7773
                        (letrec* ((x7774 #\a)) (char-ci>=? c x7774))))
                      (if x-cnd7773
                        (letrec* ((x7775 #\z)) (char-ci<=? c x7775))
                        #f))))
                   g7772)))
               (<=
                (lambda (x y)
                  (letrec*
                   ((g7776 (letrec* ((x7778 (number? x))) (assert x7778)))
                    (g7777
                     (letrec*
                      ((val7242 (< x y)))
                      (letrec*
                       ((g7779
                         (if val7242
                           val7242
                           (letrec*
                            ((val7243 (= x y)))
                            (letrec*
                             ((g7780 (if val7243 val7243 #f)))
                             g7780)))))
                       g7779))))
                   g7777)))
               (char-whitespace?
                (lambda (c)
                  (letrec*
                   ((g7781
                     (letrec*
                      ((val7244
                        (letrec* ((x7782 (char->integer c))) (= x7782 9))))
                      (letrec*
                       ((g7783
                         (if val7244
                           val7244
                           (letrec*
                            ((val7245
                              (letrec*
                               ((x7784 (char->integer c)))
                               (= x7784 10))))
                            (letrec*
                             ((g7785
                               (if val7245
                                 val7245
                                 (letrec*
                                  ((x7786 (char->integer c)))
                                  (= x7786 32)))))
                             g7785)))))
                       g7783))))
                   g7781)))
               (cddar
                (lambda (x)
                  (letrec*
                   ((g7787
                     (letrec*
                      ((x7788 (letrec* ((x7789 (car x))) (cdr x7789))))
                      (cdr x7788))))
                   g7787)))
               (positive?
                (lambda (x)
                  (letrec*
                   ((g7790 (letrec* ((x7792 (number? x))) (assert x7792)))
                    (g7791 (> x 0)))
                   g7791)))
               ($pc '())
               (ref-set set-car!)
               (void (lambda () (letrec* ((g7793 #f)) g7793)))
               (cddr
                (lambda (x)
                  (letrec*
                   ((g7794 (letrec* ((x7795 (cdr x))) (cdr x7795))))
                   g7794)))
               (truncate
                (lambda (x)
                  (letrec*
                   ((g7796 (letrec* ((x7798 (number? x))) (assert x7798)))
                    (g7797
                     (letrec*
                      ((x-cnd7799 (< x 0)))
                      (if x-cnd7799 (ceiling x) (floor x)))))
                   g7797)))
               ($cmp '())
               (equal?
                (lambda (a b)
                  (letrec*
                   ((g7800
                     (letrec*
                      ((val7246 (eq? a b)))
                      (letrec*
                       ((g7801
                         (if val7246
                           val7246
                           (letrec*
                            ((val7247
                              (letrec*
                               ((x7803 (null? a)) (x7802 (null? b)))
                               (and x7803 x7802))))
                            (letrec*
                             ((g7804
                               (if val7247
                                 val7247
                                 (letrec*
                                  ((val7248
                                    (letrec*
                                     ((x7807 (string? a))
                                      (x7806 (string? b))
                                      (x7805 (string=? a b)))
                                     (and x7807 x7806 x7805))))
                                  (letrec*
                                   ((g7808
                                     (if val7248
                                       val7248
                                       (letrec*
                                        ((val7249
                                          (letrec*
                                           ((x7816 (pair? a))
                                            (x7815 (pair? b))
                                            (x7812
                                             (letrec*
                                              ((x7814 (car a)) (x7813 (car b)))
                                              (equal? x7814 x7813)))
                                            (x7809
                                             (letrec*
                                              ((x7811 (cdr a)) (x7810 (cdr b)))
                                              (equal? x7811 x7810))))
                                           (and x7816 x7815 x7812 x7809))))
                                        (letrec*
                                         ((g7817
                                           (if val7249
                                             val7249
                                             (letrec*
                                              ((x7833 (vector? a))
                                               (x7832 (vector? b))
                                               (x7818
                                                (letrec*
                                                 ((n (vector-length a)))
                                                 (letrec*
                                                  ((g7819
                                                    (letrec*
                                                     ((x7830
                                                       (letrec*
                                                        ((x7831
                                                          (vector-length b)))
                                                        (= x7831 n)))
                                                      (x7820
                                                       (letrec*
                                                        ((loop
                                                          (lambda (i)
                                                            (letrec*
                                                             ((g7821
                                                               (letrec*
                                                                ((x7828
                                                                  (= i n))
                                                                 (x7822
                                                                  (letrec*
                                                                   ((x7825
                                                                     (letrec*
                                                                      ((x7827
                                                                        (vector-ref
                                                                         a
                                                                         i))
                                                                       (x7826
                                                                        (vector-ref
                                                                         b
                                                                         i)))
                                                                      (equal?
                                                                       x7827
                                                                       x7826)))
                                                                    (x7823
                                                                     (letrec*
                                                                      ((x7824
                                                                        (+
                                                                         i
                                                                         1)))
                                                                      (loop
                                                                       x7824))))
                                                                   (and x7825
                                                                        x7823))))
                                                                (or x7828
                                                                    x7822))))
                                                             g7821))))
                                                        (letrec*
                                                         ((g7829 (loop 0)))
                                                         g7829))))
                                                     (and x7830 x7820))))
                                                  g7819))))
                                              (and x7833 x7832 x7818)))))
                                         g7817)))))
                                   g7808)))))
                             g7804)))))
                       g7801))))
                   g7800)))
               (cdaaar
                (lambda (x)
                  (letrec*
                   ((g7834
                     (letrec*
                      ((x7835
                        (letrec*
                         ((x7836 (letrec* ((x7837 (car x))) (car x7837))))
                         (car x7836))))
                      (cdr x7835))))
                   g7834)))
               (caaddr
                (lambda (x)
                  (letrec*
                   ((g7838
                     (letrec*
                      ((x7839
                        (letrec*
                         ((x7840 (letrec* ((x7841 (cdr x))) (cdr x7841))))
                         (car x7840))))
                      (car x7839))))
                   g7838)))
               (eqv? (lambda (x y) (letrec* ((g7842 (eq? x y))) g7842)))
               (>=
                (lambda (x y)
                  (letrec*
                   ((g7843 (letrec* ((x7845 (number? x))) (assert x7845)))
                    (g7844
                     (letrec*
                      ((val7250 (> x y)))
                      (letrec*
                       ((g7846
                         (if val7250
                           val7250
                           (letrec*
                            ((val7251 (= x y)))
                            (letrec*
                             ((g7847 (if val7251 val7251 #f)))
                             g7847)))))
                       g7846))))
                   g7844)))
               (call-with-input-file
                (lambda (filename proc)
                  (letrec*
                   ((g7848
                     (letrec* ((x7851 (string? filename))) (assert x7851)))
                    (g7849
                     (letrec* ((x7852 (procedure? proc))) (assert x7852)))
                    (g7850
                     (letrec*
                      ((input-port (open-input-file filename))
                       (res (proc input-port)))
                      (letrec*
                       ((g7853 (close-input-port input-port)) (g7854 res))
                       g7854))))
                   g7850)))
               (ref (lambda (x) (letrec* ((g7855 (cons x '()))) g7855)))
               (char>=?
                (lambda (c1 c2)
                  (letrec*
                   ((g7856 (letrec* ((x7859 (char? c1))) (assert x7859)))
                    (g7857 (letrec* ((x7860 (char? c2))) (assert x7860)))
                    (g7858
                     (letrec*
                      ((val7252 (char>? c1 c2)))
                      (letrec*
                       ((g7861 (if val7252 val7252 (char=? c1 c2))))
                       g7861))))
                   g7858)))
               (cdaar
                (lambda (x)
                  (letrec*
                   ((g7862
                     (letrec*
                      ((x7863 (letrec* ((x7864 (car x))) (car x7864))))
                      (cdr x7863))))
                   g7862)))
               (cdaddr
                (lambda (x)
                  (letrec*
                   ((g7865
                     (letrec*
                      ((x7866
                        (letrec*
                         ((x7867 (letrec* ((x7868 (cdr x))) (cdr x7868))))
                         (car x7867))))
                      (cdr x7866))))
                   g7865)))
               (__toplevel_cdr cdr)
               (cadar
                (lambda (x)
                  (letrec*
                   ((g7869
                     (letrec*
                      ((x7870 (letrec* ((x7871 (car x))) (cdr x7871))))
                      (car x7870))))
                   g7869)))
               (caadr
                (lambda (x)
                  (letrec*
                   ((g7872
                     (letrec*
                      ((x7873 (letrec* ((x7874 (cdr x))) (car x7874))))
                      (car x7873))))
                   g7872)))
               (char-ci>?
                (lambda (c1 c2)
                  (letrec*
                   ((g7875 (letrec* ((x7878 (char? c1))) (assert x7878)))
                    (g7876 (letrec* ((x7879 (char? c2))) (assert x7879)))
                    (g7877 (letrec* ((x7880 (char-ci<=? c1 c2))) (not x7880))))
                   g7877)))
               (__toplevel_set-cdr! set-cdr!)
               (caaaar
                (lambda (x)
                  (letrec*
                   ((g7881
                     (letrec*
                      ((x7882
                        (letrec*
                         ((x7883 (letrec* ((x7884 (car x))) (car x7884))))
                         (car x7883))))
                      (car x7882))))
                   g7881)))
               (negative?
                (lambda (x)
                  (letrec*
                   ((g7885 (letrec* ((x7887 (number? x))) (assert x7887)))
                    (g7886 (< x 0)))
                   g7886)))
               (memv (lambda (e l) (letrec* ((g7888 (memq e l))) g7888)))
               (caaar
                (lambda (x)
                  (letrec*
                   ((g7889
                     (letrec*
                      ((x7890 (letrec* ((x7891 (car x))) (car x7891))))
                      (car x7890))))
                   g7889)))
               (debug (lambda (e) (letrec* ((g7892 '())) g7892)))
               (reverse
                (lambda (l)
                  (letrec*
                   ((g7893 (letrec* ((x7895 (list? l))) (assert x7895)))
                    (g7894
                     (letrec*
                      ((x-cnd7896 (null? l)))
                      (if x-cnd7896
                        '()
                        (letrec*
                         ((x7899 (letrec* ((x7900 (cdr l))) (reverse x7900)))
                          (x7897 (letrec* ((x7898 (car l))) (list x7898))))
                         (append x7899 x7897))))))
                   g7894)))
               (caaadr
                (lambda (x)
                  (letrec*
                   ((g7901
                     (letrec*
                      ((x7902
                        (letrec*
                         ((x7903 (letrec* ((x7904 (cdr x))) (car x7904))))
                         (car x7903))))
                      (car x7902))))
                   g7901)))
               (cddadr
                (lambda (x)
                  (letrec*
                   ((g7905
                     (letrec*
                      ((x7906
                        (letrec*
                         ((x7907 (letrec* ((x7908 (cdr x))) (car x7908))))
                         (cdr x7907))))
                      (cdr x7906))))
                   g7905)))
               (odd?
                (lambda (x)
                  (letrec*
                   ((g7909 (letrec* ((x7911 (number? x))) (assert x7911)))
                    (g7910 (letrec* ((x7912 (modulo x 2))) (= 1 x7912))))
                   g7910)))
               (caadar
                (lambda (x)
                  (letrec*
                   ((g7913
                     (letrec*
                      ((x7914
                        (letrec*
                         ((x7915 (letrec* ((x7916 (car x))) (cdr x7916))))
                         (car x7915))))
                      (car x7914))))
                   g7913)))
               (apply
                (lambda (proc args)
                  (letrec*
                   ((g7917
                     (letrec* ((x7920 (procedure? proc))) (assert x7920)))
                    (g7918 (letrec* ((x7921 (list? args))) (assert x7921)))
                    (g7919
                     (letrec*
                      ((x-cnd7922 (null? args)))
                      (if x-cnd7922
                        (letrec* ((g7923 (proc))) g7923)
                        (letrec*
                         ((x-cnd7924
                           (letrec* ((x7925 (cdr args))) (null? x7925))))
                         (if x-cnd7924
                           (letrec*
                            ((g7926
                              (letrec* ((x7927 (car args))) (proc x7927))))
                            g7926)
                           (letrec*
                            ((x-cnd7928
                              (letrec* ((x7929 (cddr args))) (null? x7929))))
                            (if x-cnd7928
                              (letrec*
                               ((g7930
                                 (letrec*
                                  ((x7932 (car args)) (x7931 (cadr args)))
                                  (proc x7932 x7931))))
                               g7930)
                              (letrec*
                               ((x-cnd7933
                                 (letrec*
                                  ((x7934 (cdddr args)))
                                  (null? x7934))))
                               (if x-cnd7933
                                 (letrec*
                                  ((g7935
                                    (letrec*
                                     ((x7938 (car args))
                                      (x7937 (cadr args))
                                      (x7936 (caddr args)))
                                     (proc x7938 x7937 x7936))))
                                  g7935)
                                 (letrec*
                                  ((x-cnd7939
                                    (letrec*
                                     ((x7940 (cddddr args)))
                                     (null? x7940))))
                                  (if x-cnd7939
                                    (letrec*
                                     ((g7941
                                       (letrec*
                                        ((x7945 (car args))
                                         (x7944 (cadr args))
                                         (x7943 (caddr args))
                                         (x7942 (cadddr args)))
                                        (proc x7945 x7944 x7943 x7942))))
                                     g7941)
                                    (letrec*
                                     ((x-cnd7946
                                       (letrec*
                                        ((x7947
                                          (letrec*
                                           ((x7948 (cddddr args)))
                                           (cdr x7948))))
                                        (null? x7947))))
                                     (if x-cnd7946
                                       (letrec*
                                        ((g7949
                                          (letrec*
                                           ((x7955 (car args))
                                            (x7954 (cadr args))
                                            (x7953 (caddr args))
                                            (x7952 (cadddr args))
                                            (x7950
                                             (letrec*
                                              ((x7951 (cddddr args)))
                                              (car x7951))))
                                           (proc
                                            x7955
                                            x7954
                                            x7953
                                            x7952
                                            x7950))))
                                        g7949)
                                       (letrec*
                                        ((x-cnd7956
                                          (letrec*
                                           ((x7957
                                             (letrec*
                                              ((x7958 (cddddr args)))
                                              (cddr x7958))))
                                           (null? x7957))))
                                        (if x-cnd7956
                                          (letrec*
                                           ((g7959
                                             (letrec*
                                              ((x7967 (car args))
                                               (x7966 (cadr args))
                                               (x7965 (caddr args))
                                               (x7964 (cadddr args))
                                               (x7962
                                                (letrec*
                                                 ((x7963 (cddddr args)))
                                                 (car x7963)))
                                               (x7960
                                                (letrec*
                                                 ((x7961 (cddddr args)))
                                                 (cadr x7961))))
                                              (proc
                                               x7967
                                               x7966
                                               x7965
                                               x7964
                                               x7962
                                               x7960))))
                                           g7959)
                                          (letrec*
                                           ((x-cnd7968
                                             (letrec*
                                              ((x7969
                                                (letrec*
                                                 ((x7970 (cddddr args)))
                                                 (cdddr x7970))))
                                              (null? x7969))))
                                           (if x-cnd7968
                                             (letrec*
                                              ((g7971
                                                (letrec*
                                                 ((x7981 (car args))
                                                  (x7980 (cadr args))
                                                  (x7979 (caddr args))
                                                  (x7978 (cadddr args))
                                                  (x7976
                                                   (letrec*
                                                    ((x7977 (cddddr args)))
                                                    (car x7977)))
                                                  (x7974
                                                   (letrec*
                                                    ((x7975 (cddddr args)))
                                                    (cadr x7975)))
                                                  (x7972
                                                   (letrec*
                                                    ((x7973 (cddddr args)))
                                                    (caddr x7973))))
                                                 (proc
                                                  x7981
                                                  x7980
                                                  x7979
                                                  x7978
                                                  x7976
                                                  x7974
                                                  x7972))))
                                              g7971)
                                             (letrec*
                                              ((g7982
                                                (error "Unsupported call.")))
                                              g7982)))))))))))))))))))
                   g7919)))
               (member
                (lambda (e l)
                  (letrec*
                   ((g7983 (letrec* ((x7985 (list? l))) (assert x7985)))
                    (g7984
                     (letrec*
                      ((x-cnd7986 (null? l)))
                      (if x-cnd7986
                        #f
                        (letrec*
                         ((x-cnd7987
                           (letrec* ((x7988 (car l))) (equal? x7988 e))))
                         (if x-cnd7987
                           l
                           (letrec* ((x7989 (cdr l))) (member e x7989))))))))
                   g7984)))
               (cddddr
                (lambda (x)
                  (letrec*
                   ((g7990
                     (letrec*
                      ((x7991
                        (letrec*
                         ((x7992 (letrec* ((x7993 (cdr x))) (cdr x7993))))
                         (cdr x7992))))
                      (cdr x7991))))
                   g7990)))
               (cadddr
                (lambda (x)
                  (letrec*
                   ((g7994
                     (letrec*
                      ((x7995
                        (letrec*
                         ((x7996 (letrec* ((x7997 (cdr x))) (cdr x7997))))
                         (cdr x7996))))
                      (car x7995))))
                   g7994)))
               (int-top (lambda () (letrec* ((g7998 (random 42))) g7998)))
               (zero?
                (lambda (x)
                  (letrec*
                   ((g7999 (letrec* ((x8001 (number? x))) (assert x8001)))
                    (g8000 (= x 0)))
                   g8000)))
               (string>=?
                (lambda (s1 s2)
                  (letrec*
                   ((g8002
                     (letrec*
                      ((val7253 (string>? s1 s2)))
                      (letrec*
                       ((g8003 (if val7253 val7253 (string=? s1 s2))))
                       g8003))))
                   g8002)))
               (cadr
                (lambda (x)
                  (letrec*
                   ((g8004 (letrec* ((x8005 (cdr x))) (car x8005))))
                   g8004)))
               (__toplevel_car car)
               (list?
                (lambda (l)
                  (letrec*
                   ((g8006
                     (letrec*
                      ((val7254
                        (letrec*
                         ((x8009 (pair? l))
                          (x8007 (letrec* ((x8008 (cdr l))) (list? x8008))))
                         (and x8009 x8007))))
                      (letrec*
                       ((g8010 (if val7254 val7254 (null? l))))
                       g8010))))
                   g8006)))
               (cddaar
                (lambda (x)
                  (letrec*
                   ((g8011
                     (letrec*
                      ((x8012
                        (letrec*
                         ((x8013 (letrec* ((x8014 (car x))) (car x8014))))
                         (cdr x8013))))
                      (cdr x8012))))
                   g8011)))
               (char-numeric?
                (lambda (c)
                  (letrec*
                   ((g8015
                     (letrec*
                      ((x-cnd8016 (letrec* ((x8017 #\0)) (char<=? x8017 c))))
                      (if x-cnd8016
                        (letrec* ((x8018 #\9)) (char<=? c x8018))
                        #f))))
                   g8015)))
               (__toplevel_cons cons)
               (assv
                (lambda (k l)
                  (letrec*
                   ((g8019 (letrec* ((x8021 (list? l))) (assert x8021)))
                    (g8020
                     (letrec*
                      ((x-cnd8022 (null? l)))
                      (if x-cnd8022
                        #f
                        (letrec*
                         ((x-cnd8023
                           (letrec* ((x8024 (caar l))) (eqv? x8024 k))))
                         (if x-cnd8023
                           (car l)
                           (letrec* ((x8025 (cdr l))) (assq k x8025))))))))
                   g8020)))
               (not (lambda (x) (letrec* ((g8026 (if x #f #t))) g8026)))
               (__toplevel_append
                (lambda (l1 l2) (letrec* ((g8027 (append l1 l2))) g8027)))
               (memq
                (lambda (e l)
                  (letrec*
                   ((g8028 (letrec* ((x8030 (list? l))) (assert x8030)))
                    (g8029
                     (letrec*
                      ((x-cnd8031 (null? l)))
                      (if x-cnd8031
                        #f
                        (letrec*
                         ((x-cnd8032
                           (letrec* ((x8033 (car l))) (eq? x8033 e))))
                         (if x-cnd8032
                           l
                           (letrec* ((x8034 (cdr l))) (memq e x8034))))))))
                   g8029)))
               (cadaar
                (lambda (x)
                  (letrec*
                   ((g8035
                     (letrec*
                      ((x8036
                        (letrec*
                         ((x8037 (letrec* ((x8038 (car x))) (car x8038))))
                         (cdr x8037))))
                      (car x8036))))
                   g8035)))
               (length
                (lambda (l)
                  (letrec*
                   ((g8039 (letrec* ((x8041 (list? l))) (assert x8041)))
                    (g8040
                     (letrec*
                      ((rec
                        (lambda (l)
                          (letrec*
                           ((g8042
                             (letrec*
                              ((x-cnd8043 (null? l)))
                              (if x-cnd8043
                                0
                                (letrec*
                                 ((x8044
                                   (letrec* ((x8045 (cdr l))) (rec x8045))))
                                 (+ 1 x8044))))))
                           g8042))))
                      (letrec* ((g8046 (rec l))) g8046))))
                   g8040)))
               (char-ci<=?
                (lambda (c1 c2)
                  (letrec*
                   ((g8047 (letrec* ((x8050 (char? c1))) (assert x8050)))
                    (g8048 (letrec* ((x8051 (char? c2))) (assert x8051)))
                    (g8049
                     (letrec*
                      ((val7255 (char-ci<? c1 c2)))
                      (letrec*
                       ((g8052 (if val7255 val7255 (char-ci=? c1 c2))))
                       g8052))))
                   g8049)))
               (string>?
                (lambda (s1 s2)
                  (letrec*
                   ((g8053 (letrec* ((x8054 (string<=? s1 s2))) (not x8054))))
                   g8053)))
               (cdadr
                (lambda (x)
                  (letrec*
                   ((g8055
                     (letrec*
                      ((x8056 (letrec* ((x8057 (cdr x))) (car x8057))))
                      (cdr x8056))))
                   g8055)))
               (assoc
                (lambda (k l)
                  (letrec*
                   ((g8058 (letrec* ((x8060 (list? l))) (assert x8060)))
                    (g8059
                     (letrec*
                      ((x-cnd8061 (null? l)))
                      (if x-cnd8061
                        #f
                        (letrec*
                         ((x-cnd8062
                           (letrec* ((x8063 (caar l))) (equal? x8063 k))))
                         (if x-cnd8062
                           (car l)
                           (letrec* ((x8064 (cdr l))) (assoc k x8064))))))))
                   g8059)))
               (caar
                (lambda (x)
                  (letrec*
                   ((g8065 (letrec* ((x8066 (car x))) (car x8066))))
                   g8065)))
               (char>?
                (lambda (c1 c2)
                  (letrec*
                   ((g8067 (letrec* ((x8070 (char? c1))) (assert x8070)))
                    (g8068 (letrec* ((x8071 (char? c2))) (assert x8071)))
                    (g8069 (letrec* ((x8072 (char<=? c1 c2))) (not x8072))))
                   g8069)))
               (string<=?
                (lambda (s1 s2)
                  (letrec*
                   ((g8073
                     (letrec*
                      ((val7256 (string<? s1 s2)))
                      (letrec*
                       ((g8074 (if val7256 val7256 (string=? s1 s2))))
                       g8074))))
                   g8073)))
               (for-each
                (lambda (f l)
                  (letrec*
                   ((g8075 (letrec* ((x8078 (procedure? f))) (assert x8078)))
                    (g8076 (letrec* ((x8079 (list? l))) (assert x8079)))
                    (g8077
                     (letrec*
                      ((x-cnd8080 (null? l)))
                      (if x-cnd8080
                        #t
                        (letrec*
                         ((x-cnd8081 (pair? l)))
                         (if x-cnd8081
                           (letrec*
                            ((g8082 (letrec* ((x8084 (car l))) (f x8084)))
                             (g8083
                              (letrec* ((x8085 (cdr l))) (for-each f x8085))))
                            g8083)
                           '()))))))
                   g8077)))
               (abs
                (lambda (x)
                  (letrec*
                   ((g8086 (letrec* ((x8088 (number? x))) (assert x8088)))
                    (g8087
                     (letrec* ((x-cnd8089 (< x 0))) (if x-cnd8089 (- 0 x) x))))
                   g8087)))
               (char-ci>=?
                (lambda (c1 c2)
                  (letrec*
                   ((g8090 (letrec* ((x8093 (char? c1))) (assert x8093)))
                    (g8091 (letrec* ((x8094 (char? c2))) (assert x8094)))
                    (g8092
                     (letrec*
                      ((val7257 (char-ci>? c1 c2)))
                      (letrec*
                       ((g8095 (if val7257 val7257 (char-ci=? c1 c2))))
                       g8095))))
                   g8092)))
               (caddar
                (lambda (x)
                  (letrec*
                   ((g8096
                     (letrec*
                      ((x8097
                        (letrec*
                         ((x8098 (letrec* ((x8099 (car x))) (cdr x8099))))
                         (cdr x8098))))
                      (car x8097))))
                   g8096)))
               (newline (lambda () (letrec* ((g8100 #f)) g8100)))
               (lcm
                (lambda (m n)
                  (letrec*
                   ((g8101
                     (letrec*
                      ((x8103 (letrec* ((x8104 (* m n))) (abs x8104)))
                       (x8102 (gcd m n)))
                      (/ x8103 x8102))))
                   g8101)))
               (deref car)
               (>
                (lambda (x y)
                  (letrec*
                   ((g8105 (letrec* ((x8107 (number? x))) (assert x8107)))
                    (g8106 (letrec* ((x8108 (<= x y))) (not x8108))))
                   g8106)))
               (list-ref
                (lambda (l index)
                  (letrec*
                   ((g8109 (letrec* ((x8113 (list? l))) (assert x8113)))
                    (g8110 (letrec* ((x8114 (number? index))) (assert x8114)))
                    (g8111
                     (letrec*
                      ((x8115 (letrec* ((x8116 (length l))) (< index x8116))))
                      (assert x8115)))
                    (g8112
                     (letrec*
                      ((x-cnd8117 (= index 0)))
                      (if x-cnd8117
                        (car l)
                        (letrec*
                         ((x8119 (cdr l)) (x8118 (- index 1)))
                         (list-ref x8119 x8118))))))
                   g8112)))
               (gcd
                (lambda (a b)
                  (letrec*
                   ((g8120
                     (letrec*
                      ((x-cnd8121 (= b 0)))
                      (if x-cnd8121
                        a
                        (letrec* ((x8122 (modulo a b))) (gcd b x8122))))))
                   g8120)))
               (block
                (lambda (x7571 y7572 color7573)
                  (letrec*
                   ((g8123
                     (letrec*
                      ((x8124
                        (letrec*
                         ((x8125
                           (letrec*
                            ((x8126 (cons color7573 '())))
                            (cons y7572 x8126))))
                         (cons x7571 x8125))))
                      (cons 'block x8124))))
                   g8123)))
               (block?
                (lambda (block7570)
                  (letrec*
                   ((g8127
                     (letrec* ((x8128 (car block7570))) (eq? x8128 'block))))
                   g8127)))
               (block-x
                (lambda (block)
                  (letrec*
                   ((g8129 (letrec* ((x8130 (cdr block))) (car x8130))))
                   g8129)))
               (block-y
                (lambda (block)
                  (letrec*
                   ((g8131
                     (letrec*
                      ((x8132 (letrec* ((x8133 (cdr block))) (cdr x8133))))
                      (car x8132))))
                   g8131)))
               (block-color
                (lambda (block)
                  (letrec*
                   ((g8134
                     (letrec*
                      ((x8135
                        (letrec*
                         ((x8136 (letrec* ((x8137 (cdr block))) (cdr x8137))))
                         (cdr x8136))))
                      (car x8135))))
                   g8134)))
               (tetra
                (lambda (center7578 blocks7579)
                  (letrec*
                   ((g8138
                     (letrec*
                      ((x8139
                        (letrec*
                         ((x8140 (cons blocks7579 '())))
                         (cons center7578 x8140))))
                      (cons 'tetra x8139))))
                   g8138)))
               (tetra?
                (lambda (tetra7577)
                  (letrec*
                   ((g8141
                     (letrec* ((x8142 (car tetra7577))) (eq? x8142 'tetra))))
                   g8141)))
               (tetra-center
                (lambda (tetra)
                  (letrec*
                   ((g8143 (letrec* ((x8144 (cdr tetra))) (car x8144))))
                   g8143)))
               (tetra-blocks
                (lambda (tetra)
                  (letrec*
                   ((g8145
                     (letrec*
                      ((x8146 (letrec* ((x8147 (cdr tetra))) (cdr x8147))))
                      (car x8146))))
                   g8145)))
               (world
                (lambda (tetra7583 blocks7584)
                  (letrec*
                   ((g8148
                     (letrec*
                      ((x8149
                        (letrec*
                         ((x8150 (cons blocks7584 '())))
                         (cons tetra7583 x8150))))
                      (cons 'world x8149))))
                   g8148)))
               (world?
                (lambda (world7582)
                  (letrec*
                   ((g8151
                     (letrec* ((x8152 (car world7582))) (eq? x8152 'world))))
                   g8151)))
               (world-tetra
                (lambda (world)
                  (letrec*
                   ((g8153 (letrec* ((x8154 (cdr world))) (car x8154))))
                   g8153)))
               (world-blocks
                (lambda (world)
                  (letrec*
                   ((g8155
                     (letrec*
                      ((x8156 (letrec* ((x8157 (cdr world))) (cdr x8157))))
                      (car x8156))))
                   g8155)))
               (posn
                (lambda (x7588 y7589)
                  (letrec*
                   ((g8158
                     (letrec*
                      ((x8159
                        (letrec*
                         ((x8160 (cons y7589 '())))
                         (cons x7588 x8160))))
                      (cons 'posn x8159))))
                   g8158)))
               (posn?
                (lambda (posn7587)
                  (letrec*
                   ((g8161
                     (letrec* ((x8162 (car posn7587))) (eq? x8162 'posn))))
                   g8161)))
               (posn-x
                (lambda (posn)
                  (letrec*
                   ((g8163 (letrec* ((x8164 (cdr posn))) (car x8164))))
                   g8163)))
               (posn-y
                (lambda (posn)
                  (letrec*
                   ((g8165
                     (letrec*
                      ((x8166 (letrec* ((x8167 (cdr posn))) (cdr x8167))))
                      (car x8166))))
                   g8165)))
               (COLOR/C symbol?)
               (POSN/C
                (lambda (j7329 k7330 v7328)
                  (letrec*
                   ((g8168
                     (letrec*
                      ((checked7331
                        (letrec*
                         ((x8169 (car v7328)))
                         (real?/c j7329 k7330 x8169))))
                      (letrec*
                       ((g8170
                         (letrec*
                          ((checked7332
                            (letrec*
                             ((x8171
                               (letrec* ((x8172 (cdr v7328))) (car x8172))))
                             (real?/c j7329 k7330 x8171))))
                          (letrec*
                           ((g8173
                             (letrec*
                              ((x8174
                                (letrec*
                                 ((x8175 (cons checked7332 '())))
                                 (cons checked7331 x8175))))
                              (cons posn x8174))))
                           g8173))))
                       g8170))))
                   g8168)))
               (BLOCK/C
                (lambda (j7335 k7336 v7334)
                  (letrec*
                   ((g8176
                     (letrec*
                      ((checked7337
                        (letrec*
                         ((x8177 (car v7334)))
                         (real?/c j7335 k7336 x8177))))
                      (letrec*
                       ((g8178
                         (letrec*
                          ((checked7338
                            (letrec*
                             ((x8179
                               (letrec* ((x8180 (cdr v7334))) (car x8180))))
                             (real?/c j7335 k7336 x8179))))
                          (letrec*
                           ((g8181
                             (letrec*
                              ((checked7339
                                (letrec*
                                 ((x8182
                                   (letrec*
                                    ((x8183
                                      (letrec*
                                       ((x8184 (cdr v7334)))
                                       (cdr x8184))))
                                    (car x8183))))
                                 (COLOR/C j7335 k7336 x8182))))
                              (letrec*
                               ((g8185
                                 (letrec*
                                  ((x8186
                                    (letrec*
                                     ((x8187
                                       (letrec*
                                        ((x8188 (cons checked7339 '())))
                                        (cons checked7338 x8188))))
                                     (cons checked7337 x8187))))
                                  (cons block x8186))))
                               g8185))))
                           g8181))))
                       g8178))))
                   g8176)))
               (BSET/C (listof BLOCK/C))
               (TETRA/C
                (lambda (j7342 k7343 v7341)
                  (letrec*
                   ((g8189
                     (letrec*
                      ((checked7344
                        (letrec*
                         ((x8190 (car v7341)))
                         (POSN/C j7342 k7343 x8190))))
                      (letrec*
                       ((g8191
                         (letrec*
                          ((checked7345
                            (letrec*
                             ((x8192
                               (letrec* ((x8193 (cdr v7341))) (car x8193))))
                             (BSET/C j7342 k7343 x8192))))
                          (letrec*
                           ((g8194
                             (letrec*
                              ((x8195
                                (letrec*
                                 ((x8196 (cons checked7345 '())))
                                 (cons checked7344 x8196))))
                              (cons tetra x8195))))
                           g8194))))
                       g8191))))
                   g8189)))
               (WORLD/C
                (lambda (j7348 k7349 v7347)
                  (letrec*
                   ((g8197
                     (letrec*
                      ((checked7350
                        (letrec*
                         ((x8198 (car v7347)))
                         (TETRA/C j7348 k7349 x8198))))
                      (letrec*
                       ((g8199
                         (letrec*
                          ((checked7351
                            (letrec*
                             ((x8200
                               (letrec* ((x8201 (cdr v7347))) (car x8201))))
                             (BSET/C j7348 k7349 x8200))))
                          (letrec*
                           ((g8202
                             (letrec*
                              ((x8203
                                (letrec*
                                 ((x8204 (cons checked7351 '())))
                                 (cons checked7350 x8204))))
                              (cons world x8203))))
                           g8202))))
                       g8199))))
                   g8197)))
               (posn=?
                (lambda (p1 p2)
                  (letrec*
                   ((g8205
                     (letrec*
                      ((x-cnd8206
                        (letrec*
                         ((x8208 (posn-x p1)) (x8207 (posn-x p2)))
                         (= x8208 x8207))))
                      (if x-cnd8206
                        (letrec*
                         ((x8210 (posn-y p1)) (x8209 (posn-y p2)))
                         (= x8210 x8209))
                        #f))))
                   g8205)))
               (block-size 20)
               (board-height 20)
               (board-width 10)
               (block=?
                (lambda (b1 b2)
                  (letrec*
                   ((g8211
                     (letrec*
                      ((x-cnd8212
                        (letrec*
                         ((x8214 (block-x b1)) (x8213 (block-x b2)))
                         (= x8214 x8213))))
                      (if x-cnd8212
                        (letrec*
                         ((x8216 (block-y b1)) (x8215 (block-y b2)))
                         (= x8216 x8215))
                        #f))))
                   g8211)))
               (block-move
                (lambda (dx dy b)
                  (letrec*
                   ((g8217
                     (letrec*
                      ((x8221 (letrec* ((x8222 (block-x b))) (+ dx x8222)))
                       (x8219 (letrec* ((x8220 (block-y b))) (+ dy x8220)))
                       (x8218 (block-color b)))
                      (block x8221 x8219 x8218))))
                   g8217)))
               (block-rotate-ccw
                (lambda (c b)
                  (letrec*
                   ((g8223
                     (letrec*
                      ((x8230
                        (letrec*
                         ((x8234 (posn-x c))
                          (x8231
                           (letrec*
                            ((x8233 (posn-y c)) (x8232 (block-y b)))
                            (- x8233 x8232))))
                         (+ x8234 x8231)))
                       (x8225
                        (letrec*
                         ((x8229 (posn-y c))
                          (x8226
                           (letrec*
                            ((x8228 (block-x b)) (x8227 (posn-x c)))
                            (- x8228 x8227))))
                         (+ x8229 x8226)))
                       (x8224 (block-color b)))
                      (block x8230 x8225 x8224))))
                   g8223)))
               (block-rotate-cw
                (lambda (c b)
                  (letrec*
                   ((g8235
                     (letrec*
                      ((x8236
                        (letrec*
                         ((x8237 (block-rotate-ccw c b)))
                         (block-rotate-ccw c x8237))))
                      (block-rotate-ccw c x8236))))
                   g8235)))
               (ormap
                (lambda (p? xs)
                  (letrec*
                   ((g8238
                     (letrec*
                      ((x-cnd8239 (null? xs)))
                      (if x-cnd8239
                        (letrec* ((g8240 #f)) g8240)
                        (letrec*
                         ((g8241
                           (letrec*
                            ((x8244 (letrec* ((x8245 (car xs))) (p? x8245)))
                             (x8242
                              (letrec* ((x8243 (cdr xs))) (ormap p? x8243))))
                            (or x8244 x8242))))
                         g8241)))))
                   g8238)))
               (andmap
                (lambda (p? xs)
                  (letrec*
                   ((g8246
                     (letrec*
                      ((x-cnd8247 (null? xs)))
                      (if x-cnd8247
                        (letrec* ((g8248 #t)) g8248)
                        (letrec*
                         ((g8249
                           (letrec*
                            ((x8252 (letrec* ((x8253 (car xs))) (p? x8253)))
                             (x8250
                              (letrec* ((x8251 (cdr xs))) (andmap p? x8251))))
                            (and x8252 x8250))))
                         g8249)))))
                   g8246)))
               (filter
                (lambda (p? xs)
                  (letrec*
                   ((g8254
                     (letrec*
                      ((x-cnd8255 (null? xs)))
                      (if x-cnd8255
                        (letrec* ((g8256 null)) g8256)
                        (letrec*
                         ((x-cnd8257 (letrec* ((x8258 (car xs))) (p? x8258))))
                         (if x-cnd8257
                           (letrec*
                            ((g8259
                              (letrec*
                               ((x8262 (car xs))
                                (x8260
                                 (letrec*
                                  ((x8261 (cdr xs)))
                                  (filter p? x8261))))
                               (cons x8262 x8260))))
                            g8259)
                           (letrec*
                            ((g8263
                              (letrec* ((x8264 (cdr xs))) (filter p? x8264))))
                            g8263)))))))
                   g8254)))
               (append
                (lambda (l r)
                  (letrec*
                   ((g8265
                     (letrec*
                      ((x-cnd8266 (null? l)))
                      (if x-cnd8266
                        (letrec* ((g8267 r)) g8267)
                        (letrec*
                         ((g8268
                           (letrec*
                            ((x8271 (car l))
                             (x8269
                              (letrec* ((x8270 (cdr l))) (append x8270 r))))
                            (cons x8271 x8269))))
                         g8268)))))
                   g8265)))
               (foldr
                (lambda (f a xs)
                  (letrec*
                   ((g8272
                     (letrec*
                      ((x-cnd8273 (null? xs)))
                      (if x-cnd8273
                        (letrec* ((g8274 a)) g8274)
                        (letrec*
                         ((g8275
                           (letrec*
                            ((x8278 (car xs))
                             (x8276
                              (letrec* ((x8277 (cdr xs))) (foldr f a x8277))))
                            (f x8278 x8276))))
                         g8275)))))
                   g8272)))
               (blocks-contains?
                (lambda (bs b)
                  (letrec*
                   ((g8279
                     (letrec*
                      ((x8280
                        (letrec*
                         ((x8282 (c)) (x8281 (block=? b c)))
                         (λ x8282 x8281))))
                      (ormap x8280 bs))))
                   g8279)))
               (blocks-subset?
                (lambda (bs1 bs2)
                  (letrec*
                   ((g8283
                     (letrec*
                      ((x8284
                        (letrec*
                         ((x8286 (b)) (x8285 (blocks-contains? bs2 b)))
                         (λ x8286 x8285))))
                      (andmap x8284 bs1))))
                   g8283)))
               (blocks=?
                (lambda (bs1 bs2)
                  (letrec*
                   ((g8287
                     (letrec*
                      ((x-cnd8288 (blocks-subset? bs1 bs2)))
                      (if x-cnd8288 (blocks-subset? bs2 bs1) #f))))
                   g8287)))
               (blocks-intersect
                (lambda (bs1 bs2)
                  (letrec*
                   ((g8289
                     (letrec*
                      ((x8290
                        (letrec*
                         ((x8292 (b)) (x8291 (blocks-contains? bs2 b)))
                         (λ x8292 x8291))))
                      (filter x8290 bs1))))
                   g8289)))
               (blocks-count
                (lambda (bs) (letrec* ((g8293 (length bs))) g8293)))
               (blocks-move
                (lambda (dx dy bs)
                  (letrec*
                   ((g8294
                     (letrec*
                      ((x8295
                        (letrec*
                         ((x8297 (b)) (x8296 (block-move dx dy b)))
                         (λ x8297 x8296))))
                      (map x8295 bs))))
                   g8294)))
               (blocks-rotate-ccw
                (lambda (c bs)
                  (letrec*
                   ((g8298
                     (letrec*
                      ((x8299
                        (letrec*
                         ((x8301 (b)) (x8300 (block-rotate-ccw c b)))
                         (λ x8301 x8300))))
                      (map x8299 bs))))
                   g8298)))
               (blocks-rotate-cw
                (lambda (c bs)
                  (letrec*
                   ((g8302
                     (letrec*
                      ((x8303
                        (letrec*
                         ((x8305 (b)) (x8304 (block-rotate-cw c b)))
                         (λ x8305 x8304))))
                      (map x8303 bs))))
                   g8302)))
               (blocks-change-color
                (lambda (bs c)
                  (letrec*
                   ((g8306
                     (letrec*
                      ((x8307
                        (letrec*
                         ((x8311 (b))
                          (x8308
                           (letrec*
                            ((x8310 (block-x b)) (x8309 (block-y b)))
                            (block x8310 x8309 c))))
                         (λ x8311 x8308))))
                      (map x8307 bs))))
                   g8306)))
               (blocks-row
                (lambda (bs i)
                  (letrec*
                   ((g8312
                     (letrec*
                      ((x8313
                        (letrec*
                         ((x8316 (b))
                          (x8314 (letrec* ((x8315 (block-y b))) (= i x8315))))
                         (λ x8316 x8314))))
                      (filter x8313 bs))))
                   g8312)))
               (full-row?
                (lambda (bs i)
                  (letrec*
                   ((g8317
                     (letrec*
                      ((x8318
                        (letrec*
                         ((x8319 (blocks-row bs i)))
                         (blocks-count x8319))))
                      (= board-width x8318))))
                   g8317)))
               (blocks-overflow?
                (lambda (bs)
                  (letrec*
                   ((g8320
                     (letrec*
                      ((x8321
                        (letrec*
                         ((x8324 (b))
                          (x8322 (letrec* ((x8323 (block-y b))) (<= x8323 0))))
                         (λ x8324 x8322))))
                      (ormap x8321 bs))))
                   g8320)))
               (blocks-union
                (lambda (bs1 bs2)
                  (letrec*
                   ((g8325
                     (letrec*
                      ((x8326
                        (letrec*
                         ((x8331 (b bs))
                          (x8327
                           (letrec*
                            ((x-cnd8328 (blocks-contains? bs b)))
                            (if x-cnd8328
                              (letrec* ((g8329 bs)) g8329)
                              (letrec* ((g8330 (cons b bs))) g8330)))))
                         (λ x8331 x8327))))
                      (foldr x8326 bs2 bs1))))
                   g8325)))
               (blocks-max-y
                (lambda (bs)
                  (letrec*
                   ((g8332
                     (letrec*
                      ((x8333
                        (letrec*
                         ((x8336 (b n))
                          (x8334
                           (letrec* ((x8335 (block-y b))) (max x8335 n))))
                         (λ x8336 x8334))))
                      (foldr x8333 0 bs))))
                   g8332)))
               (blocks-min-x
                (lambda (bs)
                  (letrec*
                   ((g8337
                     (letrec*
                      ((x8338
                        (letrec*
                         ((x8341 (b n))
                          (x8339
                           (letrec* ((x8340 (block-x b))) (min x8340 n))))
                         (λ x8341 x8339))))
                      (foldr x8338 board-width bs))))
                   g8337)))
               (blocks-max-x
                (lambda (bs)
                  (letrec*
                   ((g8342
                     (letrec*
                      ((x8343
                        (letrec*
                         ((x8346 (b n))
                          (x8344
                           (letrec* ((x8345 (block-x b))) (max x8345 n))))
                         (λ x8346 x8344))))
                      (foldr x8343 0 bs))))
                   g8342)))
               (eliminate-full-rows
                (lambda (bs)
                  (letrec* ((g8347 (elim-row bs board-height 0))) g8347)))
               (elim-row
                (lambda (bs i offset)
                  (letrec*
                   ((g8348
                     (letrec*
                      ((x-cnd8349 (< i 0)))
                      (if x-cnd8349
                        (letrec* ((g8350 empty)) g8350)
                        (letrec*
                         ((x-cnd8351 (full-row? bs i)))
                         (if x-cnd8351
                           (letrec*
                            ((g8352
                              (letrec*
                               ((x8354 (sub1 i)) (x8353 (add1 offset)))
                               (elim-row bs x8354 x8353))))
                            g8352)
                           (letrec*
                            ((g8355
                              (letrec*
                               ((x8358
                                 (letrec*
                                  ((x8359 (sub1 i)))
                                  (elim-row bs x8359 offset)))
                                (x8356
                                 (letrec*
                                  ((x8357 (blocks-row bs i)))
                                  (blocks-move 0 offset x8357))))
                               (blocks-union x8358 x8356))))
                            g8355)))))))
                   g8348)))
               (tetra-move
                (lambda (dx dy t)
                  (letrec*
                   ((g8360
                     (letrec*
                      ((x8363
                        (letrec*
                         ((x8367
                           (letrec*
                            ((x8368
                              (letrec*
                               ((x8369 (tetra-center t)))
                               (posn-x x8369))))
                            (+ dx x8368)))
                          (x8364
                           (letrec*
                            ((x8365
                              (letrec*
                               ((x8366 (tetra-center t)))
                               (posn-y x8366))))
                            (+ dy x8365))))
                         (posn x8367 x8364)))
                       (x8361
                        (letrec*
                         ((x8362 (tetra-blocks t)))
                         (blocks-move dx dy x8362))))
                      (tetra x8363 x8361))))
                   g8360)))
               (tetra-rotate-ccw
                (lambda (t)
                  (letrec*
                   ((g8370
                     (letrec*
                      ((x8374 (tetra-center t))
                       (x8371
                        (letrec*
                         ((x8373 (tetra-center t)) (x8372 (tetra-blocks t)))
                         (blocks-rotate-ccw x8373 x8372))))
                      (tetra x8374 x8371))))
                   g8370)))
               (tetra-rotate-cw
                (lambda (t)
                  (letrec*
                   ((g8375
                     (letrec*
                      ((x8379 (tetra-center t))
                       (x8376
                        (letrec*
                         ((x8378 (tetra-center t)) (x8377 (tetra-blocks t)))
                         (blocks-rotate-cw x8378 x8377))))
                      (tetra x8379 x8376))))
                   g8375)))
               (tetra-overlaps-blocks?
                (lambda (t bs)
                  (letrec*
                   ((g8380
                     (letrec*
                      ((x8381
                        (letrec*
                         ((x8382
                           (letrec*
                            ((x8383 (tetra-blocks t)))
                            (blocks-intersect x8383 bs))))
                         (false? x8382))))
                      (false? x8381))))
                   g8380)))
               (tetra-change-color
                (lambda (t c)
                  (letrec*
                   ((g8384
                     (letrec*
                      ((x8387 (tetra-center t))
                       (x8385
                        (letrec*
                         ((x8386 (tetra-blocks t)))
                         (blocks-change-color x8386 c))))
                      (tetra x8387 x8385))))
                   g8384)))
               (build-tetra-blocks
                (lambda (color xc yc x1 y1 x2 y2 x3 y3 x4 y4)
                  (letrec*
                   ((g8388
                     (letrec*
                      ((x8389
                        (letrec*
                         ((x8395 (posn xc yc))
                          (x8390
                           (letrec*
                            ((x8394 (block x1 y1 color))
                             (x8393 (block x2 y2 color))
                             (x8392 (block x3 y3 color))
                             (x8391 (block x4 y4 color)))
                            (list x8394 x8393 x8392 x8391))))
                         (tetra x8395 x8390))))
                      (tetra-move 3 0 x8389))))
                   g8388)))
               (touchdown
                (lambda (w tetras)
                  (letrec*
                   ((g8396
                     (letrec*
                      ((x8402 (list-pick-random tetras))
                       (x8397
                        (letrec*
                         ((x8398
                           (letrec*
                            ((x8400
                              (letrec*
                               ((x8401 (world-tetra w)))
                               (tetra-blocks x8401)))
                             (x8399 (world-blocks w)))
                            (blocks-union x8400 x8399))))
                         (eliminate-full-rows x8398))))
                      (world x8402 x8397))))
                   g8396)))
               (world-jump-down
                (lambda (w)
                  (letrec*
                   ((g8403
                     (letrec*
                      ((x-cnd8404 (landed? w)))
                      (if x-cnd8404
                        (letrec* ((g8405 w)) g8405)
                        (letrec*
                         ((g8406
                           (letrec*
                            ((x8407
                              (letrec*
                               ((x8409
                                 (letrec*
                                  ((x8410 (world-tetra w)))
                                  (tetra-move 0 1 x8410)))
                                (x8408 (world-blocks w)))
                               (world x8409 x8408))))
                            (world-jump-down x8407))))
                         g8406)))))
                   g8403)))
               (landed-on-blocks?
                (lambda (w)
                  (letrec*
                   ((g8411
                     (letrec*
                      ((x8413
                        (letrec*
                         ((x8414 (world-tetra w)))
                         (tetra-move 0 1 x8414)))
                       (x8412 (world-blocks w)))
                      (tetra-overlaps-blocks? x8413 x8412))))
                   g8411)))
               (landed-on-floor?
                (lambda (w)
                  (letrec*
                   ((g8415
                     (letrec*
                      ((x8417
                        (letrec*
                         ((x8418
                           (letrec*
                            ((x8419 (world-tetra w)))
                            (tetra-blocks x8419))))
                         (blocks-max-y x8418)))
                       (x8416 (sub1 board-height)))
                      (= x8417 x8416))))
                   g8415)))
               (landed?
                (lambda (w)
                  (letrec*
                   ((g8420
                     (letrec*
                      ((val7258 (landed-on-blocks? w)))
                      (letrec*
                       ((g8421 (if val7258 val7258 (landed-on-floor? w))))
                       g8421))))
                   g8420)))
               (next-world
                (lambda (w tetras)
                  (letrec*
                   ((g8422
                     (letrec*
                      ((x-cnd8423 (landed? w)))
                      (if x-cnd8423
                        (letrec* ((g8424 (touchdown w tetras))) g8424)
                        (letrec*
                         ((g8425
                           (letrec*
                            ((x8427
                              (letrec*
                               ((x8428 (world-tetra w)))
                               (tetra-move 0 1 x8428)))
                             (x8426 (world-blocks w)))
                            (world x8427 x8426))))
                         g8425)))))
                   g8422)))
               (try-new-tetra
                (lambda (w new-tetra)
                  (letrec*
                   ((g8429
                     (letrec*
                      ((x-cnd8430
                        (letrec*
                         ((x8436
                           (letrec*
                            ((x8437
                              (letrec*
                               ((x8438 (tetra-blocks new-tetra)))
                               (blocks-min-x x8438))))
                            (< x8437 0)))
                          (x8433
                           (letrec*
                            ((x8434
                              (letrec*
                               ((x8435 (tetra-blocks new-tetra)))
                               (blocks-max-x x8435))))
                            (>= x8434 board-width)))
                          (x8431
                           (letrec*
                            ((x8432 (world-blocks w)))
                            (tetra-overlaps-blocks? new-tetra x8432))))
                         (or x8436 x8433 x8431))))
                      (if x-cnd8430
                        (letrec* ((g8439 w)) g8439)
                        (letrec*
                         ((g8440
                           (letrec*
                            ((x8441 (world-blocks w)))
                            (world new-tetra x8441))))
                         g8440)))))
                   g8429)))
               (world-move
                (lambda (dx dy w)
                  (letrec*
                   ((g8442
                     (letrec*
                      ((x8443
                        (letrec*
                         ((x8444 (world-tetra w)))
                         (tetra-move dx dy x8444))))
                      (try-new-tetra w x8443))))
                   g8442)))
               (world-rotate-ccw
                (lambda (w)
                  (letrec*
                   ((g8445
                     (letrec*
                      ((x8446
                        (letrec*
                         ((x8447 (world-tetra w)))
                         (tetra-rotate-ccw x8447))))
                      (try-new-tetra w x8446))))
                   g8445)))
               (world-rotate-cw
                (lambda (w)
                  (letrec*
                   ((g8448
                     (letrec*
                      ((x8449
                        (letrec*
                         ((x8450 (world-tetra w)))
                         (tetra-rotate-cw x8450))))
                      (try-new-tetra w x8449))))
                   g8448)))
               (ghost-blocks
                (lambda (w)
                  (letrec*
                   ((g8451
                     (letrec*
                      ((x8452
                        (letrec*
                         ((x8453
                           (letrec*
                            ((x8454 (world-jump-down w)))
                            (world-tetra x8454))))
                         (tetra-change-color x8453 'gray))))
                      (tetra-blocks x8452))))
                   g8451)))
               (world-key-move
                (lambda (w k)
                  (letrec*
                   ((g8455
                     (letrec*
                      ((x-cnd8456 (equal? k "left")))
                      (if x-cnd8456
                        (letrec* ((g8457 (world-move neg-1 0 w))) g8457)
                        (letrec*
                         ((x-cnd8458 (equal? k "right")))
                         (if x-cnd8458
                           (letrec* ((g8459 (world-move 1 0 w))) g8459)
                           (letrec*
                            ((x-cnd8460 (equal? k "down")))
                            (if x-cnd8460
                              (letrec* ((g8461 (world-jump-down w))) g8461)
                              (letrec*
                               ((x-cnd8462 (equal? k "a")))
                               (if x-cnd8462
                                 (letrec* ((g8463 (world-rotate-ccw w))) g8463)
                                 (letrec*
                                  ((x-cnd8464 (equal? k "s")))
                                  (if x-cnd8464
                                    (letrec*
                                     ((g8465 (world-rotate-cw w)))
                                     g8465)
                                    (letrec* ((g8466 w)) g8466)))))))))))))
                   g8455)))
               (image (lambda () (letrec* ((g8467 (cons 'image '()))) g8467)))
               (image?
                (lambda (image7592)
                  (letrec*
                   ((g8468
                     (letrec* ((x8469 (car image7592))) (eq? x8469 'image))))
                   g8468)))
               (overlay (lambda (i₁ i₂) (letrec* ((g8470 (image))) g8470)))
               (circle (lambda (r m c) (letrec* ((g8471 (image))) g8471)))
               (rectangle (lambda (w h m c) (letrec* ((g8472 (image))) g8472)))
               (place-image
                (lambda (i₁ r c i₂) (letrec* ((g8473 (image))) g8473)))
               (empty-scene (lambda (w h) (letrec* ((g8474 (image))) g8474)))
               (list-pick-random
                (lambda (xs)
                  (letrec*
                   ((g8475
                     (letrec*
                      ((x-cnd8476 (letrec* ((x8477 (cdr xs))) (null? x8477))))
                      (if x-cnd8476
                        (letrec* ((g8478 (car xs))) g8478)
                        (letrec*
                         ((g8479
                           (letrec*
                            ((x8480 (cdr xs)))
                            (list-pick-random x8480))))
                         g8479)))))
                   g8475)))
               (neg-1 (random 10))
               (world->image
                (lambda (w)
                  (letrec*
                   ((g8481
                     (letrec*
                      ((x8485
                        (letrec*
                         ((x8486
                           (letrec*
                            ((x8490
                              (letrec*
                               ((x8491 (world-tetra w)))
                               (tetra-blocks x8491)))
                             (x8487
                              (letrec*
                               ((x8489 (ghost-blocks w))
                                (x8488 (world-blocks w)))
                               (append x8489 x8488))))
                            (append x8490 x8487))))
                         (blocks->image x8486)))
                       (x8482
                        (letrec*
                         ((x8484 (* board-width block-size))
                          (x8483 (* board-height block-size)))
                         (empty-scene x8484 x8483))))
                      (place-image x8485 0 0 x8482))))
                   g8481)))
               (blocks->image
                (lambda (bs)
                  (letrec*
                   ((g8492
                     (letrec*
                      ((x8498
                        (letrec*
                         ((x8504 (b img))
                          (x8499
                           (letrec*
                            ((x-cnd8500
                              (letrec* ((x8501 (block-y b))) (<= 0 x8501))))
                            (if x-cnd8500
                              (letrec* ((g8502 (place-block b img))) g8502)
                              (letrec* ((g8503 img)) g8503)))))
                         (λ x8504 x8499)))
                       (x8493
                        (letrec*
                         ((x8496
                           (letrec*
                            ((x8497 (* board-width block-size)))
                            (add1 x8497)))
                          (x8494
                           (letrec*
                            ((x8495 (* board-height block-size)))
                            (add1 x8495))))
                         (empty-scene x8496 x8494))))
                      (foldr x8498 x8493 bs))))
                   g8492)))
               (block->image
                (lambda (b)
                  (letrec*
                   ((g8505
                     (letrec*
                      ((x8509
                        (letrec*
                         ((x8512 (add1 block-size))
                          (x8511 (add1 block-size))
                          (x8510 (block-color b)))
                         (rectangle x8512 x8511 'solid x8510)))
                       (x8506
                        (letrec*
                         ((x8508 (add1 block-size)) (x8507 (add1 block-size)))
                         (rectangle x8508 x8507 'outline 'black))))
                      (overlay x8509 x8506))))
                   g8505)))
               (place-block
                (lambda (b scene)
                  (letrec*
                   ((g8513
                     (letrec*
                      ((x8522 (block->image b))
                       (x8518
                        (letrec*
                         ((x8520
                           (letrec*
                            ((x8521 (block-x b)))
                            (* x8521 block-size)))
                          (x8519 (/ block-size 2)))
                         (+ x8520 x8519)))
                       (x8514
                        (letrec*
                         ((x8516
                           (letrec*
                            ((x8517 (block-y b)))
                            (* x8517 block-size)))
                          (x8515 (/ block-size 2)))
                         (+ x8516 x8515))))
                      (place-image x8522 x8518 x8514 scene))))
                   g8513)))
               (world0
                (lambda (tetras)
                  (letrec*
                   ((g8523
                     (letrec*
                      ((x8524 (list-pick-random tetras)))
                      (world x8524 null))))
                   g8523))))
              (letrec*
               ((g8525
                 (letrec*
                  ((x8588
                    ((lambda (j7355 k7356 f7357)
                       (letrec*
                        ((g8589
                          (lambda (g7353 g7354)
                            (letrec*
                             ((g8590
                               (letrec*
                                ((x8591
                                  (letrec*
                                   ((x8593 (POSN/C j7355 k7356 g7353))
                                    (x8592 (POSN/C j7355 k7356 g7354)))
                                   (f7357 x8593 x8592))))
                                (boolean?/c j7355 k7356 x8591))))
                             g8590))))
                        g8589))
                     'module
                     'importer
                     posn=?))
                   (x8583
                    (letrec*
                     ((x8584
                       (letrec*
                        ((x8587 (input))
                         (x8585 (letrec* ((x8586 (input))) (cons x8586 '()))))
                        (cons x8587 x8585))))
                     (cons 'posn x8584)))
                   (x8578
                    (letrec*
                     ((x8579
                       (letrec*
                        ((x8582 (input))
                         (x8580 (letrec* ((x8581 (input))) (cons x8581 '()))))
                        (cons x8582 x8580))))
                     (cons 'posn x8579))))
                  (x8588 x8583 x8578)))
                (g8526 (any/c 'module 'importer COLOR/C))
                (g8527 (any/c 'module 'importer POSN/C))
                (g8528 (any/c 'module 'importer BLOCK/C))
                (g8529 (any/c 'module 'importer TETRA/C))
                (g8530 (any/c 'module 'importer WORLD/C))
                (g8531 (any/c 'module 'importer BSET/C))
                (g8532 (integer? 'module 'importer block-size))
                (g8533 (integer? 'module 'importer board-width))
                (g8534 (integer? 'module 'importer board-height))
                (g8535
                 (letrec*
                  ((x8606
                    ((lambda (j7360 k7361 f7362)
                       (letrec*
                        ((g8607
                          (lambda (g7358 g7359)
                            (letrec*
                             ((g8608
                               (letrec*
                                ((x8609
                                  (letrec*
                                   ((x8611 (POSN/C j7360 k7361 g7358))
                                    (x8610 (BLOCK/C j7360 k7361 g7359)))
                                   (f7362 x8611 x8610))))
                                (BLOCK/C j7360 k7361 x8609))))
                             g8608))))
                        g8607))
                     'module
                     'importer
                     block-rotate-ccw))
                   (x8601
                    (letrec*
                     ((x8602
                       (letrec*
                        ((x8605 (input))
                         (x8603 (letrec* ((x8604 (input))) (cons x8604 '()))))
                        (cons x8605 x8603))))
                     (cons 'posn x8602)))
                   (x8594
                    (letrec*
                     ((x8595
                       (letrec*
                        ((x8600 (input))
                         (x8596
                          (letrec*
                           ((x8599 (input))
                            (x8597
                             (letrec* ((x8598 (input))) (cons x8598 '()))))
                           (cons x8599 x8597))))
                        (cons x8600 x8596))))
                     (cons 'block x8595))))
                  (x8606 x8601 x8594)))
                (g8536
                 (letrec*
                  ((x8624
                    ((lambda (j7365 k7366 f7367)
                       (letrec*
                        ((g8625
                          (lambda (g7363 g7364)
                            (letrec*
                             ((g8626
                               (letrec*
                                ((x8627
                                  (letrec*
                                   ((x8629 (POSN/C j7365 k7366 g7363))
                                    (x8628 (BLOCK/C j7365 k7366 g7364)))
                                   (f7367 x8629 x8628))))
                                (BLOCK/C j7365 k7366 x8627))))
                             g8626))))
                        g8625))
                     'module
                     'importer
                     block-rotate-cw))
                   (x8619
                    (letrec*
                     ((x8620
                       (letrec*
                        ((x8623 (input))
                         (x8621 (letrec* ((x8622 (input))) (cons x8622 '()))))
                        (cons x8623 x8621))))
                     (cons 'posn x8620)))
                   (x8612
                    (letrec*
                     ((x8613
                       (letrec*
                        ((x8618 (input))
                         (x8614
                          (letrec*
                           ((x8617 (input))
                            (x8615
                             (letrec* ((x8616 (input))) (cons x8616 '()))))
                           (cons x8617 x8615))))
                        (cons x8618 x8614))))
                     (cons 'block x8613))))
                  (x8624 x8619 x8612)))
                (g8537
                 (letrec*
                  ((x8644
                    ((lambda (j7370 k7371 f7372)
                       (letrec*
                        ((g8645
                          (lambda (g7368 g7369)
                            (letrec*
                             ((g8646
                               (letrec*
                                ((x8647
                                  (letrec*
                                   ((x8649 (BLOCK/C j7370 k7371 g7368))
                                    (x8648 (BLOCK/C j7370 k7371 g7369)))
                                   (f7372 x8649 x8648))))
                                (boolean?/c j7370 k7371 x8647))))
                             g8646))))
                        g8645))
                     'module
                     'importer
                     block=?))
                   (x8637
                    (letrec*
                     ((x8638
                       (letrec*
                        ((x8643 (input))
                         (x8639
                          (letrec*
                           ((x8642 (input))
                            (x8640
                             (letrec* ((x8641 (input))) (cons x8641 '()))))
                           (cons x8642 x8640))))
                        (cons x8643 x8639))))
                     (cons 'block x8638)))
                   (x8630
                    (letrec*
                     ((x8631
                       (letrec*
                        ((x8636 (input))
                         (x8632
                          (letrec*
                           ((x8635 (input))
                            (x8633
                             (letrec* ((x8634 (input))) (cons x8634 '()))))
                           (cons x8635 x8633))))
                        (cons x8636 x8632))))
                     (cons 'block x8631))))
                  (x8644 x8637 x8630)))
                (g8538
                 (letrec*
                  ((x8659
                    ((lambda (j7376 k7377 f7378)
                       (letrec*
                        ((g8660
                          (lambda (g7373 g7374 g7375)
                            (letrec*
                             ((g8661
                               (letrec*
                                ((x8662
                                  (letrec*
                                   ((x8665 (real?/c j7376 k7377 g7373))
                                    (x8664 (real?/c j7376 k7377 g7374))
                                    (x8663 (BLOCK/C j7376 k7377 g7375)))
                                   (f7378 x8665 x8664 x8663))))
                                (BLOCK/C j7376 k7377 x8662))))
                             g8661))))
                        g8660))
                     'module
                     'importer
                     block-move))
                   (x8658 (input))
                   (x8657 (input))
                   (x8650
                    (letrec*
                     ((x8651
                       (letrec*
                        ((x8656 (input))
                         (x8652
                          (letrec*
                           ((x8655 (input))
                            (x8653
                             (letrec* ((x8654 (input))) (cons x8654 '()))))
                           (cons x8655 x8653))))
                        (cons x8656 x8652))))
                     (cons 'block x8651))))
                  (x8659 x8658 x8657 x8650)))
                (g8539
                 (letrec*
                  ((x8674
                    ((lambda (j7381 k7382 f7383)
                       (letrec*
                        ((g8675
                          (lambda (g7379 g7380)
                            (letrec*
                             ((g8676
                               (letrec*
                                ((x8677
                                  (letrec*
                                   ((x8679 (BSET/C j7381 k7382 g7379))
                                    (x8678 (BLOCK/C j7381 k7382 g7380)))
                                   (f7383 x8679 x8678))))
                                (boolean?/c j7381 k7382 x8677))))
                             g8676))))
                        g8675))
                     'module
                     'importer
                     blocks-contains?))
                   (x8673 (input))
                   (x8666
                    (letrec*
                     ((x8667
                       (letrec*
                        ((x8672 (input))
                         (x8668
                          (letrec*
                           ((x8671 (input))
                            (x8669
                             (letrec* ((x8670 (input))) (cons x8670 '()))))
                           (cons x8671 x8669))))
                        (cons x8672 x8668))))
                     (cons 'block x8667))))
                  (x8674 x8673 x8666)))
                (g8540
                 (letrec*
                  ((x8682
                    ((lambda (j7386 k7387 f7388)
                       (letrec*
                        ((g8683
                          (lambda (g7384 g7385)
                            (letrec*
                             ((g8684
                               (letrec*
                                ((x8685
                                  (letrec*
                                   ((x8687 (BSET/C j7386 k7387 g7384))
                                    (x8686 (BSET/C j7386 k7387 g7385)))
                                   (f7388 x8687 x8686))))
                                (boolean?/c j7386 k7387 x8685))))
                             g8684))))
                        g8683))
                     'module
                     'importer
                     blocks=?))
                   (x8681 (input))
                   (x8680 (input)))
                  (x8682 x8681 x8680)))
                (g8541
                 (letrec*
                  ((x8690
                    ((lambda (j7391 k7392 f7393)
                       (letrec*
                        ((g8691
                          (lambda (g7389 g7390)
                            (letrec*
                             ((g8692
                               (letrec*
                                ((x8693
                                  (letrec*
                                   ((x8695 (BSET/C j7391 k7392 g7389))
                                    (x8694 (BSET/C j7391 k7392 g7390)))
                                   (f7393 x8695 x8694))))
                                (boolean?/c j7391 k7392 x8693))))
                             g8692))))
                        g8691))
                     'module
                     'importer
                     blocks-subset?))
                   (x8689 (input))
                   (x8688 (input)))
                  (x8690 x8689 x8688)))
                (g8542
                 (letrec*
                  ((x8698
                    ((lambda (j7396 k7397 f7398)
                       (letrec*
                        ((g8699
                          (lambda (g7394 g7395)
                            (letrec*
                             ((g8700
                               (letrec*
                                ((x8701
                                  (letrec*
                                   ((x8703 (BSET/C j7396 k7397 g7394))
                                    (x8702 (BSET/C j7396 k7397 g7395)))
                                   (f7398 x8703 x8702))))
                                (BSET/C j7396 k7397 x8701))))
                             g8700))))
                        g8699))
                     'module
                     'importer
                     blocks-intersect))
                   (x8697 (input))
                   (x8696 (input)))
                  (x8698 x8697 x8696)))
                (g8543
                 (letrec*
                  ((x8705
                    ((lambda (j7400 k7401 f7402)
                       (letrec*
                        ((g8706
                          (lambda (g7399)
                            (letrec*
                             ((g8707
                               (letrec*
                                ((x8708
                                  (letrec*
                                   ((x8709 (BSET/C j7400 k7401 g7399)))
                                   (f7402 x8709))))
                                (real?/c j7400 k7401 x8708))))
                             g8707))))
                        g8706))
                     'module
                     'importer
                     blocks-count))
                   (x8704 (input)))
                  (x8705 x8704)))
                (g8544
                 (letrec*
                  ((x8711
                    ((lambda (j7404 k7405 f7406)
                       (letrec*
                        ((g8712
                          (lambda (g7403)
                            (letrec*
                             ((g8713
                               (letrec*
                                ((x8714
                                  (letrec*
                                   ((x8715 (BSET/C j7404 k7405 g7403)))
                                   (f7406 x8715))))
                                (boolean?/c j7404 k7405 x8714))))
                             g8713))))
                        g8712))
                     'module
                     'importer
                     blocks-overflow?))
                   (x8710 (input)))
                  (x8711 x8710)))
                (g8545
                 (letrec*
                  ((x8719
                    ((lambda (j7410 k7411 f7412)
                       (letrec*
                        ((g8720
                          (lambda (g7407 g7408 g7409)
                            (letrec*
                             ((g8721
                               (letrec*
                                ((x8722
                                  (letrec*
                                   ((x8725 (real?/c j7410 k7411 g7407))
                                    (x8724 (real?/c j7410 k7411 g7408))
                                    (x8723 (BSET/C j7410 k7411 g7409)))
                                   (f7412 x8725 x8724 x8723))))
                                (BSET/C j7410 k7411 x8722))))
                             g8721))))
                        g8720))
                     'module
                     'importer
                     blocks-move))
                   (x8718 (input))
                   (x8717 (input))
                   (x8716 (input)))
                  (x8719 x8718 x8717 x8716)))
                (g8546
                 (letrec*
                  ((x8732
                    ((lambda (j7415 k7416 f7417)
                       (letrec*
                        ((g8733
                          (lambda (g7413 g7414)
                            (letrec*
                             ((g8734
                               (letrec*
                                ((x8735
                                  (letrec*
                                   ((x8737 (POSN/C j7415 k7416 g7413))
                                    (x8736 (BSET/C j7415 k7416 g7414)))
                                   (f7417 x8737 x8736))))
                                (BSET/C j7415 k7416 x8735))))
                             g8734))))
                        g8733))
                     'module
                     'importer
                     blocks-rotate-cw))
                   (x8727
                    (letrec*
                     ((x8728
                       (letrec*
                        ((x8731 (input))
                         (x8729 (letrec* ((x8730 (input))) (cons x8730 '()))))
                        (cons x8731 x8729))))
                     (cons 'posn x8728)))
                   (x8726 (input)))
                  (x8732 x8727 x8726)))
                (g8547
                 (letrec*
                  ((x8744
                    ((lambda (j7420 k7421 f7422)
                       (letrec*
                        ((g8745
                          (lambda (g7418 g7419)
                            (letrec*
                             ((g8746
                               (letrec*
                                ((x8747
                                  (letrec*
                                   ((x8749 (POSN/C j7420 k7421 g7418))
                                    (x8748 (BSET/C j7420 k7421 g7419)))
                                   (f7422 x8749 x8748))))
                                (BSET/C j7420 k7421 x8747))))
                             g8746))))
                        g8745))
                     'module
                     'importer
                     blocks-rotate-ccw))
                   (x8739
                    (letrec*
                     ((x8740
                       (letrec*
                        ((x8743 (input))
                         (x8741 (letrec* ((x8742 (input))) (cons x8742 '()))))
                        (cons x8743 x8741))))
                     (cons 'posn x8740)))
                   (x8738 (input)))
                  (x8744 x8739 x8738)))
                (g8548
                 (letrec*
                  ((x8752
                    ((lambda (j7425 k7426 f7427)
                       (letrec*
                        ((g8753
                          (lambda (g7423 g7424)
                            (letrec*
                             ((g8754
                               (letrec*
                                ((x8755
                                  (letrec*
                                   ((x8757 (BSET/C j7425 k7426 g7423))
                                    (x8756 (COLOR/C j7425 k7426 g7424)))
                                   (f7427 x8757 x8756))))
                                (BSET/C j7425 k7426 x8755))))
                             g8754))))
                        g8753))
                     'module
                     'importer
                     blocks-change-color))
                   (x8751 (input))
                   (x8750 (input)))
                  (x8752 x8751 x8750)))
                (g8549
                 (letrec*
                  ((x8760
                    ((lambda (j7430 k7431 f7432)
                       (letrec*
                        ((g8761
                          (lambda (g7428 g7429)
                            (letrec*
                             ((g8762
                               (letrec*
                                ((x8763
                                  (letrec*
                                   ((x8765 (BSET/C j7430 k7431 g7428))
                                    (x8764 (real?/c j7430 k7431 g7429)))
                                   (f7432 x8765 x8764))))
                                (BSET/C j7430 k7431 x8763))))
                             g8762))))
                        g8761))
                     'module
                     'importer
                     blocks-row))
                   (x8759 (input))
                   (x8758 (input)))
                  (x8760 x8759 x8758)))
                (g8550
                 (letrec*
                  ((x8768
                    ((lambda (j7435 k7436 f7437)
                       (letrec*
                        ((g8769
                          (lambda (g7433 g7434)
                            (letrec*
                             ((g8770
                               (letrec*
                                ((x8771
                                  (letrec*
                                   ((x8773 (BSET/C j7435 k7436 g7433))
                                    (x8772 (real?/c j7435 k7436 g7434)))
                                   (f7437 x8773 x8772))))
                                (boolean?/c j7435 k7436 x8771))))
                             g8770))))
                        g8769))
                     'module
                     'importer
                     full-row?))
                   (x8767 (input))
                   (x8766 (input)))
                  (x8768 x8767 x8766)))
                (g8551
                 (letrec*
                  ((x8776
                    ((lambda (j7440 k7441 f7442)
                       (letrec*
                        ((g8777
                          (lambda (g7438 g7439)
                            (letrec*
                             ((g8778
                               (letrec*
                                ((x8779
                                  (letrec*
                                   ((x8781 (BSET/C j7440 k7441 g7438))
                                    (x8780 (BSET/C j7440 k7441 g7439)))
                                   (f7442 x8781 x8780))))
                                (BSET/C j7440 k7441 x8779))))
                             g8778))))
                        g8777))
                     'module
                     'importer
                     blocks-union))
                   (x8775 (input))
                   (x8774 (input)))
                  (x8776 x8775 x8774)))
                (g8552
                 (letrec*
                  ((x8783
                    ((lambda (j7444 k7445 f7446)
                       (letrec*
                        ((g8784
                          (lambda (g7443)
                            (letrec*
                             ((g8785
                               (letrec*
                                ((x8786
                                  (letrec*
                                   ((x8787 (BSET/C j7444 k7445 g7443)))
                                   (f7446 x8787))))
                                (real?/c j7444 k7445 x8786))))
                             g8785))))
                        g8784))
                     'module
                     'importer
                     blocks-max-x))
                   (x8782 (input)))
                  (x8783 x8782)))
                (g8553
                 (letrec*
                  ((x8789
                    ((lambda (j7448 k7449 f7450)
                       (letrec*
                        ((g8790
                          (lambda (g7447)
                            (letrec*
                             ((g8791
                               (letrec*
                                ((x8792
                                  (letrec*
                                   ((x8793 (BSET/C j7448 k7449 g7447)))
                                   (f7450 x8793))))
                                (real?/c j7448 k7449 x8792))))
                             g8791))))
                        g8790))
                     'module
                     'importer
                     blocks-min-x))
                   (x8788 (input)))
                  (x8789 x8788)))
                (g8554
                 (letrec*
                  ((x8795
                    ((lambda (j7452 k7453 f7454)
                       (letrec*
                        ((g8796
                          (lambda (g7451)
                            (letrec*
                             ((g8797
                               (letrec*
                                ((x8798
                                  (letrec*
                                   ((x8799 (BSET/C j7452 k7453 g7451)))
                                   (f7454 x8799))))
                                (real?/c j7452 k7453 x8798))))
                             g8797))))
                        g8796))
                     'module
                     'importer
                     blocks-max-y))
                   (x8794 (input)))
                  (x8795 x8794)))
                (g8555
                 (letrec*
                  ((x8801
                    ((lambda (j7456 k7457 f7458)
                       (letrec*
                        ((g8802
                          (lambda (g7455)
                            (letrec*
                             ((g8803
                               (letrec*
                                ((x8804
                                  (letrec*
                                   ((x8805 (BSET/C j7456 k7457 g7455)))
                                   (f7458 x8805))))
                                (BSET/C j7456 k7457 x8804))))
                             g8803))))
                        g8802))
                     'module
                     'importer
                     eliminate-full-rows))
                   (x8800 (input)))
                  (x8801 x8800)))
                (g8556
                 (letrec*
                  ((x8817
                    ((lambda (j7462 k7463 f7464)
                       (letrec*
                        ((g8818
                          (lambda (g7459 g7460 g7461)
                            (letrec*
                             ((g8819
                               (letrec*
                                ((x8820
                                  (letrec*
                                   ((x8823 (integer?/c j7462 k7463 g7459))
                                    (x8822 (integer?/c j7462 k7463 g7460))
                                    (x8821 (TETRA/C j7462 k7463 g7461)))
                                   (f7464 x8823 x8822 x8821))))
                                (TETRA/C j7462 k7463 x8820))))
                             g8819))))
                        g8818))
                     'module
                     'importer
                     tetra-move))
                   (x8816 (input))
                   (x8815 (input))
                   (x8806
                    (letrec*
                     ((x8807
                       (letrec*
                        ((x8810
                          (letrec*
                           ((x8811
                             (letrec*
                              ((x8814 (input))
                               (x8812
                                (letrec* ((x8813 (input))) (cons x8813 '()))))
                              (cons x8814 x8812))))
                           (cons 'posn x8811)))
                         (x8808 (letrec* ((x8809 (input))) (cons x8809 '()))))
                        (cons x8810 x8808))))
                     (cons 'tetra x8807))))
                  (x8817 x8816 x8815 x8806)))
                (g8557
                 (letrec*
                  ((x8833
                    ((lambda (j7466 k7467 f7468)
                       (letrec*
                        ((g8834
                          (lambda (g7465)
                            (letrec*
                             ((g8835
                               (letrec*
                                ((x8836
                                  (letrec*
                                   ((x8837 (TETRA/C j7466 k7467 g7465)))
                                   (f7468 x8837))))
                                (TETRA/C j7466 k7467 x8836))))
                             g8835))))
                        g8834))
                     'module
                     'importer
                     tetra-rotate-ccw))
                   (x8824
                    (letrec*
                     ((x8825
                       (letrec*
                        ((x8828
                          (letrec*
                           ((x8829
                             (letrec*
                              ((x8832 (input))
                               (x8830
                                (letrec* ((x8831 (input))) (cons x8831 '()))))
                              (cons x8832 x8830))))
                           (cons 'posn x8829)))
                         (x8826 (letrec* ((x8827 (input))) (cons x8827 '()))))
                        (cons x8828 x8826))))
                     (cons 'tetra x8825))))
                  (x8833 x8824)))
                (g8558
                 (letrec*
                  ((x8847
                    ((lambda (j7470 k7471 f7472)
                       (letrec*
                        ((g8848
                          (lambda (g7469)
                            (letrec*
                             ((g8849
                               (letrec*
                                ((x8850
                                  (letrec*
                                   ((x8851 (TETRA/C j7470 k7471 g7469)))
                                   (f7472 x8851))))
                                (TETRA/C j7470 k7471 x8850))))
                             g8849))))
                        g8848))
                     'module
                     'importer
                     tetra-rotate-cw))
                   (x8838
                    (letrec*
                     ((x8839
                       (letrec*
                        ((x8842
                          (letrec*
                           ((x8843
                             (letrec*
                              ((x8846 (input))
                               (x8844
                                (letrec* ((x8845 (input))) (cons x8845 '()))))
                              (cons x8846 x8844))))
                           (cons 'posn x8843)))
                         (x8840 (letrec* ((x8841 (input))) (cons x8841 '()))))
                        (cons x8842 x8840))))
                     (cons 'tetra x8839))))
                  (x8847 x8838)))
                (g8559
                 (letrec*
                  ((x8862
                    ((lambda (j7475 k7476 f7477)
                       (letrec*
                        ((g8863
                          (lambda (g7473 g7474)
                            (letrec*
                             ((g8864
                               (letrec*
                                ((x8865
                                  (letrec*
                                   ((x8867 (TETRA/C j7475 k7476 g7473))
                                    (x8866 (BSET/C j7475 k7476 g7474)))
                                   (f7477 x8867 x8866))))
                                (boolean?/c j7475 k7476 x8865))))
                             g8864))))
                        g8863))
                     'module
                     'importer
                     tetra-overlaps-blocks?))
                   (x8853
                    (letrec*
                     ((x8854
                       (letrec*
                        ((x8857
                          (letrec*
                           ((x8858
                             (letrec*
                              ((x8861 (input))
                               (x8859
                                (letrec* ((x8860 (input))) (cons x8860 '()))))
                              (cons x8861 x8859))))
                           (cons 'posn x8858)))
                         (x8855 (letrec* ((x8856 (input))) (cons x8856 '()))))
                        (cons x8857 x8855))))
                     (cons 'tetra x8854)))
                   (x8852 (input)))
                  (x8862 x8853 x8852)))
                (g8560
                 (letrec*
                  ((x8879
                    ((lambda (j7489 k7490 f7491)
                       (letrec*
                        ((g8880
                          (lambda (g7478
                                   g7479
                                   g7480
                                   g7481
                                   g7482
                                   g7483
                                   g7484
                                   g7485
                                   g7486
                                   g7487
                                   g7488)
                            (letrec*
                             ((g8881
                               (letrec*
                                ((x8882
                                  (letrec*
                                   ((x8893 (COLOR/C j7489 k7490 g7478))
                                    (x8892 (real?/c j7489 k7490 g7479))
                                    (x8891 (real?/c j7489 k7490 g7480))
                                    (x8890 (integer?/c j7489 k7490 g7481))
                                    (x8889 (integer?/c j7489 k7490 g7482))
                                    (x8888 (integer?/c j7489 k7490 g7483))
                                    (x8887 (integer?/c j7489 k7490 g7484))
                                    (x8886 (integer?/c j7489 k7490 g7485))
                                    (x8885 (integer?/c j7489 k7490 g7486))
                                    (x8884 (integer?/c j7489 k7490 g7487))
                                    (x8883 (integer?/c j7489 k7490 g7488)))
                                   (f7491
                                    x8893
                                    x8892
                                    x8891
                                    x8890
                                    x8889
                                    x8888
                                    x8887
                                    x8886
                                    x8885
                                    x8884
                                    x8883))))
                                (TETRA/C j7489 k7490 x8882))))
                             g8881))))
                        g8880))
                     'module
                     'importer
                     build-tetra-blocks))
                   (x8878 (input))
                   (x8877 (input))
                   (x8876 (input))
                   (x8875 (input))
                   (x8874 (input))
                   (x8873 (input))
                   (x8872 (input))
                   (x8871 (input))
                   (x8870 (input))
                   (x8869 (input))
                   (x8868 (input)))
                  (x8879
                   x8878
                   x8877
                   x8876
                   x8875
                   x8874
                   x8873
                   x8872
                   x8871
                   x8870
                   x8869
                   x8868)))
                (g8561
                 (letrec*
                  ((x8904
                    ((lambda (j7494 k7495 f7496)
                       (letrec*
                        ((g8905
                          (lambda (g7492 g7493)
                            (letrec*
                             ((g8906
                               (letrec*
                                ((x8907
                                  (letrec*
                                   ((x8909 (TETRA/C j7494 k7495 g7492))
                                    (x8908 (COLOR/C j7494 k7495 g7493)))
                                   (f7496 x8909 x8908))))
                                (TETRA/C j7494 k7495 x8907))))
                             g8906))))
                        g8905))
                     'module
                     'importer
                     tetra-change-color))
                   (x8895
                    (letrec*
                     ((x8896
                       (letrec*
                        ((x8899
                          (letrec*
                           ((x8900
                             (letrec*
                              ((x8903 (input))
                               (x8901
                                (letrec* ((x8902 (input))) (cons x8902 '()))))
                              (cons x8903 x8901))))
                           (cons 'posn x8900)))
                         (x8897 (letrec* ((x8898 (input))) (cons x8898 '()))))
                        (cons x8899 x8897))))
                     (cons 'tetra x8896)))
                   (x8894 (input)))
                  (x8904 x8895 x8894)))
                (g8562
                 (letrec*
                  ((x8924
                    ((lambda (j7499 k7500 f7501)
                       (letrec*
                        ((g8925
                          (lambda (g7497 g7498)
                            (letrec*
                             ((g8926
                               (letrec*
                                ((x8927
                                  (letrec*
                                   ((x8929 (WORLD/C j7499 k7500 g7497))
                                    (x8928 (string?/c j7499 k7500 g7498)))
                                   (f7501 x8929 x8928))))
                                (WORLD/C j7499 k7500 x8927))))
                             g8926))))
                        g8925))
                     'module
                     'importer
                     world-key-move))
                   (x8911
                    (letrec*
                     ((x8912
                       (letrec*
                        ((x8915
                          (letrec*
                           ((x8916
                             (letrec*
                              ((x8919
                                (letrec*
                                 ((x8920
                                   (letrec*
                                    ((x8923 (input))
                                     (x8921
                                      (letrec*
                                       ((x8922 (input)))
                                       (cons x8922 '()))))
                                    (cons x8923 x8921))))
                                 (cons 'posn x8920)))
                               (x8917
                                (letrec* ((x8918 (input))) (cons x8918 '()))))
                              (cons x8919 x8917))))
                           (cons 'tetra x8916)))
                         (x8913 (letrec* ((x8914 (input))) (cons x8914 '()))))
                        (cons x8915 x8913))))
                     (cons 'world x8912)))
                   (x8910 (input)))
                  (x8924 x8911 x8910)))
                (g8563
                 (letrec*
                  ((x8944
                    ((lambda (j7504 k7505 f7506)
                       (letrec*
                        ((g8945
                          (lambda (g7502 g7503)
                            (letrec*
                             ((g8946
                               (letrec*
                                ((x8947
                                  (letrec*
                                   ((x8951 (WORLD/C j7504 k7505 g7502))
                                    (x8948
                                     (letrec*
                                      ((x8949
                                        (letrec*
                                         ((x8950 (listof TETRA/C)))
                                         (and/c cons?/c x8950))))
                                      (x8949 j7504 k7505 g7503))))
                                   (f7506 x8951 x8948))))
                                (WORLD/C j7504 k7505 x8947))))
                             g8946))))
                        g8945))
                     'module
                     'importer
                     next-world))
                   (x8931
                    (letrec*
                     ((x8932
                       (letrec*
                        ((x8935
                          (letrec*
                           ((x8936
                             (letrec*
                              ((x8939
                                (letrec*
                                 ((x8940
                                   (letrec*
                                    ((x8943 (input))
                                     (x8941
                                      (letrec*
                                       ((x8942 (input)))
                                       (cons x8942 '()))))
                                    (cons x8943 x8941))))
                                 (cons 'posn x8940)))
                               (x8937
                                (letrec* ((x8938 (input))) (cons x8938 '()))))
                              (cons x8939 x8937))))
                           (cons 'tetra x8936)))
                         (x8933 (letrec* ((x8934 (input))) (cons x8934 '()))))
                        (cons x8935 x8933))))
                     (cons 'world x8932)))
                   (x8930 (input)))
                  (x8944 x8931 x8930)))
                (g8564
                 (letrec*
                  ((x8965
                    ((lambda (j7508 k7509 f7510)
                       (letrec*
                        ((g8966
                          (lambda (g7507)
                            (letrec*
                             ((g8967
                               (letrec*
                                ((x8968
                                  (letrec*
                                   ((x8969 (WORLD/C j7508 k7509 g7507)))
                                   (f7510 x8969))))
                                (BSET/C j7508 k7509 x8968))))
                             g8967))))
                        g8966))
                     'module
                     'importer
                     ghost-blocks))
                   (x8952
                    (letrec*
                     ((x8953
                       (letrec*
                        ((x8956
                          (letrec*
                           ((x8957
                             (letrec*
                              ((x8960
                                (letrec*
                                 ((x8961
                                   (letrec*
                                    ((x8964 (input))
                                     (x8962
                                      (letrec*
                                       ((x8963 (input)))
                                       (cons x8963 '()))))
                                    (cons x8964 x8962))))
                                 (cons 'posn x8961)))
                               (x8958
                                (letrec* ((x8959 (input))) (cons x8959 '()))))
                              (cons x8960 x8958))))
                           (cons 'tetra x8957)))
                         (x8954 (letrec* ((x8955 (input))) (cons x8955 '()))))
                        (cons x8956 x8954))))
                     (cons 'world x8953))))
                  (x8965 x8952)))
                (g8565
                 (letrec*
                  ((x8971
                    ((lambda (j7512 k7513 f7514)
                       (letrec*
                        ((g8972
                          (lambda (g7511)
                            (letrec*
                             ((g8973
                               (letrec*
                                ((x8974
                                  (letrec*
                                   ((x8975 (any/c j7512 k7513 g7511)))
                                   (f7514 x8975))))
                                (boolean?/c j7512 k7513 x8974))))
                             g8973))))
                        g8972))
                     'module
                     'importer
                     image?))
                   (x8970 (input)))
                  (x8971 x8970)))
                (g8566
                 (letrec*
                  ((x8978
                    ((lambda (j7517 k7518 f7519)
                       (letrec*
                        ((g8979
                          (lambda (g7515 g7516)
                            (letrec*
                             ((g8980
                               (letrec*
                                ((x8981
                                  (letrec*
                                   ((x8983 (image? j7517 k7518 g7515))
                                    (x8982 (image? j7517 k7518 g7516)))
                                   (f7519 x8983 x8982))))
                                (image? j7517 k7518 x8981))))
                             g8980))))
                        g8979))
                     'module
                     'importer
                     overlay))
                   (x8977 (input))
                   (x8976 (input)))
                  (x8978 x8977 x8976)))
                (g8567
                 (letrec*
                  ((x8987
                    ((lambda (j7523 k7524 f7525)
                       (letrec*
                        ((g8988
                          (lambda (g7520 g7521 g7522)
                            (letrec*
                             ((g8989
                               (letrec*
                                ((x8990
                                  (letrec*
                                   ((x8993 (real?/c j7523 k7524 g7520))
                                    (x8992 (real?/c j7523 k7524 g7521))
                                    (x8991 (string?/c j7523 k7524 g7522)))
                                   (f7525 x8993 x8992 x8991))))
                                (image? j7523 k7524 x8990))))
                             g8989))))
                        g8988))
                     'module
                     'importer
                     circle))
                   (x8986 (input))
                   (x8985 (input))
                   (x8984 (input)))
                  (x8987 x8986 x8985 x8984)))
                (g8568
                 (letrec*
                  ((x8998
                    ((lambda (j7530 k7531 f7532)
                       (letrec*
                        ((g8999
                          (lambda (g7526 g7527 g7528 g7529)
                            (letrec*
                             ((g9000
                               (letrec*
                                ((x9001
                                  (letrec*
                                   ((x9005 (real?/c j7530 k7531 g7526))
                                    (x9004 (real?/c j7530 k7531 g7527))
                                    (x9003 (COLOR/C j7530 k7531 g7528))
                                    (x9002 (COLOR/C j7530 k7531 g7529)))
                                   (f7532 x9005 x9004 x9003 x9002))))
                                (image? j7530 k7531 x9001))))
                             g9000))))
                        g8999))
                     'module
                     'importer
                     rectangle))
                   (x8997 (input))
                   (x8996 (input))
                   (x8995 (input))
                   (x8994 (input)))
                  (x8998 x8997 x8996 x8995 x8994)))
                (g8569
                 (letrec*
                  ((x9010
                    ((lambda (j7537 k7538 f7539)
                       (letrec*
                        ((g9011
                          (lambda (g7533 g7534 g7535 g7536)
                            (letrec*
                             ((g9012
                               (letrec*
                                ((x9013
                                  (letrec*
                                   ((x9017 (image/c j7537 k7538 g7533))
                                    (x9016 (real?/c j7537 k7538 g7534))
                                    (x9015 (real?/c j7537 k7538 g7535))
                                    (x9014 (image/c j7537 k7538 g7536)))
                                   (f7539 x9017 x9016 x9015 x9014))))
                                (image/c j7537 k7538 x9013))))
                             g9012))))
                        g9011))
                     'module
                     'importer
                     place-image))
                   (x9009 (input))
                   (x9008 (input))
                   (x9007 (input))
                   (x9006 (input)))
                  (x9010 x9009 x9008 x9007 x9006)))
                (g8570
                 (letrec*
                  ((x9020
                    ((lambda (j7542 k7543 f7544)
                       (letrec*
                        ((g9021
                          (lambda (g7540 g7541)
                            (letrec*
                             ((g9022
                               (letrec*
                                ((x9023
                                  (letrec*
                                   ((x9025 (real?/c j7542 k7543 g7540))
                                    (x9024 (real?/c j7542 k7543 g7541)))
                                   (f7544 x9025 x9024))))
                                (image? j7542 k7543 x9023))))
                             g9022))))
                        g9021))
                     'module
                     'importer
                     empty-scene))
                   (x9019 (input))
                   (x9018 (input)))
                  (x9020 x9019 x9018)))
                (g8571
                 (letrec*
                  ((x9027
                    ((lambda (j7546 k7547 f7548)
                       (letrec*
                        ((g9028
                          (lambda (g7545)
                            (letrec*
                             ((g9029
                               (letrec*
                                ((x9030
                                  (letrec*
                                   ((x9031
                                     (letrec*
                                      ((x9032
                                        (letrec*
                                         ((x9033 (listof TETRA/C)))
                                         (and/c cons?/c x9033))))
                                      (x9032 j7546 k7547 g7545))))
                                   (f7548 x9031))))
                                (TETRA/C j7546 k7547 x9030))))
                             g9029))))
                        g9028))
                     'module
                     'importer
                     list-pick-random))
                   (x9026 (input)))
                  (x9027 x9026)))
                (g8572 (integer?/c 'module 'importer neg-1))
                (g8573
                 (letrec*
                  ((x9047
                    ((lambda (j7550 k7551 f7552)
                       (letrec*
                        ((g9048
                          (lambda (g7549)
                            (letrec*
                             ((g9049
                               (letrec*
                                ((x9050
                                  (letrec*
                                   ((x9051 (WORLD/C j7550 k7551 g7549)))
                                   (f7552 x9051))))
                                (image/c j7550 k7551 x9050))))
                             g9049))))
                        g9048))
                     'module
                     'importer
                     world->image))
                   (x9034
                    (letrec*
                     ((x9035
                       (letrec*
                        ((x9038
                          (letrec*
                           ((x9039
                             (letrec*
                              ((x9042
                                (letrec*
                                 ((x9043
                                   (letrec*
                                    ((x9046 (input))
                                     (x9044
                                      (letrec*
                                       ((x9045 (input)))
                                       (cons x9045 '()))))
                                    (cons x9046 x9044))))
                                 (cons 'posn x9043)))
                               (x9040
                                (letrec* ((x9041 (input))) (cons x9041 '()))))
                              (cons x9042 x9040))))
                           (cons 'tetra x9039)))
                         (x9036 (letrec* ((x9037 (input))) (cons x9037 '()))))
                        (cons x9038 x9036))))
                     (cons 'world x9035))))
                  (x9047 x9034)))
                (g8574
                 (letrec*
                  ((x9053
                    ((lambda (j7554 k7555 f7556)
                       (letrec*
                        ((g9054
                          (lambda (g7553)
                            (letrec*
                             ((g9055
                               (letrec*
                                ((x9056
                                  (letrec*
                                   ((x9057 (BSET/C j7554 k7555 g7553)))
                                   (f7556 x9057))))
                                (image/c j7554 k7555 x9056))))
                             g9055))))
                        g9054))
                     'module
                     'importer
                     blocks->image))
                   (x9052 (input)))
                  (x9053 x9052)))
                (g8575
                 (letrec*
                  ((x9065
                    ((lambda (j7558 k7559 f7560)
                       (letrec*
                        ((g9066
                          (lambda (g7557)
                            (letrec*
                             ((g9067
                               (letrec*
                                ((x9068
                                  (letrec*
                                   ((x9069 (BLOCK/C j7558 k7559 g7557)))
                                   (f7560 x9069))))
                                (image/c j7558 k7559 x9068))))
                             g9067))))
                        g9066))
                     'module
                     'importer
                     block->image))
                   (x9058
                    (letrec*
                     ((x9059
                       (letrec*
                        ((x9064 (input))
                         (x9060
                          (letrec*
                           ((x9063 (input))
                            (x9061
                             (letrec* ((x9062 (input))) (cons x9062 '()))))
                           (cons x9063 x9061))))
                        (cons x9064 x9060))))
                     (cons 'block x9059))))
                  (x9065 x9058)))
                (g8576
                 (letrec*
                  ((x9078
                    ((lambda (j7563 k7564 f7565)
                       (letrec*
                        ((g9079
                          (lambda (g7561 g7562)
                            (letrec*
                             ((g9080
                               (letrec*
                                ((x9081
                                  (letrec*
                                   ((x9083 (BLOCK/C j7563 k7564 g7561))
                                    (x9082 (image/c j7563 k7564 g7562)))
                                   (f7565 x9083 x9082))))
                                (image/c j7563 k7564 x9081))))
                             g9080))))
                        g9079))
                     'module
                     'importer
                     place-block))
                   (x9071
                    (letrec*
                     ((x9072
                       (letrec*
                        ((x9077 (input))
                         (x9073
                          (letrec*
                           ((x9076 (input))
                            (x9074
                             (letrec* ((x9075 (input))) (cons x9075 '()))))
                           (cons x9076 x9074))))
                        (cons x9077 x9073))))
                     (cons 'block x9072)))
                   (x9070 (input)))
                  (x9078 x9071 x9070)))
                (g8577
                 (letrec*
                  ((x9085
                    ((lambda (j7567 k7568 f7569)
                       (letrec*
                        ((g9086
                          (lambda (g7566)
                            (letrec*
                             ((g9087
                               (letrec*
                                ((x9088
                                  (letrec*
                                   ((x9089
                                     (letrec*
                                      ((x9090
                                        (letrec*
                                         ((x9091 (listof TETRA/C)))
                                         (and/c cons?/c x9091))))
                                      (x9090 j7567 k7568 g7566))))
                                   (f7569 x9089))))
                                (WORLD/C j7567 k7568 x9088))))
                             g9087))))
                        g9086))
                     'module
                     'importer
                     world0))
                   (x9084 (input)))
                  (x9085 x9084))))
               g8577))))
           g7606))))
       g7604)))
    g7603)))
