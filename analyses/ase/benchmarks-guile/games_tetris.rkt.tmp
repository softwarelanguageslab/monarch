(begin
  (use-modules (srfi srfi-28))
  (define (add1 x) (+ x 1))
  (define (sub1 x) (+ x 1))
  (set! *random-state* (random-state-from-platform))
  (define (input) (expt 2 64))
  (begin
    (letrec*
     ((any? (lambda (v) (letrec* ((g7593 #t)) g7593)))
      (meta (lambda (v) (letrec* ((g7594 v)) g7594)))
      (member
       (lambda (v lst)
         (letrec*
          ((g7595
            (letrec*
             ((g7596
               (letrec*
                ((x-e7597 lst))
                (letrec*
                 ((v1742 x-e7597))
                 (cond
                  ((null? v1742) (letrec* () #f))
                  ((and #t #t)
                   (letrec*
                    ((v1 (car v1742)) (vs (cdr v1742)))
                    (letrec*
                     ((x-cnd7598 (eq? v v1)))
                     (if x-cnd7598 #t (member v vs)))))
                  (else (error "no match found")))))))
             g7596)))
          g7595)))
      (unconstrained/c #f)
      (actor?
       (lambda (k j)
         (letrec* ((g7599 (lambda (v) (letrec* ((g7600 v)) g7600)))) g7599)))
      (nonzero?
       (lambda (v)
         (letrec* ((g7601 (letrec* ((x7602 (= v 0))) (not x7602)))) g7601))))
     (letrec*
      ((g7603
        (letrec*
         ((g7604
           (letrec*
            ((orig-+ +)
             (orig-- -)
             (orig-* *)
             (orig-/ /)
             (orig-car car)
             (orig-cdr cdr)
             (orig-cons cons)
             (orig-vector-ref vector-ref)
             (orig-vector-set vector-set!))
            (letrec*
             ((g7605 '())
              (g7606
               (letrec*
                ((empty '())
                 (listof
                  (lambda (contract)
                    (letrec*
                     ((g7607
                       (lambda (k j lst)
                         (letrec*
                          ((g7608
                            (map
                             (lambda (v)
                               (letrec* ((g7609 (contract k j v))) g7609))
                             lst)))
                          g7608))))
                     g7607)))
                 (real?/c
                  (lambda (g7259 g7260 g7261)
                    (letrec*
                     ((g7610
                       (letrec*
                        ((x-cnd7611 (real? g7261)))
                        (if x-cnd7611 g7261 (blame g7259 'real?)))))
                     g7610)))
                 (boolean?/c
                  (lambda (g7262 g7263 g7264)
                    (letrec*
                     ((g7612
                       (letrec*
                        ((x-cnd7613 (boolean? g7264)))
                        (if x-cnd7613 g7264 (blame g7262 'boolean?)))))
                     g7612)))
                 (number?/c
                  (lambda (g7265 g7266 g7267)
                    (letrec*
                     ((g7614
                       (letrec*
                        ((x-cnd7615 (number? g7267)))
                        (if x-cnd7615 g7267 (blame g7265 'number?)))))
                     g7614)))
                 (any/c
                  (lambda (g7268 g7269 g7270)
                    (letrec*
                     ((g7616
                       (letrec*
                        ((x-cnd7617
                          ((lambda (v) (letrec* ((g7618 #t)) g7618)) g7270)))
                        (if x-cnd7617 g7270 (blame g7268 '(lambda (v) #t))))))
                     g7616)))
                 (any?/c
                  (lambda (g7271 g7272 g7273)
                    (letrec*
                     ((g7619
                       (letrec*
                        ((x-cnd7620
                          ((lambda (v) (letrec* ((g7621 #t)) g7621)) g7273)))
                        (if x-cnd7620 g7273 (blame g7271 '(lambda (v) #t))))))
                     g7619)))
                 (cons?/c
                  (lambda (g7274 g7275 g7276)
                    (letrec*
                     ((g7622
                       (letrec*
                        ((x-cnd7623 (pair? g7276)))
                        (if x-cnd7623 g7276 (blame g7274 'pair?)))))
                     g7622)))
                 (pair?/c
                  (lambda (g7277 g7278 g7279)
                    (letrec*
                     ((g7624
                       (letrec*
                        ((x-cnd7625 (pair? g7279)))
                        (if x-cnd7625 g7279 (blame g7277 'pair?)))))
                     g7624)))
                 (integer?/c
                  (lambda (g7280 g7281 g7282)
                    (letrec*
                     ((g7626
                       (letrec*
                        ((x-cnd7627 (integer? g7282)))
                        (if x-cnd7627 g7282 (blame g7280 'integer?)))))
                     g7626)))
                 (and/c
                  (lambda (c1 c2)
                    (letrec*
                     ((g7628
                       (lambda (k j v)
                         (letrec*
                          ((g7629
                            (letrec*
                             ((x-cnd7630 (c1 k j v)))
                             (if x-cnd7630 (c2 k j v) #f))))
                          g7629))))
                     g7628)))
                 (list-of
                  (lambda (contract)
                    (letrec*
                     ((g7631
                       (lambda (k j v)
                         (letrec*
                          ((g7632
                            (letrec*
                             ((x-cnd7633 (null? v)))
                             (if x-cnd7633
                               '()
                               (letrec*
                                ((x7637
                                  (letrec*
                                   ((x7638 (car v)))
                                   (contract k j x7638)))
                                 (x7634
                                  (letrec*
                                   ((x7636 (list-of contract)) (x7635 (cdr v)))
                                   (x7636 k j x7635))))
                                (orig-cons x7637 x7634))))))
                          g7632))))
                     g7631)))
                 (any? (lambda (v) (letrec* ((g7639 #t)) g7639)))
                 (nonzero?
                  (lambda (v)
                    (letrec*
                     ((g7640 (letrec* ((x7641 (= v 0))) (not x7641))))
                     g7640)))
                 (nonzero?/c
                  (lambda (g7283 g7284 g7285)
                    (letrec*
                     ((g7642
                       (letrec*
                        ((x-cnd7643
                          ((lambda (v)
                             (letrec*
                              ((g7644 (letrec* ((x7645 (= v 0))) (not x7645))))
                              g7644))
                           g7285)))
                        (if x-cnd7643
                          g7285
                          (blame g7283 '(lambda (v) (not (= v 0))))))))
                     g7642)))
                 (meta (lambda (v) (letrec* ((g7646 v)) g7646)))
                 (+
                  ((lambda (j7288 k7289 f7290)
                     (letrec*
                      ((g7648
                        (lambda (g7286 g7287)
                          (letrec*
                           ((g7649
                             (letrec*
                              ((x7650
                                (letrec*
                                 ((x7652 (number?/c j7288 k7289 g7286))
                                  (x7651 (number?/c j7288 k7289 g7287)))
                                 (f7290 x7652 x7651))))
                              (number?/c j7288 k7289 x7650))))
                           g7649))))
                      g7648))
                   'server
                   'client
                   (lambda (a b) (letrec* ((g7647 (orig-+ a b))) g7647))))
                 (-
                  ((lambda (j7293 k7294 f7295)
                     (letrec*
                      ((g7654
                        (lambda (g7291 g7292)
                          (letrec*
                           ((g7655
                             (letrec*
                              ((x7656
                                (letrec*
                                 ((x7658 (number?/c j7293 k7294 g7291))
                                  (x7657 (number?/c j7293 k7294 g7292)))
                                 (f7295 x7658 x7657))))
                              (number?/c j7293 k7294 x7656))))
                           g7655))))
                      g7654))
                   'server
                   'client
                   (lambda (a b) (letrec* ((g7653 (orig-- a b))) g7653))))
                 (*
                  ((lambda (j7298 k7299 f7300)
                     (letrec*
                      ((g7660
                        (lambda (g7296 g7297)
                          (letrec*
                           ((g7661
                             (letrec*
                              ((x7662
                                (letrec*
                                 ((x7664 (number?/c j7298 k7299 g7296))
                                  (x7663 (number?/c j7298 k7299 g7297)))
                                 (f7300 x7664 x7663))))
                              (number?/c j7298 k7299 x7662))))
                           g7661))))
                      g7660))
                   'server
                   'client
                   (lambda (a b) (letrec* ((g7659 (orig-* a b))) g7659))))
                 (/
                  ((lambda (j7303 k7304 f7305)
                     (letrec*
                      ((g7666
                        (lambda (g7301 g7302)
                          (letrec*
                           ((g7667
                             (letrec*
                              ((x7668
                                (letrec*
                                 ((x7670 (number?/c j7303 k7304 g7301))
                                  (x7669 (number?/c j7303 k7304 g7302)))
                                 (f7305 x7670 x7669))))
                              (number?/c j7303 k7304 x7668))))
                           g7667))))
                      g7666))
                   'server
                   'client
                   (lambda (a b) (letrec* ((g7665 (orig-/ a b))) g7665))))
                 (car
                  ((lambda (j7307 k7308 f7309)
                     (letrec*
                      ((g7672
                        (lambda (g7306)
                          (letrec*
                           ((g7673
                             (letrec*
                              ((x7674
                                (letrec*
                                 ((x7675 (pair?/c j7307 k7308 g7306)))
                                 (f7309 x7675))))
                              (any/c j7307 k7308 x7674))))
                           g7673))))
                      g7672))
                   'server
                   'client
                   (lambda (p) (letrec* ((g7671 (orig-car p))) g7671))))
                 (cdr
                  ((lambda (j7311 k7312 f7313)
                     (letrec*
                      ((g7677
                        (lambda (g7310)
                          (letrec*
                           ((g7678
                             (letrec*
                              ((x7679
                                (letrec*
                                 ((x7680 (pair?/c j7311 k7312 g7310)))
                                 (f7313 x7680))))
                              (any/c j7311 k7312 x7679))))
                           g7678))))
                      g7677))
                   'server
                   'client
                   (lambda (p) (letrec* ((g7676 (orig-cdr p))) g7676))))
                 (cons
                  ((lambda (j7316 k7317 f7318)
                     (letrec*
                      ((g7682
                        (lambda (g7314 g7315)
                          (letrec*
                           ((g7683
                             (letrec*
                              ((x7684
                                (letrec*
                                 ((x7686 (any/c j7316 k7317 g7314))
                                  (x7685 (any/c j7316 k7317 g7315)))
                                 (f7318 x7686 x7685))))
                              (pair?/c j7316 k7317 x7684))))
                           g7683))))
                      g7682))
                   'server
                   'client
                   (lambda (a b) (letrec* ((g7681 (orig-cons a b))) g7681))))
                 (vector-ref
                  ((lambda (j7320 k7321 f7322)
                     (letrec*
                      ((g7688
                        (lambda (g7319)
                          (letrec*
                           ((g7689
                             (letrec*
                              ((x7690
                                (letrec*
                                 ((x7691 (vector?/c j7320 k7321 g7319)))
                                 (f7322 x7691))))
                              (integer?/c j7320 k7321 x7690))))
                           g7689))))
                      g7688))
                   'server
                   'client
                   (lambda (v i)
                     (letrec* ((g7687 (orig-vector-ref v i))) g7687))))
                 (vector-set!
                  ((lambda (j7325 k7326 f7327)
                     (letrec*
                      ((g7693
                        (lambda (g7323 g7324)
                          (letrec*
                           ((g7694
                             (letrec*
                              ((x7695
                                (letrec*
                                 ((x7697 (vector?/c j7325 k7326 g7323))
                                  (x7696 (integer?/c j7325 k7326 g7324)))
                                 (f7327 x7697 x7696))))
                              (any/c j7325 k7326 x7695))))
                           g7694))))
                      g7693))
                   'server
                   'client
                   (lambda (vec i v)
                     (letrec* ((g7692 (orig-vector-set! vec i v))) g7692))))
                 (assert
                  (lambda (cnd)
                    (letrec*
                     ((g7698 (if cnd '() (error "assertion failed"))))
                     g7698)))
                 (cdddr
                  (lambda (x)
                    (letrec*
                     ((g7699
                       (letrec*
                        ((x7700 (letrec* ((x7701 (cdr x))) (cdr x7701))))
                        (cdr x7700))))
                     g7699)))
                 (__toplevel_set-car! set-car!)
                 (map
                  (lambda (f l)
                    (letrec*
                     ((g7702 (letrec* ((x7705 (procedure? f))) (assert x7705)))
                      (g7703 (letrec* ((x7706 (list? l))) (assert x7706)))
                      (g7704
                       (letrec*
                        ((x-cnd7707 (null? l)))
                        (if x-cnd7707
                          '()
                          (letrec*
                           ((x7710 (letrec* ((x7711 (car l))) (f x7711)))
                            (x7708 (letrec* ((x7709 (cdr l))) (map f x7709))))
                           (cons x7710 x7708))))))
                     g7704)))
                 (cdar
                  (lambda (x)
                    (letrec*
                     ((g7712 (letrec* ((x7713 (car x))) (cdr x7713))))
                     g7712)))
                 (cadadr
                  (lambda (x)
                    (letrec*
                     ((g7714
                       (letrec*
                        ((x7715
                          (letrec*
                           ((x7716 (letrec* ((x7717 (cdr x))) (car x7717))))
                           (cdr x7716))))
                        (car x7715))))
                     g7714)))
                 (cdadar
                  (lambda (x)
                    (letrec*
                     ((g7718
                       (letrec*
                        ((x7719
                          (letrec*
                           ((x7720 (letrec* ((x7721 (car x))) (cdr x7721))))
                           (car x7720))))
                        (cdr x7719))))
                     g7718)))
                 (call-with-output-file
                  (lambda (filename proc)
                    (letrec*
                     ((g7722
                       (letrec* ((x7725 (string? filename))) (assert x7725)))
                      (g7723
                       (letrec* ((x7726 (procedure? proc))) (assert x7726)))
                      (g7724
                       (letrec*
                        ((output-port (open-output-file filename))
                         (res (proc output-port)))
                        (letrec*
                         ((g7727 (close-output-port output-port)) (g7728 res))
                         g7728))))
                     g7724)))
                 (caddr
                  (lambda (x)
                    (letrec*
                     ((g7729
                       (letrec*
                        ((x7730 (letrec* ((x7731 (cdr x))) (cdr x7731))))
                        (car x7730))))
                     g7729)))
                 (cdaadr
                  (lambda (x)
                    (letrec*
                     ((g7732
                       (letrec*
                        ((x7733
                          (letrec*
                           ((x7734 (letrec* ((x7735 (cdr x))) (car x7735))))
                           (car x7734))))
                        (cdr x7733))))
                     g7732)))
                 (assq
                  (lambda (k l)
                    (letrec*
                     ((g7736 (letrec* ((x7738 (list? l))) (assert x7738)))
                      (g7737
                       (letrec*
                        ((x-cnd7739 (null? l)))
                        (if x-cnd7739
                          #f
                          (letrec*
                           ((x-cnd7740
                             (letrec* ((x7741 (caar l))) (eq? x7741 k))))
                           (if x-cnd7740
                             (car l)
                             (letrec* ((x7742 (cdr l))) (assq k x7742))))))))
                     g7737)))
                 (even?
                  (lambda (x)
                    (letrec*
                     ((g7743 (letrec* ((x7744 (modulo x 2))) (= 0 x7744))))
                     g7743)))
                 (list->string
                  (lambda (l)
                    (letrec*
                     ((g7745 (letrec* ((x7747 (list? l))) (assert x7747)))
                      (g7746
                       (letrec*
                        ((x-cnd7748 (null? l)))
                        (if x-cnd7748
                          ""
                          (letrec*
                           ((x7751
                             (letrec* ((x7752 (car l))) (char->string x7752)))
                            (x7749
                             (letrec* ((x7750 (cdr l))) (list->string x7750))))
                           (string-append x7751 x7749))))))
                     g7746)))
                 (char<=?
                  (lambda (c1 c2)
                    (letrec*
                     ((g7753 (letrec* ((x7756 (char? c1))) (assert x7756)))
                      (g7754 (letrec* ((x7757 (char? c2))) (assert x7757)))
                      (g7755
                       (letrec*
                        ((val7241 (char<? c1 c2)))
                        (letrec*
                         ((g7758 (if val7241 val7241 (char=? c1 c2))))
                         g7758))))
                     g7755)))
                 (cdddar
                  (lambda (x)
                    (letrec*
                     ((g7759
                       (letrec*
                        ((x7760
                          (letrec*
                           ((x7761 (letrec* ((x7762 (car x))) (cdr x7762))))
                           (cdr x7761))))
                        (cdr x7760))))
                     g7759)))
                 (list-tail
                  (lambda (x k)
                    (letrec*
                     ((g7763 (letrec* ((x7766 (list? l))) (assert x7766)))
                      (g7764 (letrec* ((x7767 (number?))) (assert x7767)))
                      (g7765
                       (letrec*
                        ((x-cnd7768 (zero? k)))
                        (if x-cnd7768
                          x
                          (letrec*
                           ((x7770 (cdr x)) (x7769 (- k 1)))
                           (list-tail x7770 x7769))))))
                     g7765)))
                 (halt (lambda () (letrec* ((g7771 '())) g7771)))
                 (char-alphabetic?
                  (lambda (c)
                    (letrec*
                     ((g7772
                       (letrec*
                        ((x-cnd7773
                          (letrec* ((x7774 #\a)) (char-ci>=? c x7774))))
                        (if x-cnd7773
                          (letrec* ((x7775 #\z)) (char-ci<=? c x7775))
                          #f))))
                     g7772)))
                 (<=
                  (lambda (x y)
                    (letrec*
                     ((g7776 (letrec* ((x7778 (number? x))) (assert x7778)))
                      (g7777
                       (letrec*
                        ((val7242 (< x y)))
                        (letrec*
                         ((g7779
                           (if val7242
                             val7242
                             (letrec*
                              ((val7243 (= x y)))
                              (letrec*
                               ((g7780 (if val7243 val7243 #f)))
                               g7780)))))
                         g7779))))
                     g7777)))
                 (char-whitespace?
                  (lambda (c)
                    (letrec*
                     ((g7781
                       (letrec*
                        ((val7244
                          (letrec* ((x7782 (char->integer c))) (= x7782 9))))
                        (letrec*
                         ((g7783
                           (if val7244
                             val7244
                             (letrec*
                              ((val7245
                                (letrec*
                                 ((x7784 (char->integer c)))
                                 (= x7784 10))))
                              (letrec*
                               ((g7785
                                 (if val7245
                                   val7245
                                   (letrec*
                                    ((x7786 (char->integer c)))
                                    (= x7786 32)))))
                               g7785)))))
                         g7783))))
                     g7781)))
                 (cddar
                  (lambda (x)
                    (letrec*
                     ((g7787
                       (letrec*
                        ((x7788 (letrec* ((x7789 (car x))) (cdr x7789))))
                        (cdr x7788))))
                     g7787)))
                 (positive?
                  (lambda (x)
                    (letrec*
                     ((g7790 (letrec* ((x7792 (number? x))) (assert x7792)))
                      (g7791 (> x 0)))
                     g7791)))
                 ($pc '())
                 (ref-set set-car!)
                 (void (lambda () (letrec* ((g7793 #f)) g7793)))
                 (cddr
                  (lambda (x)
                    (letrec*
                     ((g7794 (letrec* ((x7795 (cdr x))) (cdr x7795))))
                     g7794)))
                 (truncate
                  (lambda (x)
                    (letrec*
                     ((g7796 (letrec* ((x7798 (number? x))) (assert x7798)))
                      (g7797
                       (letrec*
                        ((x-cnd7799 (< x 0)))
                        (if x-cnd7799 (ceiling x) (floor x)))))
                     g7797)))
                 ($cmp '())
                 (equal?
                  (lambda (a b)
                    (letrec*
                     ((g7800
                       (letrec*
                        ((val7246 (eq? a b)))
                        (letrec*
                         ((g7801
                           (if val7246
                             val7246
                             (letrec*
                              ((val7247
                                (letrec*
                                 ((x7803 (null? a)) (x7802 (null? b)))
                                 (and x7803 x7802))))
                              (letrec*
                               ((g7804
                                 (if val7247
                                   val7247
                                   (letrec*
                                    ((val7248
                                      (letrec*
                                       ((x7807 (string? a))
                                        (x7806 (string? b))
                                        (x7805 (string=? a b)))
                                       (and x7807 x7806 x7805))))
                                    (letrec*
                                     ((g7808
                                       (if val7248
                                         val7248
                                         (letrec*
                                          ((val7249
                                            (letrec*
                                             ((x7816 (pair? a))
                                              (x7815 (pair? b))
                                              (x7812
                                               (letrec*
                                                ((x7814 (car a))
                                                 (x7813 (car b)))
                                                (equal? x7814 x7813)))
                                              (x7809
                                               (letrec*
                                                ((x7811 (cdr a))
                                                 (x7810 (cdr b)))
                                                (equal? x7811 x7810))))
                                             (and x7816 x7815 x7812 x7809))))
                                          (letrec*
                                           ((g7817
                                             (if val7249
                                               val7249
                                               (letrec*
                                                ((x7833 (vector? a))
                                                 (x7832 (vector? b))
                                                 (x7818
                                                  (letrec*
                                                   ((n (vector-length a)))
                                                   (letrec*
                                                    ((g7819
                                                      (letrec*
                                                       ((x7830
                                                         (letrec*
                                                          ((x7831
                                                            (vector-length b)))
                                                          (= x7831 n)))
                                                        (x7820
                                                         (letrec*
                                                          ((loop
                                                            (lambda (i)
                                                              (letrec*
                                                               ((g7821
                                                                 (letrec*
                                                                  ((x7828
                                                                    (= i n))
                                                                   (x7822
                                                                    (letrec*
                                                                     ((x7825
                                                                       (letrec*
                                                                        ((x7827
                                                                          (vector-ref
                                                                           a
                                                                           i))
                                                                         (x7826
                                                                          (vector-ref
                                                                           b
                                                                           i)))
                                                                        (equal?
                                                                         x7827
                                                                         x7826)))
                                                                      (x7823
                                                                       (letrec*
                                                                        ((x7824
                                                                          (+
                                                                           i
                                                                           1)))
                                                                        (loop
                                                                         x7824))))
                                                                     (and x7825
                                                                          x7823))))
                                                                  (or x7828
                                                                      x7822))))
                                                               g7821))))
                                                          (letrec*
                                                           ((g7829 (loop 0)))
                                                           g7829))))
                                                       (and x7830 x7820))))
                                                    g7819))))
                                                (and x7833 x7832 x7818)))))
                                           g7817)))))
                                     g7808)))))
                               g7804)))))
                         g7801))))
                     g7800)))
                 (cdaaar
                  (lambda (x)
                    (letrec*
                     ((g7834
                       (letrec*
                        ((x7835
                          (letrec*
                           ((x7836 (letrec* ((x7837 (car x))) (car x7837))))
                           (car x7836))))
                        (cdr x7835))))
                     g7834)))
                 (caaddr
                  (lambda (x)
                    (letrec*
                     ((g7838
                       (letrec*
                        ((x7839
                          (letrec*
                           ((x7840 (letrec* ((x7841 (cdr x))) (cdr x7841))))
                           (car x7840))))
                        (car x7839))))
                     g7838)))
                 (eqv? (lambda (x y) (letrec* ((g7842 (eq? x y))) g7842)))
                 (>=
                  (lambda (x y)
                    (letrec*
                     ((g7843 (letrec* ((x7845 (number? x))) (assert x7845)))
                      (g7844
                       (letrec*
                        ((val7250 (> x y)))
                        (letrec*
                         ((g7846
                           (if val7250
                             val7250
                             (letrec*
                              ((val7251 (= x y)))
                              (letrec*
                               ((g7847 (if val7251 val7251 #f)))
                               g7847)))))
                         g7846))))
                     g7844)))
                 (call-with-input-file
                  (lambda (filename proc)
                    (letrec*
                     ((g7848
                       (letrec* ((x7851 (string? filename))) (assert x7851)))
                      (g7849
                       (letrec* ((x7852 (procedure? proc))) (assert x7852)))
                      (g7850
                       (letrec*
                        ((input-port (open-input-file filename))
                         (res (proc input-port)))
                        (letrec*
                         ((g7853 (close-input-port input-port)) (g7854 res))
                         g7854))))
                     g7850)))
                 (ref (lambda (x) (letrec* ((g7855 (cons x '()))) g7855)))
                 (char>=?
                  (lambda (c1 c2)
                    (letrec*
                     ((g7856 (letrec* ((x7859 (char? c1))) (assert x7859)))
                      (g7857 (letrec* ((x7860 (char? c2))) (assert x7860)))
                      (g7858
                       (letrec*
                        ((val7252 (char>? c1 c2)))
                        (letrec*
                         ((g7861 (if val7252 val7252 (char=? c1 c2))))
                         g7861))))
                     g7858)))
                 (cdaar
                  (lambda (x)
                    (letrec*
                     ((g7862
                       (letrec*
                        ((x7863 (letrec* ((x7864 (car x))) (car x7864))))
                        (cdr x7863))))
                     g7862)))
                 (cdaddr
                  (lambda (x)
                    (letrec*
                     ((g7865
                       (letrec*
                        ((x7866
                          (letrec*
                           ((x7867 (letrec* ((x7868 (cdr x))) (cdr x7868))))
                           (car x7867))))
                        (cdr x7866))))
                     g7865)))
                 (__toplevel_cdr cdr)
                 (cadar
                  (lambda (x)
                    (letrec*
                     ((g7869
                       (letrec*
                        ((x7870 (letrec* ((x7871 (car x))) (cdr x7871))))
                        (car x7870))))
                     g7869)))
                 (caadr
                  (lambda (x)
                    (letrec*
                     ((g7872
                       (letrec*
                        ((x7873 (letrec* ((x7874 (cdr x))) (car x7874))))
                        (car x7873))))
                     g7872)))
                 (char-ci>?
                  (lambda (c1 c2)
                    (letrec*
                     ((g7875 (letrec* ((x7878 (char? c1))) (assert x7878)))
                      (g7876 (letrec* ((x7879 (char? c2))) (assert x7879)))
                      (g7877
                       (letrec* ((x7880 (char-ci<=? c1 c2))) (not x7880))))
                     g7877)))
                 (__toplevel_set-cdr! set-cdr!)
                 (caaaar
                  (lambda (x)
                    (letrec*
                     ((g7881
                       (letrec*
                        ((x7882
                          (letrec*
                           ((x7883 (letrec* ((x7884 (car x))) (car x7884))))
                           (car x7883))))
                        (car x7882))))
                     g7881)))
                 (negative?
                  (lambda (x)
                    (letrec*
                     ((g7885 (letrec* ((x7887 (number? x))) (assert x7887)))
                      (g7886 (< x 0)))
                     g7886)))
                 (memv (lambda (e l) (letrec* ((g7888 (memq e l))) g7888)))
                 (caaar
                  (lambda (x)
                    (letrec*
                     ((g7889
                       (letrec*
                        ((x7890 (letrec* ((x7891 (car x))) (car x7891))))
                        (car x7890))))
                     g7889)))
                 (debug (lambda (e) (letrec* ((g7892 '())) g7892)))
                 (reverse
                  (lambda (l)
                    (letrec*
                     ((g7893 (letrec* ((x7895 (list? l))) (assert x7895)))
                      (g7894
                       (letrec*
                        ((x-cnd7896 (null? l)))
                        (if x-cnd7896
                          '()
                          (letrec*
                           ((x7899 (letrec* ((x7900 (cdr l))) (reverse x7900)))
                            (x7897 (letrec* ((x7898 (car l))) (list x7898))))
                           (append x7899 x7897))))))
                     g7894)))
                 (caaadr
                  (lambda (x)
                    (letrec*
                     ((g7901
                       (letrec*
                        ((x7902
                          (letrec*
                           ((x7903 (letrec* ((x7904 (cdr x))) (car x7904))))
                           (car x7903))))
                        (car x7902))))
                     g7901)))
                 (cddadr
                  (lambda (x)
                    (letrec*
                     ((g7905
                       (letrec*
                        ((x7906
                          (letrec*
                           ((x7907 (letrec* ((x7908 (cdr x))) (car x7908))))
                           (cdr x7907))))
                        (cdr x7906))))
                     g7905)))
                 (odd?
                  (lambda (x)
                    (letrec*
                     ((g7909 (letrec* ((x7911 (number? x))) (assert x7911)))
                      (g7910 (letrec* ((x7912 (modulo x 2))) (= 1 x7912))))
                     g7910)))
                 (caadar
                  (lambda (x)
                    (letrec*
                     ((g7913
                       (letrec*
                        ((x7914
                          (letrec*
                           ((x7915 (letrec* ((x7916 (car x))) (cdr x7916))))
                           (car x7915))))
                        (car x7914))))
                     g7913)))
                 (apply
                  (lambda (proc args)
                    (letrec*
                     ((g7917
                       (letrec* ((x7920 (procedure? proc))) (assert x7920)))
                      (g7918 (letrec* ((x7921 (list? args))) (assert x7921)))
                      (g7919
                       (if cnd
                         (letrec* ((g7922 (proc))) g7922)
                         (if cnd
                           (letrec*
                            ((g7923
                              (letrec* ((x7924 (car args))) (proc x7924))))
                            g7923)
                           (if cnd
                             (letrec*
                              ((g7925
                                (letrec*
                                 ((x7927 (car args)) (x7926 (cadr args)))
                                 (proc x7927 x7926))))
                              g7925)
                             (if cnd
                               (letrec*
                                ((g7928
                                  (letrec*
                                   ((x7931 (car args))
                                    (x7930 (cadr args))
                                    (x7929 (caddr args)))
                                   (proc x7931 x7930 x7929))))
                                g7928)
                               (if cnd
                                 (letrec*
                                  ((g7932
                                    (letrec*
                                     ((x7936 (car args))
                                      (x7935 (cadr args))
                                      (x7934 (caddr args))
                                      (x7933 (cadddr args)))
                                     (proc x7936 x7935 x7934 x7933))))
                                  g7932)
                                 (if cnd
                                   (letrec*
                                    ((g7937
                                      (letrec*
                                       ((x7943 (car args))
                                        (x7942 (cadr args))
                                        (x7941 (caddr args))
                                        (x7940 (cadddr args))
                                        (x7938
                                         (letrec*
                                          ((x7939 (cddddr args)))
                                          (car x7939))))
                                       (proc x7943 x7942 x7941 x7940 x7938))))
                                    g7937)
                                   (if cnd
                                     (letrec*
                                      ((g7944
                                        (letrec*
                                         ((x7952 (car args))
                                          (x7951 (cadr args))
                                          (x7950 (caddr args))
                                          (x7949 (cadddr args))
                                          (x7947
                                           (letrec*
                                            ((x7948 (cddddr args)))
                                            (car x7948)))
                                          (x7945
                                           (letrec*
                                            ((x7946 (cddddr args)))
                                            (cadr x7946))))
                                         (proc
                                          x7952
                                          x7951
                                          x7950
                                          x7949
                                          x7947
                                          x7945))))
                                      g7944)
                                     (if cnd
                                       (letrec*
                                        ((g7953
                                          (letrec*
                                           ((x7963 (car args))
                                            (x7962 (cadr args))
                                            (x7961 (caddr args))
                                            (x7960 (cadddr args))
                                            (x7958
                                             (letrec*
                                              ((x7959 (cddddr args)))
                                              (car x7959)))
                                            (x7956
                                             (letrec*
                                              ((x7957 (cddddr args)))
                                              (cadr x7957)))
                                            (x7954
                                             (letrec*
                                              ((x7955 (cddddr args)))
                                              (caddr x7955))))
                                           (proc
                                            x7963
                                            x7962
                                            x7961
                                            x7960
                                            x7958
                                            x7956
                                            x7954))))
                                        g7953)
                                       (letrec*
                                        ((g7964 (error "Unsupported call.")))
                                        g7964)))))))))))
                     g7919)))
                 (member
                  (lambda (e l)
                    (letrec*
                     ((g7965 (letrec* ((x7967 (list? l))) (assert x7967)))
                      (g7966
                       (letrec*
                        ((x-cnd7968 (null? l)))
                        (if x-cnd7968
                          #f
                          (letrec*
                           ((x-cnd7969
                             (letrec* ((x7970 (car l))) (equal? x7970 e))))
                           (if x-cnd7969
                             l
                             (letrec* ((x7971 (cdr l))) (member e x7971))))))))
                     g7966)))
                 (cddddr
                  (lambda (x)
                    (letrec*
                     ((g7972
                       (letrec*
                        ((x7973
                          (letrec*
                           ((x7974 (letrec* ((x7975 (cdr x))) (cdr x7975))))
                           (cdr x7974))))
                        (cdr x7973))))
                     g7972)))
                 (cadddr
                  (lambda (x)
                    (letrec*
                     ((g7976
                       (letrec*
                        ((x7977
                          (letrec*
                           ((x7978 (letrec* ((x7979 (cdr x))) (cdr x7979))))
                           (cdr x7978))))
                        (car x7977))))
                     g7976)))
                 (int-top (lambda () (letrec* ((g7980 (random 42))) g7980)))
                 (zero?
                  (lambda (x)
                    (letrec*
                     ((g7981 (letrec* ((x7983 (number? x))) (assert x7983)))
                      (g7982 (= x 0)))
                     g7982)))
                 (string>=?
                  (lambda (s1 s2)
                    (letrec*
                     ((g7984
                       (letrec*
                        ((val7253 (string>? s1 s2)))
                        (letrec*
                         ((g7985 (if val7253 val7253 (string=? s1 s2))))
                         g7985))))
                     g7984)))
                 (cadr
                  (lambda (x)
                    (letrec*
                     ((g7986 (letrec* ((x7987 (cdr x))) (car x7987))))
                     g7986)))
                 (__toplevel_car car)
                 (list?
                  (lambda (l)
                    (letrec*
                     ((g7988
                       (letrec*
                        ((val7254
                          (letrec*
                           ((x7991 (pair? l))
                            (x7989 (letrec* ((x7990 (cdr l))) (list? x7990))))
                           (and x7991 x7989))))
                        (letrec*
                         ((g7992 (if val7254 val7254 (null? l))))
                         g7992))))
                     g7988)))
                 (cddaar
                  (lambda (x)
                    (letrec*
                     ((g7993
                       (letrec*
                        ((x7994
                          (letrec*
                           ((x7995 (letrec* ((x7996 (car x))) (car x7996))))
                           (cdr x7995))))
                        (cdr x7994))))
                     g7993)))
                 (char-numeric?
                  (lambda (c)
                    (letrec*
                     ((g7997
                       (letrec*
                        ((x-cnd7998 (letrec* ((x7999 #\0)) (char<=? x7999 c))))
                        (if x-cnd7998
                          (letrec* ((x8000 #\9)) (char<=? c x8000))
                          #f))))
                     g7997)))
                 (__toplevel_cons cons)
                 (assv
                  (lambda (k l)
                    (letrec*
                     ((g8001 (letrec* ((x8003 (list? l))) (assert x8003)))
                      (g8002
                       (letrec*
                        ((x-cnd8004 (null? l)))
                        (if x-cnd8004
                          #f
                          (letrec*
                           ((x-cnd8005
                             (letrec* ((x8006 (caar l))) (eqv? x8006 k))))
                           (if x-cnd8005
                             (car l)
                             (letrec* ((x8007 (cdr l))) (assq k x8007))))))))
                     g8002)))
                 (not (lambda (x) (letrec* ((g8008 (if x #f #t))) g8008)))
                 (__toplevel_append
                  (lambda (l1 l2) (letrec* ((g8009 (append l1 l2))) g8009)))
                 (memq
                  (lambda (e l)
                    (letrec*
                     ((g8010 (letrec* ((x8012 (list? l))) (assert x8012)))
                      (g8011
                       (letrec*
                        ((x-cnd8013 (null? l)))
                        (if x-cnd8013
                          #f
                          (letrec*
                           ((x-cnd8014
                             (letrec* ((x8015 (car l))) (eq? x8015 e))))
                           (if x-cnd8014
                             l
                             (letrec* ((x8016 (cdr l))) (memq e x8016))))))))
                     g8011)))
                 (cadaar
                  (lambda (x)
                    (letrec*
                     ((g8017
                       (letrec*
                        ((x8018
                          (letrec*
                           ((x8019 (letrec* ((x8020 (car x))) (car x8020))))
                           (cdr x8019))))
                        (car x8018))))
                     g8017)))
                 (length
                  (lambda (l)
                    (letrec*
                     ((g8021 (letrec* ((x8023 (list? l))) (assert x8023)))
                      (g8022
                       (letrec*
                        ((rec
                          (lambda (l)
                            (letrec*
                             ((g8024
                               (letrec*
                                ((x-cnd8025 (null? l)))
                                (if x-cnd8025
                                  0
                                  (letrec*
                                   ((x8026
                                     (letrec* ((x8027 (cdr l))) (rec x8027))))
                                   (+ 1 x8026))))))
                             g8024))))
                        (letrec* ((g8028 (rec l))) g8028))))
                     g8022)))
                 (char-ci<=?
                  (lambda (c1 c2)
                    (letrec*
                     ((g8029 (letrec* ((x8032 (char? c1))) (assert x8032)))
                      (g8030 (letrec* ((x8033 (char? c2))) (assert x8033)))
                      (g8031
                       (letrec*
                        ((val7255 (char-ci<? c1 c2)))
                        (letrec*
                         ((g8034 (if val7255 val7255 (char-ci=? c1 c2))))
                         g8034))))
                     g8031)))
                 (string>?
                  (lambda (s1 s2)
                    (letrec*
                     ((g8035
                       (letrec* ((x8036 (string<=? s1 s2))) (not x8036))))
                     g8035)))
                 (cdadr
                  (lambda (x)
                    (letrec*
                     ((g8037
                       (letrec*
                        ((x8038 (letrec* ((x8039 (cdr x))) (car x8039))))
                        (cdr x8038))))
                     g8037)))
                 (assoc
                  (lambda (k l)
                    (letrec*
                     ((g8040 (letrec* ((x8042 (list? l))) (assert x8042)))
                      (g8041
                       (letrec*
                        ((x-cnd8043 (null? l)))
                        (if x-cnd8043
                          #f
                          (letrec*
                           ((x-cnd8044
                             (letrec* ((x8045 (caar l))) (equal? x8045 k))))
                           (if x-cnd8044
                             (car l)
                             (letrec* ((x8046 (cdr l))) (assoc k x8046))))))))
                     g8041)))
                 (caar
                  (lambda (x)
                    (letrec*
                     ((g8047 (letrec* ((x8048 (car x))) (car x8048))))
                     g8047)))
                 (char>?
                  (lambda (c1 c2)
                    (letrec*
                     ((g8049 (letrec* ((x8052 (char? c1))) (assert x8052)))
                      (g8050 (letrec* ((x8053 (char? c2))) (assert x8053)))
                      (g8051 (letrec* ((x8054 (char<=? c1 c2))) (not x8054))))
                     g8051)))
                 (string<=?
                  (lambda (s1 s2)
                    (letrec*
                     ((g8055
                       (letrec*
                        ((val7256 (string<? s1 s2)))
                        (letrec*
                         ((g8056 (if val7256 val7256 (string=? s1 s2))))
                         g8056))))
                     g8055)))
                 (for-each
                  (lambda (f l)
                    (letrec*
                     ((g8057 (letrec* ((x8060 (procedure? f))) (assert x8060)))
                      (g8058 (letrec* ((x8061 (list? l))) (assert x8061)))
                      (g8059
                       (letrec*
                        ((x-cnd8062 (null? l)))
                        (if x-cnd8062
                          #t
                          (letrec*
                           ((x-cnd8063 (pair? l)))
                           (if x-cnd8063
                             (letrec*
                              ((g8064 (letrec* ((x8066 (car l))) (f x8066)))
                               (g8065
                                (letrec*
                                 ((x8067 (cdr l)))
                                 (for-each f x8067))))
                              g8065)
                             '()))))))
                     g8059)))
                 (abs
                  (lambda (x)
                    (letrec*
                     ((g8068 (letrec* ((x8070 (number? x))) (assert x8070)))
                      (g8069
                       (letrec*
                        ((x-cnd8071 (< x 0)))
                        (if x-cnd8071 (- 0 x) x))))
                     g8069)))
                 (char-ci>=?
                  (lambda (c1 c2)
                    (letrec*
                     ((g8072 (letrec* ((x8075 (char? c1))) (assert x8075)))
                      (g8073 (letrec* ((x8076 (char? c2))) (assert x8076)))
                      (g8074
                       (letrec*
                        ((val7257 (char-ci>? c1 c2)))
                        (letrec*
                         ((g8077 (if val7257 val7257 (char-ci=? c1 c2))))
                         g8077))))
                     g8074)))
                 (caddar
                  (lambda (x)
                    (letrec*
                     ((g8078
                       (letrec*
                        ((x8079
                          (letrec*
                           ((x8080 (letrec* ((x8081 (car x))) (cdr x8081))))
                           (cdr x8080))))
                        (car x8079))))
                     g8078)))
                 (newline (lambda () (letrec* ((g8082 #f)) g8082)))
                 (lcm
                  (lambda (m n)
                    (letrec*
                     ((g8083
                       (letrec*
                        ((x8085 (letrec* ((x8086 (* m n))) (abs x8086)))
                         (x8084 (gcd m n)))
                        (/ x8085 x8084))))
                     g8083)))
                 (deref car)
                 (>
                  (lambda (x y)
                    (letrec*
                     ((g8087 (letrec* ((x8089 (number? x))) (assert x8089)))
                      (g8088 (letrec* ((x8090 (<= x y))) (not x8090))))
                     g8088)))
                 (list-ref
                  (lambda (l index)
                    (letrec*
                     ((g8091 (letrec* ((x8095 (list? l))) (assert x8095)))
                      (g8092
                       (letrec* ((x8096 (number? index))) (assert x8096)))
                      (g8093
                       (letrec*
                        ((x8097
                          (letrec* ((x8098 (length l))) (< index x8098))))
                        (assert x8097)))
                      (g8094
                       (letrec*
                        ((x-cnd8099 (= index 0)))
                        (if x-cnd8099
                          (car l)
                          (letrec*
                           ((x8101 (cdr l)) (x8100 (- index 1)))
                           (list-ref x8101 x8100))))))
                     g8094)))
                 (gcd
                  (lambda (a b)
                    (letrec*
                     ((g8102
                       (letrec*
                        ((x-cnd8103 (= b 0)))
                        (if x-cnd8103
                          a
                          (letrec* ((x8104 (modulo a b))) (gcd b x8104))))))
                     g8102)))
                 (block
                  (lambda (x7571 y7572 color7573)
                    (letrec*
                     ((g8105
                       (letrec*
                        ((x8106
                          (letrec*
                           ((x8107
                             (letrec*
                              ((x8108 (cons color7573 '())))
                              (cons y7572 x8108))))
                           (cons x7571 x8107))))
                        (cons 'block x8106))))
                     g8105)))
                 (block?
                  (lambda (block7570)
                    (letrec*
                     ((g8109
                       (letrec* ((x8110 (car block7570))) (eq? x8110 'block))))
                     g8109)))
                 (block-x
                  (lambda (block)
                    (letrec*
                     ((g8111 (letrec* ((x8112 (cdr block))) (car x8112))))
                     g8111)))
                 (block-y
                  (lambda (block)
                    (letrec*
                     ((g8113
                       (letrec*
                        ((x8114 (letrec* ((x8115 (cdr block))) (cdr x8115))))
                        (car x8114))))
                     g8113)))
                 (block-color
                  (lambda (block)
                    (letrec*
                     ((g8116
                       (letrec*
                        ((x8117
                          (letrec*
                           ((x8118
                             (letrec* ((x8119 (cdr block))) (cdr x8119))))
                           (cdr x8118))))
                        (car x8117))))
                     g8116)))
                 (tetra
                  (lambda (center7578 blocks7579)
                    (letrec*
                     ((g8120
                       (letrec*
                        ((x8121
                          (letrec*
                           ((x8122 (cons blocks7579 '())))
                           (cons center7578 x8122))))
                        (cons 'tetra x8121))))
                     g8120)))
                 (tetra?
                  (lambda (tetra7577)
                    (letrec*
                     ((g8123
                       (letrec* ((x8124 (car tetra7577))) (eq? x8124 'tetra))))
                     g8123)))
                 (tetra-center
                  (lambda (tetra)
                    (letrec*
                     ((g8125 (letrec* ((x8126 (cdr tetra))) (car x8126))))
                     g8125)))
                 (tetra-blocks
                  (lambda (tetra)
                    (letrec*
                     ((g8127
                       (letrec*
                        ((x8128 (letrec* ((x8129 (cdr tetra))) (cdr x8129))))
                        (car x8128))))
                     g8127)))
                 (world
                  (lambda (tetra7583 blocks7584)
                    (letrec*
                     ((g8130
                       (letrec*
                        ((x8131
                          (letrec*
                           ((x8132 (cons blocks7584 '())))
                           (cons tetra7583 x8132))))
                        (cons 'world x8131))))
                     g8130)))
                 (world?
                  (lambda (world7582)
                    (letrec*
                     ((g8133
                       (letrec* ((x8134 (car world7582))) (eq? x8134 'world))))
                     g8133)))
                 (world-tetra
                  (lambda (world)
                    (letrec*
                     ((g8135 (letrec* ((x8136 (cdr world))) (car x8136))))
                     g8135)))
                 (world-blocks
                  (lambda (world)
                    (letrec*
                     ((g8137
                       (letrec*
                        ((x8138 (letrec* ((x8139 (cdr world))) (cdr x8139))))
                        (car x8138))))
                     g8137)))
                 (posn
                  (lambda (x7588 y7589)
                    (letrec*
                     ((g8140
                       (letrec*
                        ((x8141
                          (letrec*
                           ((x8142 (cons y7589 '())))
                           (cons x7588 x8142))))
                        (cons 'posn x8141))))
                     g8140)))
                 (posn?
                  (lambda (posn7587)
                    (letrec*
                     ((g8143
                       (letrec* ((x8144 (car posn7587))) (eq? x8144 'posn))))
                     g8143)))
                 (posn-x
                  (lambda (posn)
                    (letrec*
                     ((g8145 (letrec* ((x8146 (cdr posn))) (car x8146))))
                     g8145)))
                 (posn-y
                  (lambda (posn)
                    (letrec*
                     ((g8147
                       (letrec*
                        ((x8148 (letrec* ((x8149 (cdr posn))) (cdr x8149))))
                        (car x8148))))
                     g8147)))
                 (COLOR/C symbol?)
                 (POSN/C
                  (lambda (j7329 k7330 v7328)
                    (letrec*
                     ((g8150
                       (letrec*
                        ((checked7331
                          (letrec*
                           ((x8151 (car v7328)))
                           (real?/c j7329 k7330 x8151))))
                        (letrec*
                         ((g8152
                           (letrec*
                            ((checked7332
                              (letrec*
                               ((x8153
                                 (letrec* ((x8154 (cdr v7328))) (car x8154))))
                               (real?/c j7329 k7330 x8153))))
                            (letrec*
                             ((g8155
                               (letrec*
                                ((x8156
                                  (letrec*
                                   ((x8157 (cons checked7332 '())))
                                   (cons checked7331 x8157))))
                                (cons posn x8156))))
                             g8155))))
                         g8152))))
                     g8150)))
                 (BLOCK/C
                  (lambda (j7335 k7336 v7334)
                    (letrec*
                     ((g8158
                       (letrec*
                        ((checked7337
                          (letrec*
                           ((x8159 (car v7334)))
                           (real?/c j7335 k7336 x8159))))
                        (letrec*
                         ((g8160
                           (letrec*
                            ((checked7338
                              (letrec*
                               ((x8161
                                 (letrec* ((x8162 (cdr v7334))) (car x8162))))
                               (real?/c j7335 k7336 x8161))))
                            (letrec*
                             ((g8163
                               (letrec*
                                ((checked7339
                                  (letrec*
                                   ((x8164
                                     (letrec*
                                      ((x8165
                                        (letrec*
                                         ((x8166 (cdr v7334)))
                                         (cdr x8166))))
                                      (car x8165))))
                                   (COLOR/C j7335 k7336 x8164))))
                                (letrec*
                                 ((g8167
                                   (letrec*
                                    ((x8168
                                      (letrec*
                                       ((x8169
                                         (letrec*
                                          ((x8170 (cons checked7339 '())))
                                          (cons checked7338 x8170))))
                                       (cons checked7337 x8169))))
                                    (cons block x8168))))
                                 g8167))))
                             g8163))))
                         g8160))))
                     g8158)))
                 (BSET/C (listof BLOCK/C))
                 (TETRA/C
                  (lambda (j7342 k7343 v7341)
                    (letrec*
                     ((g8171
                       (letrec*
                        ((checked7344
                          (letrec*
                           ((x8172 (car v7341)))
                           (POSN/C j7342 k7343 x8172))))
                        (letrec*
                         ((g8173
                           (letrec*
                            ((checked7345
                              (letrec*
                               ((x8174
                                 (letrec* ((x8175 (cdr v7341))) (car x8175))))
                               (BSET/C j7342 k7343 x8174))))
                            (letrec*
                             ((g8176
                               (letrec*
                                ((x8177
                                  (letrec*
                                   ((x8178 (cons checked7345 '())))
                                   (cons checked7344 x8178))))
                                (cons tetra x8177))))
                             g8176))))
                         g8173))))
                     g8171)))
                 (WORLD/C
                  (lambda (j7348 k7349 v7347)
                    (letrec*
                     ((g8179
                       (letrec*
                        ((checked7350
                          (letrec*
                           ((x8180 (car v7347)))
                           (TETRA/C j7348 k7349 x8180))))
                        (letrec*
                         ((g8181
                           (letrec*
                            ((checked7351
                              (letrec*
                               ((x8182
                                 (letrec* ((x8183 (cdr v7347))) (car x8183))))
                               (BSET/C j7348 k7349 x8182))))
                            (letrec*
                             ((g8184
                               (letrec*
                                ((x8185
                                  (letrec*
                                   ((x8186 (cons checked7351 '())))
                                   (cons checked7350 x8186))))
                                (cons world x8185))))
                             g8184))))
                         g8181))))
                     g8179)))
                 (posn=?
                  (lambda (p1 p2)
                    (letrec*
                     ((g8187
                       (letrec*
                        ((x-cnd8188
                          (letrec*
                           ((x8190 (posn-x p1)) (x8189 (posn-x p2)))
                           (= x8190 x8189))))
                        (if x-cnd8188
                          (letrec*
                           ((x8192 (posn-y p1)) (x8191 (posn-y p2)))
                           (= x8192 x8191))
                          #f))))
                     g8187)))
                 (block-size 20)
                 (board-height 20)
                 (board-width 10)
                 (block=?
                  (lambda (b1 b2)
                    (letrec*
                     ((g8193
                       (letrec*
                        ((x-cnd8194
                          (letrec*
                           ((x8196 (block-x b1)) (x8195 (block-x b2)))
                           (= x8196 x8195))))
                        (if x-cnd8194
                          (letrec*
                           ((x8198 (block-y b1)) (x8197 (block-y b2)))
                           (= x8198 x8197))
                          #f))))
                     g8193)))
                 (block-move
                  (lambda (dx dy b)
                    (letrec*
                     ((g8199
                       (letrec*
                        ((x8203 (letrec* ((x8204 (block-x b))) (+ dx x8204)))
                         (x8201 (letrec* ((x8202 (block-y b))) (+ dy x8202)))
                         (x8200 (block-color b)))
                        (block x8203 x8201 x8200))))
                     g8199)))
                 (block-rotate-ccw
                  (lambda (c b)
                    (letrec*
                     ((g8205
                       (letrec*
                        ((x8212
                          (letrec*
                           ((x8216 (posn-x c))
                            (x8213
                             (letrec*
                              ((x8215 (posn-y c)) (x8214 (block-y b)))
                              (- x8215 x8214))))
                           (+ x8216 x8213)))
                         (x8207
                          (letrec*
                           ((x8211 (posn-y c))
                            (x8208
                             (letrec*
                              ((x8210 (block-x b)) (x8209 (posn-x c)))
                              (- x8210 x8209))))
                           (+ x8211 x8208)))
                         (x8206 (block-color b)))
                        (block x8212 x8207 x8206))))
                     g8205)))
                 (block-rotate-cw
                  (lambda (c b)
                    (letrec*
                     ((g8217
                       (letrec*
                        ((x8218
                          (letrec*
                           ((x8219 (block-rotate-ccw c b)))
                           (block-rotate-ccw c x8219))))
                        (block-rotate-ccw c x8218))))
                     g8217)))
                 (ormap
                  (lambda (p? xs)
                    (letrec*
                     ((g8220
                       (if cnd
                         (letrec* ((g8221 #f)) g8221)
                         (letrec*
                          ((g8222
                            (letrec*
                             ((x8225 (letrec* ((x8226 (car xs))) (p? x8226)))
                              (x8223
                               (letrec* ((x8224 (cdr xs))) (ormap p? x8224))))
                             (or x8225 x8223))))
                          g8222))))
                     g8220)))
                 (andmap
                  (lambda (p? xs)
                    (letrec*
                     ((g8227
                       (if cnd
                         (letrec* ((g8228 #t)) g8228)
                         (letrec*
                          ((g8229
                            (letrec*
                             ((x8232 (letrec* ((x8233 (car xs))) (p? x8233)))
                              (x8230
                               (letrec* ((x8231 (cdr xs))) (andmap p? x8231))))
                             (and x8232 x8230))))
                          g8229))))
                     g8227)))
                 (filter
                  (lambda (p? xs)
                    (letrec*
                     ((g8234
                       (if cnd
                         (letrec* ((g8235 null)) g8235)
                         (if cnd
                           (letrec*
                            ((g8236
                              (letrec*
                               ((x8239 (car xs))
                                (x8237
                                 (letrec*
                                  ((x8238 (cdr xs)))
                                  (filter p? x8238))))
                               (cons x8239 x8237))))
                            g8236)
                           (letrec*
                            ((g8240
                              (letrec* ((x8241 (cdr xs))) (filter p? x8241))))
                            g8240)))))
                     g8234)))
                 (append
                  (lambda (l r)
                    (letrec*
                     ((g8242
                       (if cnd
                         (letrec* ((g8243 r)) g8243)
                         (letrec*
                          ((g8244
                            (letrec*
                             ((x8247 (car l))
                              (x8245
                               (letrec* ((x8246 (cdr l))) (append x8246 r))))
                             (cons x8247 x8245))))
                          g8244))))
                     g8242)))
                 (foldr
                  (lambda (f a xs)
                    (letrec*
                     ((g8248
                       (if cnd
                         (letrec* ((g8249 a)) g8249)
                         (letrec*
                          ((g8250
                            (letrec*
                             ((x8253 (car xs))
                              (x8251
                               (letrec* ((x8252 (cdr xs))) (foldr f a x8252))))
                             (f x8253 x8251))))
                          g8250))))
                     g8248)))
                 (blocks-contains?
                  (lambda (bs b)
                    (letrec*
                     ((g8254
                       (letrec*
                        ((x8255
                          (letrec*
                           ((x8257 (c)) (x8256 (block=? b c)))
                           (λ x8257 x8256))))
                        (ormap x8255 bs))))
                     g8254)))
                 (blocks-subset?
                  (lambda (bs1 bs2)
                    (letrec*
                     ((g8258
                       (letrec*
                        ((x8259
                          (letrec*
                           ((x8261 (b)) (x8260 (blocks-contains? bs2 b)))
                           (λ x8261 x8260))))
                        (andmap x8259 bs1))))
                     g8258)))
                 (blocks=?
                  (lambda (bs1 bs2)
                    (letrec*
                     ((g8262
                       (letrec*
                        ((x-cnd8263 (blocks-subset? bs1 bs2)))
                        (if x-cnd8263 (blocks-subset? bs2 bs1) #f))))
                     g8262)))
                 (blocks-intersect
                  (lambda (bs1 bs2)
                    (letrec*
                     ((g8264
                       (letrec*
                        ((x8265
                          (letrec*
                           ((x8267 (b)) (x8266 (blocks-contains? bs2 b)))
                           (λ x8267 x8266))))
                        (filter x8265 bs1))))
                     g8264)))
                 (blocks-count
                  (lambda (bs) (letrec* ((g8268 (length bs))) g8268)))
                 (blocks-move
                  (lambda (dx dy bs)
                    (letrec*
                     ((g8269
                       (letrec*
                        ((x8270
                          (letrec*
                           ((x8272 (b)) (x8271 (block-move dx dy b)))
                           (λ x8272 x8271))))
                        (map x8270 bs))))
                     g8269)))
                 (blocks-rotate-ccw
                  (lambda (c bs)
                    (letrec*
                     ((g8273
                       (letrec*
                        ((x8274
                          (letrec*
                           ((x8276 (b)) (x8275 (block-rotate-ccw c b)))
                           (λ x8276 x8275))))
                        (map x8274 bs))))
                     g8273)))
                 (blocks-rotate-cw
                  (lambda (c bs)
                    (letrec*
                     ((g8277
                       (letrec*
                        ((x8278
                          (letrec*
                           ((x8280 (b)) (x8279 (block-rotate-cw c b)))
                           (λ x8280 x8279))))
                        (map x8278 bs))))
                     g8277)))
                 (blocks-change-color
                  (lambda (bs c)
                    (letrec*
                     ((g8281
                       (letrec*
                        ((x8282
                          (letrec*
                           ((x8286 (b))
                            (x8283
                             (letrec*
                              ((x8285 (block-x b)) (x8284 (block-y b)))
                              (block x8285 x8284 c))))
                           (λ x8286 x8283))))
                        (map x8282 bs))))
                     g8281)))
                 (blocks-row
                  (lambda (bs i)
                    (letrec*
                     ((g8287
                       (letrec*
                        ((x8288
                          (letrec*
                           ((x8291 (b))
                            (x8289
                             (letrec* ((x8290 (block-y b))) (= i x8290))))
                           (λ x8291 x8289))))
                        (filter x8288 bs))))
                     g8287)))
                 (full-row?
                  (lambda (bs i)
                    (letrec*
                     ((g8292
                       (letrec*
                        ((x8293
                          (letrec*
                           ((x8294 (blocks-row bs i)))
                           (blocks-count x8294))))
                        (= board-width x8293))))
                     g8292)))
                 (blocks-overflow?
                  (lambda (bs)
                    (letrec*
                     ((g8295
                       (letrec*
                        ((x8296
                          (letrec*
                           ((x8299 (b))
                            (x8297
                             (letrec* ((x8298 (block-y b))) (<= x8298 0))))
                           (λ x8299 x8297))))
                        (ormap x8296 bs))))
                     g8295)))
                 (blocks-union
                  (lambda (bs1 bs2)
                    (letrec*
                     ((g8300
                       (letrec*
                        ((x8301
                          (letrec*
                           ((x8305 (b bs))
                            (x8302
                             (if cnd
                               (letrec* ((g8303 bs)) g8303)
                               (letrec* ((g8304 (cons b bs))) g8304))))
                           (λ x8305 x8302))))
                        (foldr x8301 bs2 bs1))))
                     g8300)))
                 (blocks-max-y
                  (lambda (bs)
                    (letrec*
                     ((g8306
                       (letrec*
                        ((x8307
                          (letrec*
                           ((x8310 (b n))
                            (x8308
                             (letrec* ((x8309 (block-y b))) (max x8309 n))))
                           (λ x8310 x8308))))
                        (foldr x8307 0 bs))))
                     g8306)))
                 (blocks-min-x
                  (lambda (bs)
                    (letrec*
                     ((g8311
                       (letrec*
                        ((x8312
                          (letrec*
                           ((x8315 (b n))
                            (x8313
                             (letrec* ((x8314 (block-x b))) (min x8314 n))))
                           (λ x8315 x8313))))
                        (foldr x8312 board-width bs))))
                     g8311)))
                 (blocks-max-x
                  (lambda (bs)
                    (letrec*
                     ((g8316
                       (letrec*
                        ((x8317
                          (letrec*
                           ((x8320 (b n))
                            (x8318
                             (letrec* ((x8319 (block-x b))) (max x8319 n))))
                           (λ x8320 x8318))))
                        (foldr x8317 0 bs))))
                     g8316)))
                 (eliminate-full-rows
                  (lambda (bs)
                    (letrec* ((g8321 (elim-row bs board-height 0))) g8321)))
                 (elim-row
                  (lambda (bs i offset)
                    (letrec*
                     ((g8322
                       (if cnd
                         (letrec* ((g8323 empty)) g8323)
                         (if cnd
                           (letrec*
                            ((g8324
                              (letrec*
                               ((x8326 (sub1 i)) (x8325 (add1 offset)))
                               (elim-row bs x8326 x8325))))
                            g8324)
                           (letrec*
                            ((g8327
                              (letrec*
                               ((x8330
                                 (letrec*
                                  ((x8331 (sub1 i)))
                                  (elim-row bs x8331 offset)))
                                (x8328
                                 (letrec*
                                  ((x8329 (blocks-row bs i)))
                                  (blocks-move 0 offset x8329))))
                               (blocks-union x8330 x8328))))
                            g8327)))))
                     g8322)))
                 (tetra-move
                  (lambda (dx dy t)
                    (letrec*
                     ((g8332
                       (letrec*
                        ((x8335
                          (letrec*
                           ((x8339
                             (letrec*
                              ((x8340
                                (letrec*
                                 ((x8341 (tetra-center t)))
                                 (posn-x x8341))))
                              (+ dx x8340)))
                            (x8336
                             (letrec*
                              ((x8337
                                (letrec*
                                 ((x8338 (tetra-center t)))
                                 (posn-y x8338))))
                              (+ dy x8337))))
                           (posn x8339 x8336)))
                         (x8333
                          (letrec*
                           ((x8334 (tetra-blocks t)))
                           (blocks-move dx dy x8334))))
                        (tetra x8335 x8333))))
                     g8332)))
                 (tetra-rotate-ccw
                  (lambda (t)
                    (letrec*
                     ((g8342
                       (letrec*
                        ((x8346 (tetra-center t))
                         (x8343
                          (letrec*
                           ((x8345 (tetra-center t)) (x8344 (tetra-blocks t)))
                           (blocks-rotate-ccw x8345 x8344))))
                        (tetra x8346 x8343))))
                     g8342)))
                 (tetra-rotate-cw
                  (lambda (t)
                    (letrec*
                     ((g8347
                       (letrec*
                        ((x8351 (tetra-center t))
                         (x8348
                          (letrec*
                           ((x8350 (tetra-center t)) (x8349 (tetra-blocks t)))
                           (blocks-rotate-cw x8350 x8349))))
                        (tetra x8351 x8348))))
                     g8347)))
                 (tetra-overlaps-blocks?
                  (lambda (t bs)
                    (letrec*
                     ((g8352
                       (letrec*
                        ((x8353
                          (letrec*
                           ((x8354
                             (letrec*
                              ((x8355 (tetra-blocks t)))
                              (blocks-intersect x8355 bs))))
                           (false? x8354))))
                        (false? x8353))))
                     g8352)))
                 (tetra-change-color
                  (lambda (t c)
                    (letrec*
                     ((g8356
                       (letrec*
                        ((x8359 (tetra-center t))
                         (x8357
                          (letrec*
                           ((x8358 (tetra-blocks t)))
                           (blocks-change-color x8358 c))))
                        (tetra x8359 x8357))))
                     g8356)))
                 (build-tetra-blocks
                  (lambda (color xc yc x1 y1 x2 y2 x3 y3 x4 y4)
                    (letrec*
                     ((g8360
                       (letrec*
                        ((x8361
                          (letrec*
                           ((x8367 (posn xc yc))
                            (x8362
                             (letrec*
                              ((x8366 (block x1 y1 color))
                               (x8365 (block x2 y2 color))
                               (x8364 (block x3 y3 color))
                               (x8363 (block x4 y4 color)))
                              (list x8366 x8365 x8364 x8363))))
                           (tetra x8367 x8362))))
                        (tetra-move 3 0 x8361))))
                     g8360)))
                 (touchdown
                  (lambda (w tetras)
                    (letrec*
                     ((g8368
                       (letrec*
                        ((x8374 (list-pick-random tetras))
                         (x8369
                          (letrec*
                           ((x8370
                             (letrec*
                              ((x8372
                                (letrec*
                                 ((x8373 (world-tetra w)))
                                 (tetra-blocks x8373)))
                               (x8371 (world-blocks w)))
                              (blocks-union x8372 x8371))))
                           (eliminate-full-rows x8370))))
                        (world x8374 x8369))))
                     g8368)))
                 (world-jump-down
                  (lambda (w)
                    (letrec*
                     ((g8375
                       (if cnd
                         (letrec* ((g8376 w)) g8376)
                         (letrec*
                          ((g8377
                            (letrec*
                             ((x8378
                               (letrec*
                                ((x8380
                                  (letrec*
                                   ((x8381 (world-tetra w)))
                                   (tetra-move 0 1 x8381)))
                                 (x8379 (world-blocks w)))
                                (world x8380 x8379))))
                             (world-jump-down x8378))))
                          g8377))))
                     g8375)))
                 (landed-on-blocks?
                  (lambda (w)
                    (letrec*
                     ((g8382
                       (letrec*
                        ((x8384
                          (letrec*
                           ((x8385 (world-tetra w)))
                           (tetra-move 0 1 x8385)))
                         (x8383 (world-blocks w)))
                        (tetra-overlaps-blocks? x8384 x8383))))
                     g8382)))
                 (landed-on-floor?
                  (lambda (w)
                    (letrec*
                     ((g8386
                       (letrec*
                        ((x8388
                          (letrec*
                           ((x8389
                             (letrec*
                              ((x8390 (world-tetra w)))
                              (tetra-blocks x8390))))
                           (blocks-max-y x8389)))
                         (x8387 (sub1 board-height)))
                        (= x8388 x8387))))
                     g8386)))
                 (landed?
                  (lambda (w)
                    (letrec*
                     ((g8391
                       (letrec*
                        ((val7258 (landed-on-blocks? w)))
                        (letrec*
                         ((g8392 (if val7258 val7258 (landed-on-floor? w))))
                         g8392))))
                     g8391)))
                 (next-world
                  (lambda (w tetras)
                    (letrec*
                     ((g8393
                       (if cnd
                         (letrec* ((g8394 (touchdown w tetras))) g8394)
                         (letrec*
                          ((g8395
                            (letrec*
                             ((x8397
                               (letrec*
                                ((x8398 (world-tetra w)))
                                (tetra-move 0 1 x8398)))
                              (x8396 (world-blocks w)))
                             (world x8397 x8396))))
                          g8395))))
                     g8393)))
                 (try-new-tetra
                  (lambda (w new-tetra)
                    (letrec*
                     ((g8399
                       (if cnd
                         (letrec* ((g8400 w)) g8400)
                         (letrec*
                          ((g8401
                            (letrec*
                             ((x8402 (world-blocks w)))
                             (world new-tetra x8402))))
                          g8401))))
                     g8399)))
                 (world-move
                  (lambda (dx dy w)
                    (letrec*
                     ((g8403
                       (letrec*
                        ((x8404
                          (letrec*
                           ((x8405 (world-tetra w)))
                           (tetra-move dx dy x8405))))
                        (try-new-tetra w x8404))))
                     g8403)))
                 (world-rotate-ccw
                  (lambda (w)
                    (letrec*
                     ((g8406
                       (letrec*
                        ((x8407
                          (letrec*
                           ((x8408 (world-tetra w)))
                           (tetra-rotate-ccw x8408))))
                        (try-new-tetra w x8407))))
                     g8406)))
                 (world-rotate-cw
                  (lambda (w)
                    (letrec*
                     ((g8409
                       (letrec*
                        ((x8410
                          (letrec*
                           ((x8411 (world-tetra w)))
                           (tetra-rotate-cw x8411))))
                        (try-new-tetra w x8410))))
                     g8409)))
                 (ghost-blocks
                  (lambda (w)
                    (letrec*
                     ((g8412
                       (letrec*
                        ((x8413
                          (letrec*
                           ((x8414
                             (letrec*
                              ((x8415 (world-jump-down w)))
                              (world-tetra x8415))))
                           (tetra-change-color x8414 'gray))))
                        (tetra-blocks x8413))))
                     g8412)))
                 (world-key-move
                  (lambda (w k)
                    (letrec*
                     ((g8416
                       (if cnd
                         (letrec* ((g8417 (world-move neg-1 0 w))) g8417)
                         (if cnd
                           (letrec* ((g8418 (world-move 1 0 w))) g8418)
                           (if cnd
                             (letrec* ((g8419 (world-jump-down w))) g8419)
                             (if cnd
                               (letrec* ((g8420 (world-rotate-ccw w))) g8420)
                               (if cnd
                                 (letrec* ((g8421 (world-rotate-cw w))) g8421)
                                 (letrec* ((g8422 w)) g8422))))))))
                     g8416)))
                 (image
                  (lambda () (letrec* ((g8423 (cons 'image '()))) g8423)))
                 (image?
                  (lambda (image7592)
                    (letrec*
                     ((g8424
                       (letrec* ((x8425 (car image7592))) (eq? x8425 'image))))
                     g8424)))
                 (overlay (lambda (i₁ i₂) (letrec* ((g8426 (image))) g8426)))
                 (circle (lambda (r m c) (letrec* ((g8427 (image))) g8427)))
                 (rectangle
                  (lambda (w h m c) (letrec* ((g8428 (image))) g8428)))
                 (place-image
                  (lambda (i₁ r c i₂) (letrec* ((g8429 (image))) g8429)))
                 (empty-scene (lambda (w h) (letrec* ((g8430 (image))) g8430)))
                 (list-pick-random
                  (lambda (xs)
                    (letrec*
                     ((g8431
                       (if cnd
                         (letrec* ((g8432 (car xs))) g8432)
                         (letrec*
                          ((g8433
                            (letrec*
                             ((x8434 (cdr xs)))
                             (list-pick-random x8434))))
                          g8433))))
                     g8431)))
                 (neg-1 (random 10))
                 (world->image
                  (lambda (w)
                    (letrec*
                     ((g8435
                       (letrec*
                        ((x8439
                          (letrec*
                           ((x8440
                             (letrec*
                              ((x8444
                                (letrec*
                                 ((x8445 (world-tetra w)))
                                 (tetra-blocks x8445)))
                               (x8441
                                (letrec*
                                 ((x8443 (ghost-blocks w))
                                  (x8442 (world-blocks w)))
                                 (append x8443 x8442))))
                              (append x8444 x8441))))
                           (blocks->image x8440)))
                         (x8436
                          (letrec*
                           ((x8438 (* board-width block-size))
                            (x8437 (* board-height block-size)))
                           (empty-scene x8438 x8437))))
                        (place-image x8439 0 0 x8436))))
                     g8435)))
                 (blocks->image
                  (lambda (bs)
                    (letrec*
                     ((g8446
                       (letrec*
                        ((x8452
                          (letrec*
                           ((x8456 (b img))
                            (x8453
                             (if cnd
                               (letrec* ((g8454 (place-block b img))) g8454)
                               (letrec* ((g8455 img)) g8455))))
                           (λ x8456 x8453)))
                         (x8447
                          (letrec*
                           ((x8450
                             (letrec*
                              ((x8451 (* board-width block-size)))
                              (add1 x8451)))
                            (x8448
                             (letrec*
                              ((x8449 (* board-height block-size)))
                              (add1 x8449))))
                           (empty-scene x8450 x8448))))
                        (foldr x8452 x8447 bs))))
                     g8446)))
                 (block->image
                  (lambda (b)
                    (letrec*
                     ((g8457
                       (letrec*
                        ((x8461
                          (letrec*
                           ((x8464 (add1 block-size))
                            (x8463 (add1 block-size))
                            (x8462 (block-color b)))
                           (rectangle x8464 x8463 'solid x8462)))
                         (x8458
                          (letrec*
                           ((x8460 (add1 block-size))
                            (x8459 (add1 block-size)))
                           (rectangle x8460 x8459 'outline 'black))))
                        (overlay x8461 x8458))))
                     g8457)))
                 (place-block
                  (lambda (b scene)
                    (letrec*
                     ((g8465
                       (letrec*
                        ((x8474 (block->image b))
                         (x8470
                          (letrec*
                           ((x8472
                             (letrec*
                              ((x8473 (block-x b)))
                              (* x8473 block-size)))
                            (x8471 (/ block-size 2)))
                           (+ x8472 x8471)))
                         (x8466
                          (letrec*
                           ((x8468
                             (letrec*
                              ((x8469 (block-y b)))
                              (* x8469 block-size)))
                            (x8467 (/ block-size 2)))
                           (+ x8468 x8467))))
                        (place-image x8474 x8470 x8466 scene))))
                     g8465)))
                 (world0
                  (lambda (tetras)
                    (letrec*
                     ((g8475
                       (letrec*
                        ((x8476 (list-pick-random tetras)))
                        (world x8476 null))))
                     g8475))))
                (letrec*
                 ((g8477
                   (letrec*
                    ((x8540
                      ((lambda (j7355 k7356 f7357)
                         (letrec*
                          ((g8541
                            (lambda (g7353 g7354)
                              (letrec*
                               ((g8542
                                 (letrec*
                                  ((x8543
                                    (letrec*
                                     ((x8545 (POSN/C j7355 k7356 g7353))
                                      (x8544 (POSN/C j7355 k7356 g7354)))
                                     (f7357 x8545 x8544))))
                                  (boolean?/c j7355 k7356 x8543))))
                               g8542))))
                          g8541))
                       'module
                       'importer
                       posn=?))
                     (x8535
                      (letrec*
                       ((x8536
                         (letrec*
                          ((x8539 (input))
                           (x8537
                            (letrec* ((x8538 (input))) (cons x8538 '()))))
                          (cons x8539 x8537))))
                       (cons 'posn x8536)))
                     (x8530
                      (letrec*
                       ((x8531
                         (letrec*
                          ((x8534 (input))
                           (x8532
                            (letrec* ((x8533 (input))) (cons x8533 '()))))
                          (cons x8534 x8532))))
                       (cons 'posn x8531))))
                    (x8540 x8535 x8530)))
                  (g8478 (any/c 'module 'importer COLOR/C))
                  (g8479 (any/c 'module 'importer POSN/C))
                  (g8480 (any/c 'module 'importer BLOCK/C))
                  (g8481 (any/c 'module 'importer TETRA/C))
                  (g8482 (any/c 'module 'importer WORLD/C))
                  (g8483 (any/c 'module 'importer BSET/C))
                  (g8484 (integer? 'module 'importer block-size))
                  (g8485 (integer? 'module 'importer board-width))
                  (g8486 (integer? 'module 'importer board-height))
                  (g8487
                   (letrec*
                    ((x8558
                      ((lambda (j7360 k7361 f7362)
                         (letrec*
                          ((g8559
                            (lambda (g7358 g7359)
                              (letrec*
                               ((g8560
                                 (letrec*
                                  ((x8561
                                    (letrec*
                                     ((x8563 (POSN/C j7360 k7361 g7358))
                                      (x8562 (BLOCK/C j7360 k7361 g7359)))
                                     (f7362 x8563 x8562))))
                                  (BLOCK/C j7360 k7361 x8561))))
                               g8560))))
                          g8559))
                       'module
                       'importer
                       block-rotate-ccw))
                     (x8553
                      (letrec*
                       ((x8554
                         (letrec*
                          ((x8557 (input))
                           (x8555
                            (letrec* ((x8556 (input))) (cons x8556 '()))))
                          (cons x8557 x8555))))
                       (cons 'posn x8554)))
                     (x8546
                      (letrec*
                       ((x8547
                         (letrec*
                          ((x8552 (input))
                           (x8548
                            (letrec*
                             ((x8551 (input))
                              (x8549
                               (letrec* ((x8550 (input))) (cons x8550 '()))))
                             (cons x8551 x8549))))
                          (cons x8552 x8548))))
                       (cons 'block x8547))))
                    (x8558 x8553 x8546)))
                  (g8488
                   (letrec*
                    ((x8576
                      ((lambda (j7365 k7366 f7367)
                         (letrec*
                          ((g8577
                            (lambda (g7363 g7364)
                              (letrec*
                               ((g8578
                                 (letrec*
                                  ((x8579
                                    (letrec*
                                     ((x8581 (POSN/C j7365 k7366 g7363))
                                      (x8580 (BLOCK/C j7365 k7366 g7364)))
                                     (f7367 x8581 x8580))))
                                  (BLOCK/C j7365 k7366 x8579))))
                               g8578))))
                          g8577))
                       'module
                       'importer
                       block-rotate-cw))
                     (x8571
                      (letrec*
                       ((x8572
                         (letrec*
                          ((x8575 (input))
                           (x8573
                            (letrec* ((x8574 (input))) (cons x8574 '()))))
                          (cons x8575 x8573))))
                       (cons 'posn x8572)))
                     (x8564
                      (letrec*
                       ((x8565
                         (letrec*
                          ((x8570 (input))
                           (x8566
                            (letrec*
                             ((x8569 (input))
                              (x8567
                               (letrec* ((x8568 (input))) (cons x8568 '()))))
                             (cons x8569 x8567))))
                          (cons x8570 x8566))))
                       (cons 'block x8565))))
                    (x8576 x8571 x8564)))
                  (g8489
                   (letrec*
                    ((x8596
                      ((lambda (j7370 k7371 f7372)
                         (letrec*
                          ((g8597
                            (lambda (g7368 g7369)
                              (letrec*
                               ((g8598
                                 (letrec*
                                  ((x8599
                                    (letrec*
                                     ((x8601 (BLOCK/C j7370 k7371 g7368))
                                      (x8600 (BLOCK/C j7370 k7371 g7369)))
                                     (f7372 x8601 x8600))))
                                  (boolean?/c j7370 k7371 x8599))))
                               g8598))))
                          g8597))
                       'module
                       'importer
                       block=?))
                     (x8589
                      (letrec*
                       ((x8590
                         (letrec*
                          ((x8595 (input))
                           (x8591
                            (letrec*
                             ((x8594 (input))
                              (x8592
                               (letrec* ((x8593 (input))) (cons x8593 '()))))
                             (cons x8594 x8592))))
                          (cons x8595 x8591))))
                       (cons 'block x8590)))
                     (x8582
                      (letrec*
                       ((x8583
                         (letrec*
                          ((x8588 (input))
                           (x8584
                            (letrec*
                             ((x8587 (input))
                              (x8585
                               (letrec* ((x8586 (input))) (cons x8586 '()))))
                             (cons x8587 x8585))))
                          (cons x8588 x8584))))
                       (cons 'block x8583))))
                    (x8596 x8589 x8582)))
                  (g8490
                   (letrec*
                    ((x8611
                      ((lambda (j7376 k7377 f7378)
                         (letrec*
                          ((g8612
                            (lambda (g7373 g7374 g7375)
                              (letrec*
                               ((g8613
                                 (letrec*
                                  ((x8614
                                    (letrec*
                                     ((x8617 (real?/c j7376 k7377 g7373))
                                      (x8616 (real?/c j7376 k7377 g7374))
                                      (x8615 (BLOCK/C j7376 k7377 g7375)))
                                     (f7378 x8617 x8616 x8615))))
                                  (BLOCK/C j7376 k7377 x8614))))
                               g8613))))
                          g8612))
                       'module
                       'importer
                       block-move))
                     (x8610 (input))
                     (x8609 (input))
                     (x8602
                      (letrec*
                       ((x8603
                         (letrec*
                          ((x8608 (input))
                           (x8604
                            (letrec*
                             ((x8607 (input))
                              (x8605
                               (letrec* ((x8606 (input))) (cons x8606 '()))))
                             (cons x8607 x8605))))
                          (cons x8608 x8604))))
                       (cons 'block x8603))))
                    (x8611 x8610 x8609 x8602)))
                  (g8491
                   (letrec*
                    ((x8626
                      ((lambda (j7381 k7382 f7383)
                         (letrec*
                          ((g8627
                            (lambda (g7379 g7380)
                              (letrec*
                               ((g8628
                                 (letrec*
                                  ((x8629
                                    (letrec*
                                     ((x8631 (BSET/C j7381 k7382 g7379))
                                      (x8630 (BLOCK/C j7381 k7382 g7380)))
                                     (f7383 x8631 x8630))))
                                  (boolean?/c j7381 k7382 x8629))))
                               g8628))))
                          g8627))
                       'module
                       'importer
                       blocks-contains?))
                     (x8625 (input))
                     (x8618
                      (letrec*
                       ((x8619
                         (letrec*
                          ((x8624 (input))
                           (x8620
                            (letrec*
                             ((x8623 (input))
                              (x8621
                               (letrec* ((x8622 (input))) (cons x8622 '()))))
                             (cons x8623 x8621))))
                          (cons x8624 x8620))))
                       (cons 'block x8619))))
                    (x8626 x8625 x8618)))
                  (g8492
                   (letrec*
                    ((x8634
                      ((lambda (j7386 k7387 f7388)
                         (letrec*
                          ((g8635
                            (lambda (g7384 g7385)
                              (letrec*
                               ((g8636
                                 (letrec*
                                  ((x8637
                                    (letrec*
                                     ((x8639 (BSET/C j7386 k7387 g7384))
                                      (x8638 (BSET/C j7386 k7387 g7385)))
                                     (f7388 x8639 x8638))))
                                  (boolean?/c j7386 k7387 x8637))))
                               g8636))))
                          g8635))
                       'module
                       'importer
                       blocks=?))
                     (x8633 (input))
                     (x8632 (input)))
                    (x8634 x8633 x8632)))
                  (g8493
                   (letrec*
                    ((x8642
                      ((lambda (j7391 k7392 f7393)
                         (letrec*
                          ((g8643
                            (lambda (g7389 g7390)
                              (letrec*
                               ((g8644
                                 (letrec*
                                  ((x8645
                                    (letrec*
                                     ((x8647 (BSET/C j7391 k7392 g7389))
                                      (x8646 (BSET/C j7391 k7392 g7390)))
                                     (f7393 x8647 x8646))))
                                  (boolean?/c j7391 k7392 x8645))))
                               g8644))))
                          g8643))
                       'module
                       'importer
                       blocks-subset?))
                     (x8641 (input))
                     (x8640 (input)))
                    (x8642 x8641 x8640)))
                  (g8494
                   (letrec*
                    ((x8650
                      ((lambda (j7396 k7397 f7398)
                         (letrec*
                          ((g8651
                            (lambda (g7394 g7395)
                              (letrec*
                               ((g8652
                                 (letrec*
                                  ((x8653
                                    (letrec*
                                     ((x8655 (BSET/C j7396 k7397 g7394))
                                      (x8654 (BSET/C j7396 k7397 g7395)))
                                     (f7398 x8655 x8654))))
                                  (BSET/C j7396 k7397 x8653))))
                               g8652))))
                          g8651))
                       'module
                       'importer
                       blocks-intersect))
                     (x8649 (input))
                     (x8648 (input)))
                    (x8650 x8649 x8648)))
                  (g8495
                   (letrec*
                    ((x8657
                      ((lambda (j7400 k7401 f7402)
                         (letrec*
                          ((g8658
                            (lambda (g7399)
                              (letrec*
                               ((g8659
                                 (letrec*
                                  ((x8660
                                    (letrec*
                                     ((x8661 (BSET/C j7400 k7401 g7399)))
                                     (f7402 x8661))))
                                  (real?/c j7400 k7401 x8660))))
                               g8659))))
                          g8658))
                       'module
                       'importer
                       blocks-count))
                     (x8656 (input)))
                    (x8657 x8656)))
                  (g8496
                   (letrec*
                    ((x8663
                      ((lambda (j7404 k7405 f7406)
                         (letrec*
                          ((g8664
                            (lambda (g7403)
                              (letrec*
                               ((g8665
                                 (letrec*
                                  ((x8666
                                    (letrec*
                                     ((x8667 (BSET/C j7404 k7405 g7403)))
                                     (f7406 x8667))))
                                  (boolean?/c j7404 k7405 x8666))))
                               g8665))))
                          g8664))
                       'module
                       'importer
                       blocks-overflow?))
                     (x8662 (input)))
                    (x8663 x8662)))
                  (g8497
                   (letrec*
                    ((x8671
                      ((lambda (j7410 k7411 f7412)
                         (letrec*
                          ((g8672
                            (lambda (g7407 g7408 g7409)
                              (letrec*
                               ((g8673
                                 (letrec*
                                  ((x8674
                                    (letrec*
                                     ((x8677 (real?/c j7410 k7411 g7407))
                                      (x8676 (real?/c j7410 k7411 g7408))
                                      (x8675 (BSET/C j7410 k7411 g7409)))
                                     (f7412 x8677 x8676 x8675))))
                                  (BSET/C j7410 k7411 x8674))))
                               g8673))))
                          g8672))
                       'module
                       'importer
                       blocks-move))
                     (x8670 (input))
                     (x8669 (input))
                     (x8668 (input)))
                    (x8671 x8670 x8669 x8668)))
                  (g8498
                   (letrec*
                    ((x8684
                      ((lambda (j7415 k7416 f7417)
                         (letrec*
                          ((g8685
                            (lambda (g7413 g7414)
                              (letrec*
                               ((g8686
                                 (letrec*
                                  ((x8687
                                    (letrec*
                                     ((x8689 (POSN/C j7415 k7416 g7413))
                                      (x8688 (BSET/C j7415 k7416 g7414)))
                                     (f7417 x8689 x8688))))
                                  (BSET/C j7415 k7416 x8687))))
                               g8686))))
                          g8685))
                       'module
                       'importer
                       blocks-rotate-cw))
                     (x8679
                      (letrec*
                       ((x8680
                         (letrec*
                          ((x8683 (input))
                           (x8681
                            (letrec* ((x8682 (input))) (cons x8682 '()))))
                          (cons x8683 x8681))))
                       (cons 'posn x8680)))
                     (x8678 (input)))
                    (x8684 x8679 x8678)))
                  (g8499
                   (letrec*
                    ((x8696
                      ((lambda (j7420 k7421 f7422)
                         (letrec*
                          ((g8697
                            (lambda (g7418 g7419)
                              (letrec*
                               ((g8698
                                 (letrec*
                                  ((x8699
                                    (letrec*
                                     ((x8701 (POSN/C j7420 k7421 g7418))
                                      (x8700 (BSET/C j7420 k7421 g7419)))
                                     (f7422 x8701 x8700))))
                                  (BSET/C j7420 k7421 x8699))))
                               g8698))))
                          g8697))
                       'module
                       'importer
                       blocks-rotate-ccw))
                     (x8691
                      (letrec*
                       ((x8692
                         (letrec*
                          ((x8695 (input))
                           (x8693
                            (letrec* ((x8694 (input))) (cons x8694 '()))))
                          (cons x8695 x8693))))
                       (cons 'posn x8692)))
                     (x8690 (input)))
                    (x8696 x8691 x8690)))
                  (g8500
                   (letrec*
                    ((x8704
                      ((lambda (j7425 k7426 f7427)
                         (letrec*
                          ((g8705
                            (lambda (g7423 g7424)
                              (letrec*
                               ((g8706
                                 (letrec*
                                  ((x8707
                                    (letrec*
                                     ((x8709 (BSET/C j7425 k7426 g7423))
                                      (x8708 (COLOR/C j7425 k7426 g7424)))
                                     (f7427 x8709 x8708))))
                                  (BSET/C j7425 k7426 x8707))))
                               g8706))))
                          g8705))
                       'module
                       'importer
                       blocks-change-color))
                     (x8703 (input))
                     (x8702 (input)))
                    (x8704 x8703 x8702)))
                  (g8501
                   (letrec*
                    ((x8712
                      ((lambda (j7430 k7431 f7432)
                         (letrec*
                          ((g8713
                            (lambda (g7428 g7429)
                              (letrec*
                               ((g8714
                                 (letrec*
                                  ((x8715
                                    (letrec*
                                     ((x8717 (BSET/C j7430 k7431 g7428))
                                      (x8716 (real?/c j7430 k7431 g7429)))
                                     (f7432 x8717 x8716))))
                                  (BSET/C j7430 k7431 x8715))))
                               g8714))))
                          g8713))
                       'module
                       'importer
                       blocks-row))
                     (x8711 (input))
                     (x8710 (input)))
                    (x8712 x8711 x8710)))
                  (g8502
                   (letrec*
                    ((x8720
                      ((lambda (j7435 k7436 f7437)
                         (letrec*
                          ((g8721
                            (lambda (g7433 g7434)
                              (letrec*
                               ((g8722
                                 (letrec*
                                  ((x8723
                                    (letrec*
                                     ((x8725 (BSET/C j7435 k7436 g7433))
                                      (x8724 (real?/c j7435 k7436 g7434)))
                                     (f7437 x8725 x8724))))
                                  (boolean?/c j7435 k7436 x8723))))
                               g8722))))
                          g8721))
                       'module
                       'importer
                       full-row?))
                     (x8719 (input))
                     (x8718 (input)))
                    (x8720 x8719 x8718)))
                  (g8503
                   (letrec*
                    ((x8728
                      ((lambda (j7440 k7441 f7442)
                         (letrec*
                          ((g8729
                            (lambda (g7438 g7439)
                              (letrec*
                               ((g8730
                                 (letrec*
                                  ((x8731
                                    (letrec*
                                     ((x8733 (BSET/C j7440 k7441 g7438))
                                      (x8732 (BSET/C j7440 k7441 g7439)))
                                     (f7442 x8733 x8732))))
                                  (BSET/C j7440 k7441 x8731))))
                               g8730))))
                          g8729))
                       'module
                       'importer
                       blocks-union))
                     (x8727 (input))
                     (x8726 (input)))
                    (x8728 x8727 x8726)))
                  (g8504
                   (letrec*
                    ((x8735
                      ((lambda (j7444 k7445 f7446)
                         (letrec*
                          ((g8736
                            (lambda (g7443)
                              (letrec*
                               ((g8737
                                 (letrec*
                                  ((x8738
                                    (letrec*
                                     ((x8739 (BSET/C j7444 k7445 g7443)))
                                     (f7446 x8739))))
                                  (real?/c j7444 k7445 x8738))))
                               g8737))))
                          g8736))
                       'module
                       'importer
                       blocks-max-x))
                     (x8734 (input)))
                    (x8735 x8734)))
                  (g8505
                   (letrec*
                    ((x8741
                      ((lambda (j7448 k7449 f7450)
                         (letrec*
                          ((g8742
                            (lambda (g7447)
                              (letrec*
                               ((g8743
                                 (letrec*
                                  ((x8744
                                    (letrec*
                                     ((x8745 (BSET/C j7448 k7449 g7447)))
                                     (f7450 x8745))))
                                  (real?/c j7448 k7449 x8744))))
                               g8743))))
                          g8742))
                       'module
                       'importer
                       blocks-min-x))
                     (x8740 (input)))
                    (x8741 x8740)))
                  (g8506
                   (letrec*
                    ((x8747
                      ((lambda (j7452 k7453 f7454)
                         (letrec*
                          ((g8748
                            (lambda (g7451)
                              (letrec*
                               ((g8749
                                 (letrec*
                                  ((x8750
                                    (letrec*
                                     ((x8751 (BSET/C j7452 k7453 g7451)))
                                     (f7454 x8751))))
                                  (real?/c j7452 k7453 x8750))))
                               g8749))))
                          g8748))
                       'module
                       'importer
                       blocks-max-y))
                     (x8746 (input)))
                    (x8747 x8746)))
                  (g8507
                   (letrec*
                    ((x8753
                      ((lambda (j7456 k7457 f7458)
                         (letrec*
                          ((g8754
                            (lambda (g7455)
                              (letrec*
                               ((g8755
                                 (letrec*
                                  ((x8756
                                    (letrec*
                                     ((x8757 (BSET/C j7456 k7457 g7455)))
                                     (f7458 x8757))))
                                  (BSET/C j7456 k7457 x8756))))
                               g8755))))
                          g8754))
                       'module
                       'importer
                       eliminate-full-rows))
                     (x8752 (input)))
                    (x8753 x8752)))
                  (g8508
                   (letrec*
                    ((x8769
                      ((lambda (j7462 k7463 f7464)
                         (letrec*
                          ((g8770
                            (lambda (g7459 g7460 g7461)
                              (letrec*
                               ((g8771
                                 (letrec*
                                  ((x8772
                                    (letrec*
                                     ((x8775 (integer?/c j7462 k7463 g7459))
                                      (x8774 (integer?/c j7462 k7463 g7460))
                                      (x8773 (TETRA/C j7462 k7463 g7461)))
                                     (f7464 x8775 x8774 x8773))))
                                  (TETRA/C j7462 k7463 x8772))))
                               g8771))))
                          g8770))
                       'module
                       'importer
                       tetra-move))
                     (x8768 (input))
                     (x8767 (input))
                     (x8758
                      (letrec*
                       ((x8759
                         (letrec*
                          ((x8762
                            (letrec*
                             ((x8763
                               (letrec*
                                ((x8766 (input))
                                 (x8764
                                  (letrec*
                                   ((x8765 (input)))
                                   (cons x8765 '()))))
                                (cons x8766 x8764))))
                             (cons 'posn x8763)))
                           (x8760
                            (letrec* ((x8761 (input))) (cons x8761 '()))))
                          (cons x8762 x8760))))
                       (cons 'tetra x8759))))
                    (x8769 x8768 x8767 x8758)))
                  (g8509
                   (letrec*
                    ((x8785
                      ((lambda (j7466 k7467 f7468)
                         (letrec*
                          ((g8786
                            (lambda (g7465)
                              (letrec*
                               ((g8787
                                 (letrec*
                                  ((x8788
                                    (letrec*
                                     ((x8789 (TETRA/C j7466 k7467 g7465)))
                                     (f7468 x8789))))
                                  (TETRA/C j7466 k7467 x8788))))
                               g8787))))
                          g8786))
                       'module
                       'importer
                       tetra-rotate-ccw))
                     (x8776
                      (letrec*
                       ((x8777
                         (letrec*
                          ((x8780
                            (letrec*
                             ((x8781
                               (letrec*
                                ((x8784 (input))
                                 (x8782
                                  (letrec*
                                   ((x8783 (input)))
                                   (cons x8783 '()))))
                                (cons x8784 x8782))))
                             (cons 'posn x8781)))
                           (x8778
                            (letrec* ((x8779 (input))) (cons x8779 '()))))
                          (cons x8780 x8778))))
                       (cons 'tetra x8777))))
                    (x8785 x8776)))
                  (g8510
                   (letrec*
                    ((x8799
                      ((lambda (j7470 k7471 f7472)
                         (letrec*
                          ((g8800
                            (lambda (g7469)
                              (letrec*
                               ((g8801
                                 (letrec*
                                  ((x8802
                                    (letrec*
                                     ((x8803 (TETRA/C j7470 k7471 g7469)))
                                     (f7472 x8803))))
                                  (TETRA/C j7470 k7471 x8802))))
                               g8801))))
                          g8800))
                       'module
                       'importer
                       tetra-rotate-cw))
                     (x8790
                      (letrec*
                       ((x8791
                         (letrec*
                          ((x8794
                            (letrec*
                             ((x8795
                               (letrec*
                                ((x8798 (input))
                                 (x8796
                                  (letrec*
                                   ((x8797 (input)))
                                   (cons x8797 '()))))
                                (cons x8798 x8796))))
                             (cons 'posn x8795)))
                           (x8792
                            (letrec* ((x8793 (input))) (cons x8793 '()))))
                          (cons x8794 x8792))))
                       (cons 'tetra x8791))))
                    (x8799 x8790)))
                  (g8511
                   (letrec*
                    ((x8814
                      ((lambda (j7475 k7476 f7477)
                         (letrec*
                          ((g8815
                            (lambda (g7473 g7474)
                              (letrec*
                               ((g8816
                                 (letrec*
                                  ((x8817
                                    (letrec*
                                     ((x8819 (TETRA/C j7475 k7476 g7473))
                                      (x8818 (BSET/C j7475 k7476 g7474)))
                                     (f7477 x8819 x8818))))
                                  (boolean?/c j7475 k7476 x8817))))
                               g8816))))
                          g8815))
                       'module
                       'importer
                       tetra-overlaps-blocks?))
                     (x8805
                      (letrec*
                       ((x8806
                         (letrec*
                          ((x8809
                            (letrec*
                             ((x8810
                               (letrec*
                                ((x8813 (input))
                                 (x8811
                                  (letrec*
                                   ((x8812 (input)))
                                   (cons x8812 '()))))
                                (cons x8813 x8811))))
                             (cons 'posn x8810)))
                           (x8807
                            (letrec* ((x8808 (input))) (cons x8808 '()))))
                          (cons x8809 x8807))))
                       (cons 'tetra x8806)))
                     (x8804 (input)))
                    (x8814 x8805 x8804)))
                  (g8512
                   (letrec*
                    ((x8831
                      ((lambda (j7489 k7490 f7491)
                         (letrec*
                          ((g8832
                            (lambda (g7478
                                     g7479
                                     g7480
                                     g7481
                                     g7482
                                     g7483
                                     g7484
                                     g7485
                                     g7486
                                     g7487
                                     g7488)
                              (letrec*
                               ((g8833
                                 (letrec*
                                  ((x8834
                                    (letrec*
                                     ((x8845 (COLOR/C j7489 k7490 g7478))
                                      (x8844 (real?/c j7489 k7490 g7479))
                                      (x8843 (real?/c j7489 k7490 g7480))
                                      (x8842 (integer?/c j7489 k7490 g7481))
                                      (x8841 (integer?/c j7489 k7490 g7482))
                                      (x8840 (integer?/c j7489 k7490 g7483))
                                      (x8839 (integer?/c j7489 k7490 g7484))
                                      (x8838 (integer?/c j7489 k7490 g7485))
                                      (x8837 (integer?/c j7489 k7490 g7486))
                                      (x8836 (integer?/c j7489 k7490 g7487))
                                      (x8835 (integer?/c j7489 k7490 g7488)))
                                     (f7491
                                      x8845
                                      x8844
                                      x8843
                                      x8842
                                      x8841
                                      x8840
                                      x8839
                                      x8838
                                      x8837
                                      x8836
                                      x8835))))
                                  (TETRA/C j7489 k7490 x8834))))
                               g8833))))
                          g8832))
                       'module
                       'importer
                       build-tetra-blocks))
                     (x8830 (input))
                     (x8829 (input))
                     (x8828 (input))
                     (x8827 (input))
                     (x8826 (input))
                     (x8825 (input))
                     (x8824 (input))
                     (x8823 (input))
                     (x8822 (input))
                     (x8821 (input))
                     (x8820 (input)))
                    (x8831
                     x8830
                     x8829
                     x8828
                     x8827
                     x8826
                     x8825
                     x8824
                     x8823
                     x8822
                     x8821
                     x8820)))
                  (g8513
                   (letrec*
                    ((x8856
                      ((lambda (j7494 k7495 f7496)
                         (letrec*
                          ((g8857
                            (lambda (g7492 g7493)
                              (letrec*
                               ((g8858
                                 (letrec*
                                  ((x8859
                                    (letrec*
                                     ((x8861 (TETRA/C j7494 k7495 g7492))
                                      (x8860 (COLOR/C j7494 k7495 g7493)))
                                     (f7496 x8861 x8860))))
                                  (TETRA/C j7494 k7495 x8859))))
                               g8858))))
                          g8857))
                       'module
                       'importer
                       tetra-change-color))
                     (x8847
                      (letrec*
                       ((x8848
                         (letrec*
                          ((x8851
                            (letrec*
                             ((x8852
                               (letrec*
                                ((x8855 (input))
                                 (x8853
                                  (letrec*
                                   ((x8854 (input)))
                                   (cons x8854 '()))))
                                (cons x8855 x8853))))
                             (cons 'posn x8852)))
                           (x8849
                            (letrec* ((x8850 (input))) (cons x8850 '()))))
                          (cons x8851 x8849))))
                       (cons 'tetra x8848)))
                     (x8846 (input)))
                    (x8856 x8847 x8846)))
                  (g8514
                   (letrec*
                    ((x8876
                      ((lambda (j7499 k7500 f7501)
                         (letrec*
                          ((g8877
                            (lambda (g7497 g7498)
                              (letrec*
                               ((g8878
                                 (letrec*
                                  ((x8879
                                    (letrec*
                                     ((x8881 (WORLD/C j7499 k7500 g7497))
                                      (x8880 (string?/c j7499 k7500 g7498)))
                                     (f7501 x8881 x8880))))
                                  (WORLD/C j7499 k7500 x8879))))
                               g8878))))
                          g8877))
                       'module
                       'importer
                       world-key-move))
                     (x8863
                      (letrec*
                       ((x8864
                         (letrec*
                          ((x8867
                            (letrec*
                             ((x8868
                               (letrec*
                                ((x8871
                                  (letrec*
                                   ((x8872
                                     (letrec*
                                      ((x8875 (input))
                                       (x8873
                                        (letrec*
                                         ((x8874 (input)))
                                         (cons x8874 '()))))
                                      (cons x8875 x8873))))
                                   (cons 'posn x8872)))
                                 (x8869
                                  (letrec*
                                   ((x8870 (input)))
                                   (cons x8870 '()))))
                                (cons x8871 x8869))))
                             (cons 'tetra x8868)))
                           (x8865
                            (letrec* ((x8866 (input))) (cons x8866 '()))))
                          (cons x8867 x8865))))
                       (cons 'world x8864)))
                     (x8862 (input)))
                    (x8876 x8863 x8862)))
                  (g8515
                   (letrec*
                    ((x8896
                      ((lambda (j7504 k7505 f7506)
                         (letrec*
                          ((g8897
                            (lambda (g7502 g7503)
                              (letrec*
                               ((g8898
                                 (letrec*
                                  ((x8899
                                    (letrec*
                                     ((x8903 (WORLD/C j7504 k7505 g7502))
                                      (x8900
                                       (letrec*
                                        ((x8901
                                          (letrec*
                                           ((x8902 (listof TETRA/C)))
                                           (and/c cons?/c x8902))))
                                        (x8901 j7504 k7505 g7503))))
                                     (f7506 x8903 x8900))))
                                  (WORLD/C j7504 k7505 x8899))))
                               g8898))))
                          g8897))
                       'module
                       'importer
                       next-world))
                     (x8883
                      (letrec*
                       ((x8884
                         (letrec*
                          ((x8887
                            (letrec*
                             ((x8888
                               (letrec*
                                ((x8891
                                  (letrec*
                                   ((x8892
                                     (letrec*
                                      ((x8895 (input))
                                       (x8893
                                        (letrec*
                                         ((x8894 (input)))
                                         (cons x8894 '()))))
                                      (cons x8895 x8893))))
                                   (cons 'posn x8892)))
                                 (x8889
                                  (letrec*
                                   ((x8890 (input)))
                                   (cons x8890 '()))))
                                (cons x8891 x8889))))
                             (cons 'tetra x8888)))
                           (x8885
                            (letrec* ((x8886 (input))) (cons x8886 '()))))
                          (cons x8887 x8885))))
                       (cons 'world x8884)))
                     (x8882 (input)))
                    (x8896 x8883 x8882)))
                  (g8516
                   (letrec*
                    ((x8917
                      ((lambda (j7508 k7509 f7510)
                         (letrec*
                          ((g8918
                            (lambda (g7507)
                              (letrec*
                               ((g8919
                                 (letrec*
                                  ((x8920
                                    (letrec*
                                     ((x8921 (WORLD/C j7508 k7509 g7507)))
                                     (f7510 x8921))))
                                  (BSET/C j7508 k7509 x8920))))
                               g8919))))
                          g8918))
                       'module
                       'importer
                       ghost-blocks))
                     (x8904
                      (letrec*
                       ((x8905
                         (letrec*
                          ((x8908
                            (letrec*
                             ((x8909
                               (letrec*
                                ((x8912
                                  (letrec*
                                   ((x8913
                                     (letrec*
                                      ((x8916 (input))
                                       (x8914
                                        (letrec*
                                         ((x8915 (input)))
                                         (cons x8915 '()))))
                                      (cons x8916 x8914))))
                                   (cons 'posn x8913)))
                                 (x8910
                                  (letrec*
                                   ((x8911 (input)))
                                   (cons x8911 '()))))
                                (cons x8912 x8910))))
                             (cons 'tetra x8909)))
                           (x8906
                            (letrec* ((x8907 (input))) (cons x8907 '()))))
                          (cons x8908 x8906))))
                       (cons 'world x8905))))
                    (x8917 x8904)))
                  (g8517
                   (letrec*
                    ((x8923
                      ((lambda (j7512 k7513 f7514)
                         (letrec*
                          ((g8924
                            (lambda (g7511)
                              (letrec*
                               ((g8925
                                 (letrec*
                                  ((x8926
                                    (letrec*
                                     ((x8927 (any/c j7512 k7513 g7511)))
                                     (f7514 x8927))))
                                  (boolean?/c j7512 k7513 x8926))))
                               g8925))))
                          g8924))
                       'module
                       'importer
                       image?))
                     (x8922 (input)))
                    (x8923 x8922)))
                  (g8518
                   (letrec*
                    ((x8930
                      ((lambda (j7517 k7518 f7519)
                         (letrec*
                          ((g8931
                            (lambda (g7515 g7516)
                              (letrec*
                               ((g8932
                                 (letrec*
                                  ((x8933
                                    (letrec*
                                     ((x8935 (image? j7517 k7518 g7515))
                                      (x8934 (image? j7517 k7518 g7516)))
                                     (f7519 x8935 x8934))))
                                  (image? j7517 k7518 x8933))))
                               g8932))))
                          g8931))
                       'module
                       'importer
                       overlay))
                     (x8929 (input))
                     (x8928 (input)))
                    (x8930 x8929 x8928)))
                  (g8519
                   (letrec*
                    ((x8939
                      ((lambda (j7523 k7524 f7525)
                         (letrec*
                          ((g8940
                            (lambda (g7520 g7521 g7522)
                              (letrec*
                               ((g8941
                                 (letrec*
                                  ((x8942
                                    (letrec*
                                     ((x8945 (real?/c j7523 k7524 g7520))
                                      (x8944 (real?/c j7523 k7524 g7521))
                                      (x8943 (string?/c j7523 k7524 g7522)))
                                     (f7525 x8945 x8944 x8943))))
                                  (image? j7523 k7524 x8942))))
                               g8941))))
                          g8940))
                       'module
                       'importer
                       circle))
                     (x8938 (input))
                     (x8937 (input))
                     (x8936 (input)))
                    (x8939 x8938 x8937 x8936)))
                  (g8520
                   (letrec*
                    ((x8950
                      ((lambda (j7530 k7531 f7532)
                         (letrec*
                          ((g8951
                            (lambda (g7526 g7527 g7528 g7529)
                              (letrec*
                               ((g8952
                                 (letrec*
                                  ((x8953
                                    (letrec*
                                     ((x8957 (real?/c j7530 k7531 g7526))
                                      (x8956 (real?/c j7530 k7531 g7527))
                                      (x8955 (COLOR/C j7530 k7531 g7528))
                                      (x8954 (COLOR/C j7530 k7531 g7529)))
                                     (f7532 x8957 x8956 x8955 x8954))))
                                  (image? j7530 k7531 x8953))))
                               g8952))))
                          g8951))
                       'module
                       'importer
                       rectangle))
                     (x8949 (input))
                     (x8948 (input))
                     (x8947 (input))
                     (x8946 (input)))
                    (x8950 x8949 x8948 x8947 x8946)))
                  (g8521
                   (letrec*
                    ((x8962
                      ((lambda (j7537 k7538 f7539)
                         (letrec*
                          ((g8963
                            (lambda (g7533 g7534 g7535 g7536)
                              (letrec*
                               ((g8964
                                 (letrec*
                                  ((x8965
                                    (letrec*
                                     ((x8969 (image/c j7537 k7538 g7533))
                                      (x8968 (real?/c j7537 k7538 g7534))
                                      (x8967 (real?/c j7537 k7538 g7535))
                                      (x8966 (image/c j7537 k7538 g7536)))
                                     (f7539 x8969 x8968 x8967 x8966))))
                                  (image/c j7537 k7538 x8965))))
                               g8964))))
                          g8963))
                       'module
                       'importer
                       place-image))
                     (x8961 (input))
                     (x8960 (input))
                     (x8959 (input))
                     (x8958 (input)))
                    (x8962 x8961 x8960 x8959 x8958)))
                  (g8522
                   (letrec*
                    ((x8972
                      ((lambda (j7542 k7543 f7544)
                         (letrec*
                          ((g8973
                            (lambda (g7540 g7541)
                              (letrec*
                               ((g8974
                                 (letrec*
                                  ((x8975
                                    (letrec*
                                     ((x8977 (real?/c j7542 k7543 g7540))
                                      (x8976 (real?/c j7542 k7543 g7541)))
                                     (f7544 x8977 x8976))))
                                  (image? j7542 k7543 x8975))))
                               g8974))))
                          g8973))
                       'module
                       'importer
                       empty-scene))
                     (x8971 (input))
                     (x8970 (input)))
                    (x8972 x8971 x8970)))
                  (g8523
                   (letrec*
                    ((x8979
                      ((lambda (j7546 k7547 f7548)
                         (letrec*
                          ((g8980
                            (lambda (g7545)
                              (letrec*
                               ((g8981
                                 (letrec*
                                  ((x8982
                                    (letrec*
                                     ((x8983
                                       (letrec*
                                        ((x8984
                                          (letrec*
                                           ((x8985 (listof TETRA/C)))
                                           (and/c cons?/c x8985))))
                                        (x8984 j7546 k7547 g7545))))
                                     (f7548 x8983))))
                                  (TETRA/C j7546 k7547 x8982))))
                               g8981))))
                          g8980))
                       'module
                       'importer
                       list-pick-random))
                     (x8978 (input)))
                    (x8979 x8978)))
                  (g8524 (integer?/c 'module 'importer neg-1))
                  (g8525
                   (letrec*
                    ((x8999
                      ((lambda (j7550 k7551 f7552)
                         (letrec*
                          ((g9000
                            (lambda (g7549)
                              (letrec*
                               ((g9001
                                 (letrec*
                                  ((x9002
                                    (letrec*
                                     ((x9003 (WORLD/C j7550 k7551 g7549)))
                                     (f7552 x9003))))
                                  (image/c j7550 k7551 x9002))))
                               g9001))))
                          g9000))
                       'module
                       'importer
                       world->image))
                     (x8986
                      (letrec*
                       ((x8987
                         (letrec*
                          ((x8990
                            (letrec*
                             ((x8991
                               (letrec*
                                ((x8994
                                  (letrec*
                                   ((x8995
                                     (letrec*
                                      ((x8998 (input))
                                       (x8996
                                        (letrec*
                                         ((x8997 (input)))
                                         (cons x8997 '()))))
                                      (cons x8998 x8996))))
                                   (cons 'posn x8995)))
                                 (x8992
                                  (letrec*
                                   ((x8993 (input)))
                                   (cons x8993 '()))))
                                (cons x8994 x8992))))
                             (cons 'tetra x8991)))
                           (x8988
                            (letrec* ((x8989 (input))) (cons x8989 '()))))
                          (cons x8990 x8988))))
                       (cons 'world x8987))))
                    (x8999 x8986)))
                  (g8526
                   (letrec*
                    ((x9005
                      ((lambda (j7554 k7555 f7556)
                         (letrec*
                          ((g9006
                            (lambda (g7553)
                              (letrec*
                               ((g9007
                                 (letrec*
                                  ((x9008
                                    (letrec*
                                     ((x9009 (BSET/C j7554 k7555 g7553)))
                                     (f7556 x9009))))
                                  (image/c j7554 k7555 x9008))))
                               g9007))))
                          g9006))
                       'module
                       'importer
                       blocks->image))
                     (x9004 (input)))
                    (x9005 x9004)))
                  (g8527
                   (letrec*
                    ((x9017
                      ((lambda (j7558 k7559 f7560)
                         (letrec*
                          ((g9018
                            (lambda (g7557)
                              (letrec*
                               ((g9019
                                 (letrec*
                                  ((x9020
                                    (letrec*
                                     ((x9021 (BLOCK/C j7558 k7559 g7557)))
                                     (f7560 x9021))))
                                  (image/c j7558 k7559 x9020))))
                               g9019))))
                          g9018))
                       'module
                       'importer
                       block->image))
                     (x9010
                      (letrec*
                       ((x9011
                         (letrec*
                          ((x9016 (input))
                           (x9012
                            (letrec*
                             ((x9015 (input))
                              (x9013
                               (letrec* ((x9014 (input))) (cons x9014 '()))))
                             (cons x9015 x9013))))
                          (cons x9016 x9012))))
                       (cons 'block x9011))))
                    (x9017 x9010)))
                  (g8528
                   (letrec*
                    ((x9030
                      ((lambda (j7563 k7564 f7565)
                         (letrec*
                          ((g9031
                            (lambda (g7561 g7562)
                              (letrec*
                               ((g9032
                                 (letrec*
                                  ((x9033
                                    (letrec*
                                     ((x9035 (BLOCK/C j7563 k7564 g7561))
                                      (x9034 (image/c j7563 k7564 g7562)))
                                     (f7565 x9035 x9034))))
                                  (image/c j7563 k7564 x9033))))
                               g9032))))
                          g9031))
                       'module
                       'importer
                       place-block))
                     (x9023
                      (letrec*
                       ((x9024
                         (letrec*
                          ((x9029 (input))
                           (x9025
                            (letrec*
                             ((x9028 (input))
                              (x9026
                               (letrec* ((x9027 (input))) (cons x9027 '()))))
                             (cons x9028 x9026))))
                          (cons x9029 x9025))))
                       (cons 'block x9024)))
                     (x9022 (input)))
                    (x9030 x9023 x9022)))
                  (g8529
                   (letrec*
                    ((x9037
                      ((lambda (j7567 k7568 f7569)
                         (letrec*
                          ((g9038
                            (lambda (g7566)
                              (letrec*
                               ((g9039
                                 (letrec*
                                  ((x9040
                                    (letrec*
                                     ((x9041
                                       (letrec*
                                        ((x9042
                                          (letrec*
                                           ((x9043 (listof TETRA/C)))
                                           (and/c cons?/c x9043))))
                                        (x9042 j7567 k7568 g7566))))
                                     (f7569 x9041))))
                                  (WORLD/C j7567 k7568 x9040))))
                               g9039))))
                          g9038))
                       'module
                       'importer
                       world0))
                     (x9036 (input)))
                    (x9037 x9036))))
                 g8529))))
             g7606))))
         g7604)))
      g7603))))
